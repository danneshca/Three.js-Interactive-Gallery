{"version":3,"file":"ModelLoader-0d8e80a4.js","sources":["../../src/pages/core/ModelLoader.jsx"],"sourcesContent":["import React, { Suspense, useRef, useState, useEffect } from 'react'\nimport { Canvas, useFrame, useLoader } from '@react-three/fiber'\nimport { OrbitControls, Text, useGLTF, useAnimations, Environment, ContactShadows } from '@react-three/drei'\nimport { useControls } from 'leva'\nimport styled from 'styled-components'\nimport { motion } from 'framer-motion'\nimport * as THREE from 'three'\n\nconst PageContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  position: relative;\n  padding-top: 80px;\n`\n\nconst CanvasContainer = styled.div`\n  flex: 1;\n  height: calc(100vh - 80px);\n  position: relative;\n`\n\nconst InfoPanel = styled(motion.div)`\n  width: 350px;\n  background: rgba(26, 26, 26, 0.95);\n  backdrop-filter: blur(20px);\n  border-left: 1px solid rgba(255, 255, 255, 0.1);\n  padding: 2rem;\n  overflow-y: auto;\n  z-index: 100;\n`\n\nconst InfoTitle = styled.h2`\n  color: var(--accent-color);\n  font-size: 1.5rem;\n  margin-bottom: 1rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n`\n\nconst InfoDescription = styled.p`\n  color: var(--text-secondary);\n  line-height: 1.6;\n  margin-bottom: 1.5rem;\n`\n\nconst TechList = styled.ul`\n  color: var(--text-secondary);\n  margin-left: 1rem;\n  \n  li {\n    margin-bottom: 0.5rem;\n    \n    code {\n      background: rgba(0, 255, 255, 0.1);\n      color: var(--accent-color);\n      padding: 0.2rem 0.4rem;\n      border-radius: 4px;\n      font-size: 0.9rem;\n    }\n  }\n`\n\nconst CodeSection = styled.details`\n  margin-top: 2rem;\n  \n  summary {\n    color: var(--accent-color);\n    cursor: pointer;\n    font-weight: 600;\n    margin-bottom: 1rem;\n  }\n  \n  pre {\n    background: rgba(0, 0, 0, 0.5);\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    border-radius: 8px;\n    padding: 1rem;\n    overflow-x: auto;\n    font-size: 0.8rem;\n    color: var(--text-secondary);\n  }\n`\n\nconst ModelSelector = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  margin-bottom: 2rem;\n`\n\nconst ModelButton = styled.button`\n  background: ${props => props.active ? 'var(--accent-color)' : 'rgba(255, 255, 255, 0.1)'};\n  color: ${props => props.active ? 'var(--primary-bg)' : 'var(--text-primary)'};\n  border: 1px solid ${props => props.active ? 'var(--accent-color)' : 'rgba(255, 255, 255, 0.2)'};\n  border-radius: 8px;\n  padding: 0.75rem 1rem;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  font-family: inherit;\n  \n  &:hover {\n    background: ${props => props.active ? 'var(--accent-color)' : 'rgba(255, 255, 255, 0.2)'};\n    transform: translateY(-2px);\n  }\n`\n\n// Simple 3D models created with code (since we don't have external GLTF files)\nfunction SimpleRobot({ position, scale = 1 }) {\n  const groupRef = useRef()\n  const [hovered, setHovered] = useState(false)\n  \n  useFrame((state) => {\n    if (groupRef.current) {\n      groupRef.current.rotation.y = Math.sin(state.clock.elapsedTime) * 0.3\n      groupRef.current.position.y = position[1] + Math.sin(state.clock.elapsedTime * 2) * 0.1\n    }\n  })\n  \n  return (\n    <group \n      ref={groupRef} \n      position={position} \n      scale={scale}\n      onPointerOver={() => setHovered(true)}\n      onPointerOut={() => setHovered(false)}\n    >\n      {/* Body */}\n      <mesh position={[0, 0, 0]} castShadow>\n        <boxGeometry args={[1, 1.5, 0.8]} />\n        <meshStandardMaterial color={hovered ? \"#ff6b6b\" : \"#4ecdc4\"} />\n      </mesh>\n      \n      {/* Head */}\n      <mesh position={[0, 1.2, 0]} castShadow>\n        <boxGeometry args={[0.8, 0.8, 0.8]} />\n        <meshStandardMaterial color={hovered ? \"#45b7d1\" : \"#2ecc71\"} />\n      </mesh>\n      \n      {/* Eyes */}\n      <mesh position={[-0.2, 1.3, 0.4]}>\n        <sphereGeometry args={[0.1]} />\n        <meshStandardMaterial color=\"#ffffff\" />\n      </mesh>\n      <mesh position={[0.2, 1.3, 0.4]}>\n        <sphereGeometry args={[0.1]} />\n        <meshStandardMaterial color=\"#ffffff\" />\n      </mesh>\n      \n      {/* Arms */}\n      <mesh position={[-0.8, 0.3, 0]} castShadow>\n        <boxGeometry args={[0.3, 1, 0.3]} />\n        <meshStandardMaterial color={hovered ? \"#f39c12\" : \"#e67e22\"} />\n      </mesh>\n      <mesh position={[0.8, 0.3, 0]} castShadow>\n        <boxGeometry args={[0.3, 1, 0.3]} />\n        <meshStandardMaterial color={hovered ? \"#f39c12\" : \"#e67e22\"} />\n      </mesh>\n      \n      {/* Legs */}\n      <mesh position={[-0.3, -1.2, 0]} castShadow>\n        <boxGeometry args={[0.3, 1, 0.3]} />\n        <meshStandardMaterial color={hovered ? \"#9b59b6\" : \"#8e44ad\"} />\n      </mesh>\n      <mesh position={[0.3, -1.2, 0]} castShadow>\n        <boxGeometry args={[0.3, 1, 0.3]} />\n        <meshStandardMaterial color={hovered ? \"#9b59b6\" : \"#8e44ad\"} />\n      </mesh>\n    </group>\n  )\n}\n\nfunction AnimatedCar({ position, scale = 1 }) {\n  const groupRef = useRef()\n  const wheelRefs = [useRef(), useRef(), useRef(), useRef()]\n  \n  useFrame((state) => {\n    if (groupRef.current) {\n      // Car movement\n      const time = state.clock.elapsedTime\n      groupRef.current.position.x = position[0] + Math.sin(time * 0.5) * 3\n      \n      // Wheel rotation\n      wheelRefs.forEach(wheelRef => {\n        if (wheelRef.current) {\n          wheelRef.current.rotation.x = time * 2\n        }\n      })\n    }\n  })\n  \n  return (\n    <group ref={groupRef} position={position} scale={scale}>\n      {/* Car body */}\n      <mesh position={[0, 0.5, 0]} castShadow>\n        <boxGeometry args={[2, 0.8, 1]} />\n        <meshStandardMaterial color=\"#e74c3c\" />\n      </mesh>\n      \n      {/* Car roof */}\n      <mesh position={[0, 1.2, 0]} castShadow>\n        <boxGeometry args={[1.2, 0.6, 0.9]} />\n        <meshStandardMaterial color=\"#c0392b\" />\n      </mesh>\n      \n      {/* Wheels */}\n      <mesh ref={wheelRefs[0]} position={[-0.7, 0, 0.6]} castShadow>\n        <cylinderGeometry args={[0.3, 0.3, 0.2, 16]} />\n        <meshStandardMaterial color=\"#2c3e50\" />\n      </mesh>\n      <mesh ref={wheelRefs[1]} position={[0.7, 0, 0.6]} castShadow>\n        <cylinderGeometry args={[0.3, 0.3, 0.2, 16]} />\n        <meshStandardMaterial color=\"#2c3e50\" />\n      </mesh>\n      <mesh ref={wheelRefs[2]} position={[-0.7, 0, -0.6]} castShadow>\n        <cylinderGeometry args={[0.3, 0.3, 0.2, 16]} />\n        <meshStandardMaterial color=\"#2c3e50\" />\n      </mesh>\n      <mesh ref={wheelRefs[3]} position={[0.7, 0, -0.6]} castShadow>\n        <cylinderGeometry args={[0.3, 0.3, 0.2, 16]} />\n        <meshStandardMaterial color=\"#2c3e50\" />\n      </mesh>\n      \n      {/* Windows */}\n      <mesh position={[0.3, 1.2, 0.46]}>\n        <boxGeometry args={[0.8, 0.4, 0.02]} />\n        <meshStandardMaterial color=\"#3498db\" transparent opacity={0.7} />\n      </mesh>\n      <mesh position={[-0.3, 1.2, 0.46]}>\n        <boxGeometry args={[0.8, 0.4, 0.02]} />\n        <meshStandardMaterial color=\"#3498db\" transparent opacity={0.7} />\n      </mesh>\n    </group>\n  )\n}\n\nfunction FloatingCrystal({ position, scale = 1 }) {\n  const meshRef = useRef()\n  \n  useFrame((state) => {\n    if (meshRef.current) {\n      meshRef.current.rotation.x = state.clock.elapsedTime * 0.5\n      meshRef.current.rotation.y = state.clock.elapsedTime * 0.7\n      meshRef.current.position.y = position[1] + Math.sin(state.clock.elapsedTime * 1.5) * 0.3\n    }\n  })\n  \n  return (\n    <mesh ref={meshRef} position={position} scale={scale} castShadow>\n      <octahedronGeometry args={[1]} />\n      <meshPhysicalMaterial \n        color=\"#9b59b6\"\n        metalness={0.1}\n        roughness={0.1}\n        transmission={0.9}\n        thickness={1}\n        clearcoat={1}\n        clearcoatRoughness={0.1}\n      />\n    </mesh>\n  )\n}\n\nfunction Scene() {\n  const [selectedModel, setSelectedModel] = useState('robot')\n  \n  const { \n    modelScale,\n    animationSpeed,\n    showWireframe,\n    environmentPreset\n  } = useControls('模型控制', {\n    modelScale: { value: 1, min: 0.5, max: 3, step: 0.1 },\n    animationSpeed: { value: 1, min: 0, max: 3, step: 0.1 },\n    showWireframe: { value: false },\n    environmentPreset: {\n      value: 'city',\n      options: {\n        '城市': 'city',\n        '日落': 'sunset',\n        '森林': 'forest',\n        '工作室': 'studio',\n        '仓库': 'warehouse'\n      }\n    }\n  })\n  \n  const models = {\n    robot: <SimpleRobot position={[0, 0, 0]} scale={modelScale} />,\n    car: <AnimatedCar position={[0, 0, 0]} scale={modelScale} />,\n    crystal: <FloatingCrystal position={[0, 2, 0]} scale={modelScale} />\n  }\n  \n  return (\n    <>\n      <Environment preset={environmentPreset} />\n      \n      {/* Ground */}\n      <ContactShadows \n        position={[0, -2, 0]} \n        opacity={0.4} \n        scale={20} \n        blur={2} \n        far={4} \n      />\n      \n      {/* Models */}\n      {models[selectedModel]}\n      \n      {/* Additional scene elements */}\n      <mesh position={[0, -2, 0]} receiveShadow>\n        <planeGeometry args={[20, 20]} />\n        <meshStandardMaterial color=\"#2c3e50\" transparent opacity={0.1} />\n      </mesh>\n      \n      {/* Title */}\n      <Text\n        position={[0, 4, 0]}\n        fontSize={0.8}\n        color=\"#00ffff\"\n        anchorX=\"center\"\n        anchorY=\"middle\"\n      >\n        3D 模型展示\n      </Text>\n      \n      {/* Model selector UI in 3D space */}\n      <group position={[-4, 2, 0]}>\n        <Text\n          position={[0, 1, 0]}\n          fontSize={0.3}\n          color=\"#ffffff\"\n          anchorX=\"center\"\n        >\n          选择模型:\n        </Text>\n        \n        {['robot', 'car', 'crystal'].map((model, index) => (\n          <mesh \n            key={model}\n            position={[0, 0.5 - index * 0.4, 0]}\n            onClick={() => setSelectedModel(model)}\n            onPointerOver={(e) => {\n              e.object.material.color.setHex(selectedModel === model ? 0x00ffff : 0x4ecdc4)\n              document.body.style.cursor = 'pointer'\n            }}\n            onPointerOut={(e) => {\n              e.object.material.color.setHex(selectedModel === model ? 0x00ffff : 0x666666)\n              document.body.style.cursor = 'default'\n            }}\n          >\n            <boxGeometry args={[1.5, 0.3, 0.1]} />\n            <meshStandardMaterial \n              color={selectedModel === model ? '#00ffff' : '#666666'}\n              transparent\n              opacity={0.8}\n            />\n          </mesh>\n        ))}\n      </group>\n    </>\n  )\n}\n\nfunction ModelLoader() {\n  const [selectedModel, setSelectedModel] = useState('robot')\n  \n  const modelInfo = {\n    robot: {\n      name: '机器人模型',\n      description: '一个简单的机器人模型，展示了基础的几何体组合和动画效果。',\n      features: ['悬浮动画', '鼠标交互', '颜色变化']\n    },\n    car: {\n      name: '汽车模型',\n      description: '动画汽车模型，展示了复杂的运动动画和轮子旋转效果。',\n      features: ['路径动画', '轮子旋转', '透明窗户']\n    },\n    crystal: {\n      name: '水晶模型',\n      description: '透明水晶模型，展示了高级材质效果和物理渲染。',\n      features: ['透明材质', '折射效果', '浮动动画']\n    }\n  }\n  \n  return (\n    <PageContainer>\n      <CanvasContainer>\n        <Canvas\n          shadows\n          camera={{ position: [5, 3, 5], fov: 75 }}\n          gl={{ antialias: true }}\n        >\n          <Suspense fallback={null}>\n            <Scene />\n            <OrbitControls\n              enableDamping\n              dampingFactor={0.05}\n              minDistance={3}\n              maxDistance={20}\n              maxPolarAngle={Math.PI / 2 + 0.3}\n            />\n          </Suspense>\n        </Canvas>\n      </CanvasContainer>\n      \n      <InfoPanel\n        initial={{ x: 350 }}\n        animate={{ x: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        <InfoTitle>\n          🏗️ 模型加载器\n        </InfoTitle>\n        \n        <InfoDescription>\n          Three.js 支持多种 3D 模型格式，其中 GLTF 是最推荐的格式。本演示展示了程序化创建的 3D 模型和动画效果。\n        </InfoDescription>\n        \n        <h3 style={{ color: 'var(--accent-color)', marginBottom: '1rem' }}>模型选择</h3>\n        <ModelSelector>\n          {Object.entries(modelInfo).map(([key, info]) => (\n            <ModelButton\n              key={key}\n              active={selectedModel === key}\n              onClick={() => setSelectedModel(key)}\n            >\n              {info.name}\n            </ModelButton>\n          ))}\n        </ModelSelector>\n        \n        <h3 style={{ color: 'var(--accent-color)', marginBottom: '1rem' }}>当前模型信息</h3>\n        <InfoDescription>\n          <strong>{modelInfo[selectedModel].name}</strong><br/>\n          {modelInfo[selectedModel].description}\n        </InfoDescription>\n        \n        <h4 style={{ color: 'var(--text-primary)', marginBottom: '0.5rem' }}>特性:</h4>\n        <TechList>\n          {modelInfo[selectedModel].features.map((feature, index) => (\n            <li key={index}>{feature}</li>\n          ))}\n        </TechList>\n        \n        <h3 style={{ color: 'var(--accent-color)', marginBottom: '1rem', marginTop: '2rem' }}>支持的格式</h3>\n        <TechList>\n          <li><code>GLTF/GLB</code> - 推荐格式，支持动画、材质</li>\n          <li><code>FBX</code> - Autodesk 格式，广泛使用</li>\n          <li><code>OBJ</code> - 简单几何体格式</li>\n          <li><code>DAE</code> - Collada 格式</li>\n          <li><code>STL</code> - 3D 打印常用格式</li>\n        </TechList>\n        \n        <h3 style={{ color: 'var(--accent-color)', marginBottom: '1rem', marginTop: '2rem' }}>动画系统</h3>\n        <TechList>\n          <li><code>AnimationMixer</code> - 动画混合器</li>\n          <li><code>AnimationClip</code> - 动画片段</li>\n          <li><code>KeyframeTrack</code> - 关键帧轨道</li>\n          <li><code>AnimationAction</code> - 动画动作</li>\n        </TechList>\n        \n        <CodeSection>\n          <summary>🔍 查看核心代码</summary>\n          <pre>{`// GLTF 模型加载\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\n\nconst loader = new GLTFLoader()\nloader.load('model.gltf', (gltf) => {\n  const model = gltf.scene\n  scene.add(model)\n  \n  // 动画设置\n  const mixer = new THREE.AnimationMixer(model)\n  const clips = gltf.animations\n  \n  clips.forEach((clip) => {\n    const action = mixer.clipAction(clip)\n    action.play()\n  })\n  \n  // 在渲染循环中更新动画\n  function animate() {\n    mixer.update(clock.getDelta())\n    renderer.render(scene, camera)\n  }\n})\n\n// 使用 drei 的 useGLTF hook\nimport { useGLTF, useAnimations } from '@react-three/drei'\n\nfunction Model() {\n  const { scene, animations } = useGLTF('model.gltf')\n  const { actions } = useAnimations(animations, scene)\n  \n  useEffect(() => {\n    actions['AnimationName']?.play()\n  }, [actions])\n  \n  return <primitive object={scene} />\n}`}</pre>\n        </CodeSection>\n      </InfoPanel>\n    </PageContainer>\n  )\n}\n\nexport default ModelLoader"],"names":["PageContainer","styled","CanvasContainer","InfoPanel","motion","InfoTitle","InfoDescription","TechList","CodeSection","ModelSelector","ModelButton","props","SimpleRobot","position","scale","groupRef","useRef","hovered","setHovered","useState","useFrame","state","jsxs","jsx","AnimatedCar","wheelRefs","time","wheelRef","FloatingCrystal","meshRef","Scene","selectedModel","setSelectedModel","modelScale","animationSpeed","showWireframe","environmentPreset","useControls","models","Fragment","Environment","ContactShadows","Text","model","index","e","ModelLoader","modelInfo","Canvas","Suspense","OrbitControls","key","info","feature"],"mappings":"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"}