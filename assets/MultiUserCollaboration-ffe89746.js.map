{"version":3,"file":"MultiUserCollaboration-ffe89746.js","sources":["../../src/pages/experiments/MultiUserCollaboration.jsx"],"sourcesContent":["import React, { Suspense, useRef, useState, useEffect, useCallback } from 'react'\nimport { Canvas, useFrame, useThree } from '@react-three/fiber'\nimport { OrbitControls, Text, Box, Sphere, Cylinder } from '@react-three/drei'\nimport { useControls } from 'leva'\nimport styled from 'styled-components'\nimport { motion } from 'framer-motion'\nimport * as THREE from 'three'\n\nconst PageContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  position: relative;\n  padding-top: 80px;\n`\n\nconst CanvasContainer = styled.div`\n  flex: 1;\n  height: calc(100vh - 80px);\n  position: relative;\n`\n\nconst InfoPanel = styled(motion.div)`\n  width: 350px;\n  background: rgba(26, 26, 26, 0.95);\n  backdrop-filter: blur(20px);\n  border-left: 1px solid rgba(255, 255, 255, 0.1);\n  padding: 2rem;\n  overflow-y: auto;\n  z-index: 100;\n`\n\nconst InfoTitle = styled.h2`\n  color: var(--accent-color);\n  font-size: 1.5rem;\n  margin-bottom: 1rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n`\n\nconst InfoDescription = styled.p`\n  color: var(--text-secondary);\n  line-height: 1.6;\n  margin-bottom: 1.5rem;\n`\n\nconst TechList = styled.ul`\n  color: var(--text-secondary);\n  margin-left: 1rem;\n  \n  li {\n    margin-bottom: 0.5rem;\n    \n    code {\n      background: rgba(0, 255, 255, 0.1);\n      color: var(--accent-color);\n      padding: 0.2rem 0.4rem;\n      border-radius: 4px;\n      font-size: 0.9rem;\n    }\n  }\n`\n\nconst CodeSection = styled.details`\n  margin-top: 2rem;\n  \n  summary {\n    color: var(--accent-color);\n    cursor: pointer;\n    font-weight: 600;\n    margin-bottom: 1rem;\n  }\n  \n  pre {\n    background: rgba(0, 0, 0, 0.5);\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    border-radius: 8px;\n    padding: 1rem;\n    overflow-x: auto;\n    font-size: 0.8rem;\n    color: var(--text-secondary);\n  }\n`\n\nconst ConnectionPanel = styled.div`\n  background: rgba(0, 0, 0, 0.3);\n  border-radius: 8px;\n  padding: 1rem;\n  margin: 1rem 0;\n  \n  .connection-status {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    margin-bottom: 1rem;\n    \n    .status-dot {\n      width: 8px;\n      height: 8px;\n      border-radius: 50%;\n      background: ${props => props.connected ? '#4CAF50' : '#f44336'};\n    }\n    \n    .status-text {\n      color: ${props => props.connected ? '#4CAF50' : '#f44336'};\n      font-weight: 600;\n    }\n  }\n  \n  .user-list {\n    .user-item {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      padding: 0.5rem;\n      margin-bottom: 0.5rem;\n      background: rgba(255, 255, 255, 0.05);\n      border-radius: 4px;\n      \n      .user-color {\n        width: 12px;\n        height: 12px;\n        border-radius: 50%;\n      }\n      \n      .user-name {\n        color: var(--text-secondary);\n        font-size: 0.9rem;\n      }\n      \n      .user-status {\n        margin-left: auto;\n        font-size: 0.8rem;\n        color: var(--accent-color);\n      }\n    }\n  }\n`\n\nconst ControlButton = styled.button`\n  background: ${props => props.active ? 'var(--accent-color)' : 'rgba(255, 255, 255, 0.1)'};\n  color: ${props => props.active ? '#000' : 'var(--text-secondary)'};\n  border: 1px solid ${props => props.active ? 'var(--accent-color)' : 'rgba(255, 255, 255, 0.2)'};\n  padding: 0.5rem 1rem;\n  border-radius: 4px;\n  font-size: 0.9rem;\n  cursor: pointer;\n  margin: 0.25rem;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    background: var(--accent-color);\n    color: #000;\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`\n\n// 模拟WebRTC连接管理器\nclass CollaborationManager {\n  constructor() {\n    this.users = new Map()\n    this.localUser = {\n      id: this.generateUserId(),\n      name: `用户${Math.floor(Math.random() * 1000)}`,\n      color: this.generateUserColor(),\n      cursor: { x: 0, y: 0, z: 0 },\n      camera: { position: [0, 0, 5], target: [0, 0, 0] },\n      selection: null\n    }\n    this.connected = false\n    this.callbacks = {\n      onUserJoin: () => {},\n      onUserLeave: () => {},\n      onUserUpdate: () => {},\n      onObjectUpdate: () => {},\n      onConnectionChange: () => {}\n    }\n    \n    // 模拟一些在线用户\n    this.simulateUsers()\n  }\n  \n  generateUserId() {\n    return 'user_' + Math.random().toString(36).substr(2, 9)\n  }\n  \n  generateUserColor() {\n    const colors = ['#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#feca57', '#ff9ff3', '#54a0ff', '#5f27cd']\n    return colors[Math.floor(Math.random() * colors.length)]\n  }\n  \n  simulateUsers() {\n    // 添加一些模拟用户\n    const mockUsers = [\n      { name: '设计师Alice', color: '#ff6b6b' },\n      { name: '开发者Bob', color: '#4ecdc4' },\n      { name: '产品经理Carol', color: '#45b7d1' }\n    ]\n    \n    mockUsers.forEach((user, index) => {\n      const userId = this.generateUserId()\n      this.users.set(userId, {\n        id: userId,\n        name: user.name,\n        color: user.color,\n        cursor: {\n          x: (Math.random() - 0.5) * 10,\n          y: (Math.random() - 0.5) * 10,\n          z: (Math.random() - 0.5) * 10\n        },\n        camera: {\n          position: [\n            Math.random() * 10 - 5,\n            Math.random() * 10 - 5,\n            Math.random() * 10 - 5\n          ],\n          target: [0, 0, 0]\n        },\n        selection: null,\n        lastUpdate: Date.now()\n      })\n    })\n  }\n  \n  connect() {\n    // 模拟连接过程\n    setTimeout(() => {\n      this.connected = true\n      this.callbacks.onConnectionChange(true)\n      \n      // 开始模拟用户活动\n      this.startUserSimulation()\n    }, 1000)\n  }\n  \n  disconnect() {\n    this.connected = false\n    this.callbacks.onConnectionChange(false)\n    this.users.clear()\n  }\n  \n  startUserSimulation() {\n    // 模拟用户光标移动\n    setInterval(() => {\n      if (!this.connected) return\n      \n      this.users.forEach((user, userId) => {\n        // 随机移动光标\n        user.cursor.x += (Math.random() - 0.5) * 0.5\n        user.cursor.y += (Math.random() - 0.5) * 0.5\n        user.cursor.z += (Math.random() - 0.5) * 0.5\n        \n        // 限制范围\n        user.cursor.x = Math.max(-10, Math.min(10, user.cursor.x))\n        user.cursor.y = Math.max(-10, Math.min(10, user.cursor.y))\n        user.cursor.z = Math.max(-10, Math.min(10, user.cursor.z))\n        \n        user.lastUpdate = Date.now()\n        this.callbacks.onUserUpdate(user)\n      })\n    }, 100)\n    \n    // 模拟用户偶尔选择对象\n    setInterval(() => {\n      if (!this.connected) return\n      \n      this.users.forEach((user, userId) => {\n        if (Math.random() < 0.1) { // 10%概率选择对象\n          user.selection = Math.random() < 0.5 ? `object_${Math.floor(Math.random() * 5)}` : null\n          this.callbacks.onUserUpdate(user)\n        }\n      })\n    }, 2000)\n  }\n  \n  updateLocalUser(updates) {\n    Object.assign(this.localUser, updates)\n    // 在真实应用中，这里会通过WebRTC发送更新\n  }\n  \n  selectObject(objectId) {\n    this.localUser.selection = objectId\n    this.callbacks.onObjectUpdate({\n      type: 'select',\n      objectId,\n      userId: this.localUser.id\n    })\n  }\n  \n  moveObject(objectId, position) {\n    this.callbacks.onObjectUpdate({\n      type: 'move',\n      objectId,\n      position,\n      userId: this.localUser.id\n    })\n  }\n  \n  on(event, callback) {\n    this.callbacks[event] = callback\n  }\n  \n  getUsers() {\n    return Array.from(this.users.values())\n  }\n  \n  getLocalUser() {\n    return this.localUser\n  }\n}\n\n// 用户光标组件\nfunction UserCursor({ user, isLocal = false }) {\n  const meshRef = useRef()\n  const textRef = useRef()\n  \n  useFrame(() => {\n    if (meshRef.current) {\n      meshRef.current.position.set(user.cursor.x, user.cursor.y, user.cursor.z)\n      \n      // 添加轻微的浮动动画\n      if (!isLocal) {\n        meshRef.current.position.y += Math.sin(Date.now() * 0.003) * 0.1\n      }\n    }\n    \n    if (textRef.current) {\n      textRef.current.position.set(\n        user.cursor.x,\n        user.cursor.y + 0.5,\n        user.cursor.z\n      )\n    }\n  })\n  \n  return (\n    <group>\n      {/* 光标指针 */}\n      <group ref={meshRef}>\n        <Sphere args={[0.05]} position={[0, 0, 0]}>\n          <meshBasicMaterial color={user.color} />\n        </Sphere>\n        \n        {/* 光标尾迹 */}\n        <Cylinder args={[0.01, 0.02, 0.3]} position={[0, -0.15, 0]}>\n          <meshBasicMaterial color={user.color} transparent opacity={0.7} />\n        </Cylinder>\n        \n        {/* 选择指示器 */}\n        {user.selection && (\n          <Sphere args={[0.1]} position={[0, 0, 0]}>\n            <meshBasicMaterial \n              color={user.color} \n              transparent \n              opacity={0.3}\n              wireframe\n            />\n          </Sphere>\n        )}\n      </group>\n      \n      {/* 用户名标签 */}\n      <Text\n        ref={textRef}\n        fontSize={0.2}\n        color={user.color}\n        anchorX=\"center\"\n        anchorY=\"bottom\"\n      >\n        {user.name}\n      </Text>\n    </group>\n  )\n}\n\n// 可交互对象组件\nfunction InteractiveObject({ id, position, color, onSelect, selectedBy }) {\n  const meshRef = useRef()\n  const [hovered, setHovered] = useState(false)\n  \n  useFrame((state) => {\n    if (meshRef.current) {\n      // 旋转动画\n      meshRef.current.rotation.x = state.clock.elapsedTime * 0.5\n      meshRef.current.rotation.y = state.clock.elapsedTime * 0.3\n      \n      // 选中时的缩放效果\n      const scale = selectedBy ? 1.2 : hovered ? 1.1 : 1\n      meshRef.current.scale.setScalar(scale)\n    }\n  })\n  \n  const handleClick = () => {\n    onSelect(id)\n  }\n  \n  return (\n    <Box\n      ref={meshRef}\n      position={position}\n      args={[1, 1, 1]}\n      onClick={handleClick}\n      onPointerOver={() => setHovered(true)}\n      onPointerOut={() => setHovered(false)}\n    >\n      <meshStandardMaterial \n        color={selectedBy ? selectedBy.color : color}\n        emissive={selectedBy ? selectedBy.color : '#000000'}\n        emissiveIntensity={selectedBy ? 0.3 : 0}\n        wireframe={selectedBy ? true : false}\n      />\n      \n      {/* 选中边框 */}\n      {selectedBy && (\n        <Box args={[1.1, 1.1, 1.1]}>\n          <meshBasicMaterial \n            color={selectedBy.color}\n            transparent\n            opacity={0.2}\n            wireframe\n          />\n        </Box>\n      )}\n    </Box>\n  )\n}\n\n// 相机视锥可视化\nfunction CameraFrustum({ user }) {\n  const frustumRef = useRef()\n  \n  useFrame(() => {\n    if (frustumRef.current) {\n      frustumRef.current.position.set(...user.camera.position)\n      frustumRef.current.lookAt(...user.camera.target)\n    }\n  })\n  \n  return (\n    <group ref={frustumRef}>\n      {/* 相机位置指示器 */}\n      <Box args={[0.2, 0.1, 0.3]}>\n        <meshBasicMaterial color={user.color} />\n      </Box>\n      \n      {/* 视锥线框 */}\n      <group>\n        {/* 这里可以添加更复杂的视锥可视化 */}\n        <Cylinder args={[0.01, 0.01, 2]} position={[0, 0, -1]}>\n          <meshBasicMaterial color={user.color} transparent opacity={0.5} />\n        </Cylinder>\n      </group>\n    </group>\n  )\n}\n\nfunction Scene() {\n  const [collaboration] = useState(() => new CollaborationManager())\n  const [users, setUsers] = useState([])\n  const [connected, setConnected] = useState(false)\n  const [objects, setObjects] = useState([\n    { id: 'object_0', position: [-3, 0, 0], color: '#ff6b6b', selectedBy: null },\n    { id: 'object_1', position: [-1, 0, 0], color: '#4ecdc4', selectedBy: null },\n    { id: 'object_2', position: [1, 0, 0], color: '#45b7d1', selectedBy: null },\n    { id: 'object_3', position: [3, 0, 0], color: '#96ceb4', selectedBy: null },\n    { id: 'object_4', position: [0, 2, 0], color: '#feca57', selectedBy: null }\n  ])\n  \n  const {\n    showUserCursors,\n    showCameraFrustums,\n    enableVoiceChat,\n    showUserNames\n  } = useControls('协作设置', {\n    showUserCursors: { value: true, label: '显示用户光标' },\n    showCameraFrustums: { value: false, label: '显示相机视锥' },\n    enableVoiceChat: { value: false, label: '启用语音聊天' },\n    showUserNames: { value: true, label: '显示用户名' }\n  })\n  \n  useEffect(() => {\n    // 设置协作事件监听\n    collaboration.on('onConnectionChange', setConnected)\n    collaboration.on('onUserUpdate', (user) => {\n      setUsers(prev => {\n        const newUsers = [...prev]\n        const index = newUsers.findIndex(u => u.id === user.id)\n        if (index >= 0) {\n          newUsers[index] = user\n        } else {\n          newUsers.push(user)\n        }\n        return newUsers\n      })\n    })\n    \n    collaboration.on('onObjectUpdate', (update) => {\n      if (update.type === 'select') {\n        setObjects(prev => prev.map(obj => ({\n          ...obj,\n          selectedBy: obj.id === update.objectId ? \n            users.find(u => u.id === update.userId) || collaboration.getLocalUser() : \n            obj.selectedBy\n        })))\n      }\n    })\n    \n    // 初始化用户列表\n    setUsers(collaboration.getUsers())\n    \n    return () => {\n      collaboration.disconnect()\n    }\n  }, [collaboration, users])\n  \n  // 鼠标移动更新本地用户光标\n  useFrame((state) => {\n    if (connected) {\n      const { mouse, camera } = state\n      \n      // 将鼠标坐标转换为世界坐标\n      const vector = new THREE.Vector3(mouse.x * 5, mouse.y * 5, 0)\n      vector.unproject(camera)\n      \n      collaboration.updateLocalUser({\n        cursor: { x: vector.x, y: vector.y, z: vector.z },\n        camera: {\n          position: camera.position.toArray(),\n          target: [0, 0, 0] // 简化处理\n        }\n      })\n    }\n  })\n  \n  const handleObjectSelect = (objectId) => {\n    collaboration.selectObject(objectId)\n  }\n  \n  return (\n    <>\n      {/* 交互对象 */}\n      {objects.map(obj => (\n        <InteractiveObject\n          key={obj.id}\n          id={obj.id}\n          position={obj.position}\n          color={obj.color}\n          selectedBy={obj.selectedBy}\n          onSelect={handleObjectSelect}\n        />\n      ))}\n      \n      {/* 用户光标 */}\n      {connected && showUserCursors && (\n        <>\n          {users.map(user => (\n            <UserCursor key={user.id} user={user} />\n          ))}\n          <UserCursor user={collaboration.getLocalUser()} isLocal />\n        </>\n      )}\n      \n      {/* 相机视锥 */}\n      {connected && showCameraFrustums && (\n        <>\n          {users.map(user => (\n            <CameraFrustum key={`camera_${user.id}`} user={user} />\n          ))}\n        </>\n      )}\n      \n      {/* 地面网格 */}\n      <Box position={[0, -2, 0]} args={[20, 0.1, 20]}>\n        <meshStandardMaterial color=\"#2c2c2c\" wireframe />\n      </Box>\n      \n      {/* 光照 */}\n      <ambientLight intensity={0.4} />\n      <directionalLight position={[10, 10, 5]} intensity={0.6} />\n      <pointLight position={[-10, 5, -10]} color=\"#ff0080\" intensity={0.3} />\n      <pointLight position={[10, 5, 10]} color=\"#0080ff\" intensity={0.3} />\n      \n      {/* 标题 */}\n      <Text\n        position={[0, 4, 0]}\n        fontSize={1.5}\n        color=\"#00ffff\"\n        anchorX=\"center\"\n        anchorY=\"middle\"\n      >\n        多用户协作\n      </Text>\n      \n      <Text\n        position={[0, 3.5, 0]}\n        fontSize={0.5}\n        color=\"#ffffff\"\n        anchorX=\"center\"\n        anchorY=\"middle\"\n      >\n        {connected ? `${users.length + 1} 位用户在线` : '离线模式'}\n      </Text>\n    </>\n  )\n}\n\nfunction MultiUserCollaboration() {\n  const [collaboration] = useState(() => new CollaborationManager())\n  const [connected, setConnected] = useState(false)\n  const [users, setUsers] = useState([])\n  \n  useEffect(() => {\n    collaboration.on('onConnectionChange', setConnected)\n    collaboration.on('onUserUpdate', () => {\n      setUsers(collaboration.getUsers())\n    })\n    \n    setUsers(collaboration.getUsers())\n  }, [collaboration])\n  \n  const handleConnect = () => {\n    if (connected) {\n      collaboration.disconnect()\n    } else {\n      collaboration.connect()\n    }\n  }\n  \n  return (\n    <PageContainer>\n      <CanvasContainer>\n        <Canvas\n          camera={{ position: [8, 5, 8], fov: 75 }}\n          gl={{ antialias: true }}\n        >\n          <Suspense fallback={null}>\n            <Scene />\n            <OrbitControls\n              enableDamping\n              dampingFactor={0.05}\n              minDistance={3}\n              maxDistance={30}\n            />\n          </Suspense>\n        </Canvas>\n      </CanvasContainer>\n      \n      <InfoPanel\n        initial={{ x: 350 }}\n        animate={{ x: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        <InfoTitle>\n          👥 多用户协作\n        </InfoTitle>\n        \n        <InfoDescription>\n          基于WebRTC的实时多用户协作系统，支持多人同时编辑3D场景，实时同步用户操作、光标位置和对象状态。\n        </InfoDescription>\n        \n        <ConnectionPanel connected={connected}>\n          <div className=\"connection-status\">\n            <div className=\"status-dot\"></div>\n            <span className=\"status-text\">\n              {connected ? '已连接' : '未连接'}\n            </span>\n          </div>\n          \n          <ControlButton \n            active={connected}\n            onClick={handleConnect}\n          >\n            {connected ? '断开连接' : '连接协作'}\n          </ControlButton>\n          \n          {connected && (\n            <div className=\"user-list\">\n              <h4 style={{ color: 'var(--accent-color)', marginBottom: '0.5rem' }}>在线用户</h4>\n              \n              <div className=\"user-item\">\n                <div \n                  className=\"user-color\" \n                  style={{ background: collaboration.getLocalUser().color }}\n                ></div>\n                <span className=\"user-name\">{collaboration.getLocalUser().name} (你)</span>\n                <span className=\"user-status\">本地</span>\n              </div>\n              \n              {users.map(user => (\n                <div key={user.id} className=\"user-item\">\n                  <div \n                    className=\"user-color\" \n                    style={{ background: user.color }}\n                  ></div>\n                  <span className=\"user-name\">{user.name}</span>\n                  <span className=\"user-status\">在线</span>\n                </div>\n              ))}\n            </div>\n          )}\n        </ConnectionPanel>\n        \n        <h3 style={{ color: 'var(--accent-color)', marginBottom: '1rem' }}>核心技术</h3>\n        <TechList>\n          <li><code>WebRTC</code> - 点对点实时通信</li>\n          <li><code>WebSocket</code> - 信令服务器连接</li>\n          <li><code>操作同步</code> - 实时同步用户操作</li>\n          <li><code>冲突解决</code> - 处理并发编辑冲突</li>\n          <li><code>状态管理</code> - 分布式状态同步</li>\n        </TechList>\n        \n        <h3 style={{ color: 'var(--accent-color)', marginBottom: '1rem' }}>协作功能</h3>\n        <TechList>\n          <li><code>实时光标</code> - 显示其他用户的鼠标位置</li>\n          <li><code>对象选择</code> - 多用户对象选择状态</li>\n          <li><code>相机同步</code> - 可选的视角同步</li>\n          <li><code>语音聊天</code> - 集成语音通信</li>\n          <li><code>文字聊天</code> - 实时文字交流</li>\n        </TechList>\n        \n        <h3 style={{ color: 'var(--accent-color)', marginBottom: '1rem' }}>数据同步</h3>\n        <TechList>\n          <li><code>增量更新</code> - 只传输变化的数据</li>\n          <li><code>操作队列</code> - 保证操作顺序一致性</li>\n          <li><code>版本控制</code> - 支持撤销和重做</li>\n          <li><code>离线支持</code> - 离线操作缓存</li>\n        </TechList>\n        \n        <h3 style={{ color: 'var(--accent-color)', marginBottom: '1rem' }}>应用场景</h3>\n        <InfoDescription>\n          • 3D设计协作平台<br/>\n          • 虚拟会议室<br/>\n          • 在线教育培训<br/>\n          • 游戏开发工具<br/>\n          • 建筑设计评审\n        </InfoDescription>\n        \n        <h3 style={{ color: 'var(--accent-color)', marginBottom: '1rem' }}>技术挑战</h3>\n        <InfoDescription>\n          • 网络延迟处理<br/>\n          • 并发冲突解决<br/>\n          • 大规模用户支持<br/>\n          • 数据一致性保证<br/>\n          • 安全性和权限控制\n        </InfoDescription>\n        \n        <CodeSection>\n          <summary>🔍 查看核心代码</summary>\n          <pre>{`// WebRTC协作管理器\nclass CollaborationManager {\n  constructor() {\n    this.localUser = this.createUser()\n    this.remoteUsers = new Map()\n    this.peerConnections = new Map()\n    this.dataChannels = new Map()\n    this.signalingSocket = null\n    \n    this.setupSignaling()\n  }\n  \n  async setupSignaling() {\n    // 连接信令服务器\n    this.signalingSocket = new WebSocket('wss://signaling-server.com')\n    \n    this.signalingSocket.onmessage = async (event) => {\n      const message = JSON.parse(event.data)\n      await this.handleSignalingMessage(message)\n    }\n  }\n  \n  async handleSignalingMessage(message) {\n    switch (message.type) {\n      case 'user-joined':\n        await this.createPeerConnection(message.userId)\n        break\n        \n      case 'offer':\n        await this.handleOffer(message)\n        break\n        \n      case 'answer':\n        await this.handleAnswer(message)\n        break\n        \n      case 'ice-candidate':\n        await this.handleIceCandidate(message)\n        break\n        \n      case 'user-left':\n        this.handleUserLeft(message.userId)\n        break\n    }\n  }\n  \n  async createPeerConnection(userId) {\n    const peerConnection = new RTCPeerConnection({\n      iceServers: [\n        { urls: 'stun:stun.l.google.com:19302' },\n        { urls: 'turn:turn-server.com', username: 'user', credential: 'pass' }\n      ]\n    })\n    \n    // 创建数据通道\n    const dataChannel = peerConnection.createDataChannel('collaboration', {\n      ordered: true\n    })\n    \n    dataChannel.onopen = () => {\n      console.log('Data channel opened with', userId)\n    }\n    \n    dataChannel.onmessage = (event) => {\n      this.handleDataChannelMessage(userId, JSON.parse(event.data))\n    }\n    \n    // ICE候选处理\n    peerConnection.onicecandidate = (event) => {\n      if (event.candidate) {\n        this.sendSignalingMessage({\n          type: 'ice-candidate',\n          candidate: event.candidate,\n          targetUserId: userId\n        })\n      }\n    }\n    \n    this.peerConnections.set(userId, peerConnection)\n    this.dataChannels.set(userId, dataChannel)\n    \n    // 创建offer\n    const offer = await peerConnection.createOffer()\n    await peerConnection.setLocalDescription(offer)\n    \n    this.sendSignalingMessage({\n      type: 'offer',\n      offer: offer,\n      targetUserId: userId\n    })\n  }\n  \n  async handleOffer(message) {\n    const peerConnection = new RTCPeerConnection({\n      iceServers: [\n        { urls: 'stun:stun.l.google.com:19302' }\n      ]\n    })\n    \n    // 处理数据通道\n    peerConnection.ondatachannel = (event) => {\n      const dataChannel = event.channel\n      dataChannel.onmessage = (event) => {\n        this.handleDataChannelMessage(message.userId, JSON.parse(event.data))\n      }\n      this.dataChannels.set(message.userId, dataChannel)\n    }\n    \n    peerConnection.onicecandidate = (event) => {\n      if (event.candidate) {\n        this.sendSignalingMessage({\n          type: 'ice-candidate',\n          candidate: event.candidate,\n          targetUserId: message.userId\n        })\n      }\n    }\n    \n    await peerConnection.setRemoteDescription(message.offer)\n    \n    const answer = await peerConnection.createAnswer()\n    await peerConnection.setLocalDescription(answer)\n    \n    this.sendSignalingMessage({\n      type: 'answer',\n      answer: answer,\n      targetUserId: message.userId\n    })\n    \n    this.peerConnections.set(message.userId, peerConnection)\n  }\n  \n  handleDataChannelMessage(userId, data) {\n    switch (data.type) {\n      case 'cursor-update':\n        this.updateUserCursor(userId, data.position)\n        break\n        \n      case 'object-select':\n        this.handleObjectSelection(userId, data.objectId)\n        break\n        \n      case 'object-move':\n        this.handleObjectMove(userId, data.objectId, data.position)\n        break\n        \n      case 'camera-update':\n        this.updateUserCamera(userId, data.camera)\n        break\n    }\n  }\n  \n  // 广播数据到所有连接的用户\n  broadcastData(data) {\n    this.dataChannels.forEach((channel, userId) => {\n      if (channel.readyState === 'open') {\n        channel.send(JSON.stringify(data))\n      }\n    })\n  }\n  \n  // 更新本地用户光标位置\n  updateCursor(position) {\n    this.localUser.cursor = position\n    \n    this.broadcastData({\n      type: 'cursor-update',\n      position: position,\n      userId: this.localUser.id\n    })\n  }\n  \n  // 选择对象\n  selectObject(objectId) {\n    this.localUser.selectedObject = objectId\n    \n    this.broadcastData({\n      type: 'object-select',\n      objectId: objectId,\n      userId: this.localUser.id\n    })\n  }\n  \n  // 移动对象\n  moveObject(objectId, position) {\n    this.broadcastData({\n      type: 'object-move',\n      objectId: objectId,\n      position: position,\n      userId: this.localUser.id\n    })\n  }\n  \n  // 更新相机位置\n  updateCamera(camera) {\n    this.localUser.camera = camera\n    \n    this.broadcastData({\n      type: 'camera-update',\n      camera: camera,\n      userId: this.localUser.id\n    })\n  }\n  \n  sendSignalingMessage(message) {\n    if (this.signalingSocket.readyState === WebSocket.OPEN) {\n      this.signalingSocket.send(JSON.stringify(message))\n    }\n  }\n  \n  createUser() {\n    return {\n      id: this.generateUserId(),\n      name: \\`用户\\${Math.floor(Math.random() * 1000)}\\`,\n      color: this.generateRandomColor(),\n      cursor: { x: 0, y: 0, z: 0 },\n      camera: { position: [0, 0, 5], target: [0, 0, 0] },\n      selectedObject: null\n    }\n  }\n}\n\n// 使用示例\nconst collaboration = new CollaborationManager()\n\n// 监听用户操作\ndocument.addEventListener('mousemove', (event) => {\n  const position = screenToWorldPosition(event.clientX, event.clientY)\n  collaboration.updateCursor(position)\n})\n\n// 监听对象选择\nscene.addEventListener('click', (event) => {\n  const intersects = raycaster.intersectObjects(scene.children)\n  if (intersects.length > 0) {\n    collaboration.selectObject(intersects[0].object.userData.id)\n  }\n})\n\n// 监听相机变化\ncontrols.addEventListener('change', () => {\n  collaboration.updateCamera({\n    position: camera.position.toArray(),\n    target: controls.target.toArray()\n  })\n})`}</pre>\n        </CodeSection>\n      </InfoPanel>\n    </PageContainer>\n  )\n}\n\nexport default MultiUserCollaboration"],"names":["PageContainer","styled","CanvasContainer","InfoPanel","motion","InfoTitle","InfoDescription","TechList","CodeSection","ConnectionPanel","props","ControlButton","CollaborationManager","colors","user","index","userId","updates","objectId","position","event","callback","UserCursor","isLocal","meshRef","useRef","textRef","useFrame","jsxs","jsx","Sphere","Cylinder","Text","InteractiveObject","id","color","onSelect","selectedBy","hovered","setHovered","useState","state","scale","handleClick","Box","CameraFrustum","frustumRef","Scene","collaboration","users","setUsers","connected","setConnected","objects","setObjects","showUserCursors","showCameraFrustums","enableVoiceChat","showUserNames","useControls","useEffect","prev","newUsers","u","update","obj","mouse","camera","vector","THREE.Vector3","handleObjectSelect","Fragment","MultiUserCollaboration","handleConnect","Canvas","Suspense","OrbitControls"],"mappings":"ySAQA,MAAMA,EAAgBC,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQvBC,EAAkBD,EAAO;AAAA;AAAA;AAAA;AAAA,EAMzBE,EAAYF,EAAOG,EAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAU7BC,EAAYJ,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASnBK,EAAkBL,EAAO;AAAA;AAAA;AAAA;AAAA,EAMzBM,EAAWN,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBlBO,EAAcP,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAqBrBQ,EAAkBR,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAgBFS,GAAAA,EAAM,UAAY,UAAY,SAAS;AAAA;AAAA;AAAA;AAAA,eAI5CA,GAAAA,EAAM,UAAY,UAAY,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAmCzDC,EAAgBV,EAAO;AAAA,gBACJS,GAAAA,EAAM,OAAS,sBAAwB,0BAA0B;AAAA,WACtEA,GAAAA,EAAM,OAAS,OAAS,uBAAuB;AAAA,sBACpCA,GAAAA,EAAM,OAAS,sBAAwB,0BAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAoBhG,MAAME,CAAqB,CACzB,aAAc,CACP,KAAA,UAAY,IACjB,KAAK,UAAY,CACf,GAAI,KAAK,eAAe,EACxB,KAAM,KAAK,KAAK,MAAM,KAAK,OAAO,EAAI,GAAI,CAAC,GAC3C,MAAO,KAAK,kBAAkB,EAC9B,OAAQ,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,CAAE,EAC3B,OAAQ,CAAE,SAAU,CAAC,EAAG,EAAG,CAAC,EAAG,OAAQ,CAAC,EAAG,EAAG,CAAC,CAAE,EACjD,UAAW,IAAA,EAEb,KAAK,UAAY,GACjB,KAAK,UAAY,CACf,WAAY,IAAM,CAAC,EACnB,YAAa,IAAM,CAAC,EACpB,aAAc,IAAM,CAAC,EACrB,eAAgB,IAAM,CAAC,EACvB,mBAAoB,IAAM,CAAC,CAAA,EAI7B,KAAK,cAAc,CACrB,CAEA,gBAAiB,CACR,MAAA,QAAU,KAAK,SAAS,SAAS,EAAE,EAAE,OAAO,EAAG,CAAC,CACzD,CAEA,mBAAoB,CACZ,MAAAC,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,EAC/F,OAAAA,EAAO,KAAK,MAAM,KAAK,SAAWA,EAAO,MAAM,CAAC,CACzD,CAEA,eAAgB,CAEI,CAChB,CAAE,KAAM,WAAY,MAAO,SAAU,EACrC,CAAE,KAAM,SAAU,MAAO,SAAU,EACnC,CAAE,KAAM,YAAa,MAAO,SAAU,CAAA,EAG9B,QAAQ,CAACC,EAAMC,IAAU,CAC3B,MAAAC,EAAS,KAAK,iBACf,KAAA,MAAM,IAAIA,EAAQ,CACrB,GAAIA,EACJ,KAAMF,EAAK,KACX,MAAOA,EAAK,MACZ,OAAQ,CACN,GAAI,KAAK,OAAO,EAAI,IAAO,GAC3B,GAAI,KAAK,OAAO,EAAI,IAAO,GAC3B,GAAI,KAAK,OAAO,EAAI,IAAO,EAC7B,EACA,OAAQ,CACN,SAAU,CACR,KAAK,SAAW,GAAK,EACrB,KAAK,SAAW,GAAK,EACrB,KAAK,SAAW,GAAK,CACvB,EACA,OAAQ,CAAC,EAAG,EAAG,CAAC,CAClB,EACA,UAAW,KACX,WAAY,KAAK,IAAI,CAAA,CACtB,CAAA,CACF,CACH,CAEA,SAAU,CAER,WAAW,IAAM,CACf,KAAK,UAAY,GACZ,KAAA,UAAU,mBAAmB,EAAI,EAGtC,KAAK,oBAAoB,GACxB,GAAI,CACT,CAEA,YAAa,CACX,KAAK,UAAY,GACZ,KAAA,UAAU,mBAAmB,EAAK,EACvC,KAAK,MAAM,OACb,CAEA,qBAAsB,CAEpB,YAAY,IAAM,CACX,KAAK,WAEV,KAAK,MAAM,QAAQ,CAACA,EAAME,IAAW,CAEnCF,EAAK,OAAO,IAAM,KAAK,SAAW,IAAO,GACzCA,EAAK,OAAO,IAAM,KAAK,SAAW,IAAO,GACzCA,EAAK,OAAO,IAAM,KAAK,SAAW,IAAO,GAGpCA,EAAA,OAAO,EAAI,KAAK,IAAI,IAAK,KAAK,IAAI,GAAIA,EAAK,OAAO,CAAC,CAAC,EACpDA,EAAA,OAAO,EAAI,KAAK,IAAI,IAAK,KAAK,IAAI,GAAIA,EAAK,OAAO,CAAC,CAAC,EACpDA,EAAA,OAAO,EAAI,KAAK,IAAI,IAAK,KAAK,IAAI,GAAIA,EAAK,OAAO,CAAC,CAAC,EAEpDA,EAAA,WAAa,KAAK,MAClB,KAAA,UAAU,aAAaA,CAAI,CAAA,CACjC,GACA,GAAG,EAGN,YAAY,IAAM,CACX,KAAK,WAEV,KAAK,MAAM,QAAQ,CAACA,EAAME,IAAW,CAC/B,KAAK,OAAO,EAAI,KAClBF,EAAK,UAAY,KAAK,OAAO,EAAI,GAAM,UAAU,KAAK,MAAM,KAAK,OAAA,EAAW,CAAC,CAAC,GAAK,KAC9E,KAAA,UAAU,aAAaA,CAAI,EAClC,CACD,GACA,GAAI,CACT,CAEA,gBAAgBG,EAAS,CAChB,OAAA,OAAO,KAAK,UAAWA,CAAO,CAEvC,CAEA,aAAaC,EAAU,CACrB,KAAK,UAAU,UAAYA,EAC3B,KAAK,UAAU,eAAe,CAC5B,KAAM,SACN,SAAAA,EACA,OAAQ,KAAK,UAAU,EAAA,CACxB,CACH,CAEA,WAAWA,EAAUC,EAAU,CAC7B,KAAK,UAAU,eAAe,CAC5B,KAAM,OACN,SAAAD,EACA,SAAAC,EACA,OAAQ,KAAK,UAAU,EAAA,CACxB,CACH,CAEA,GAAGC,EAAOC,EAAU,CACb,KAAA,UAAUD,CAAK,EAAIC,CAC1B,CAEA,UAAW,CACT,OAAO,MAAM,KAAK,KAAK,MAAM,OAAQ,CAAA,CACvC,CAEA,cAAe,CACb,OAAO,KAAK,SACd,CACF,CAGA,SAASC,EAAW,CAAE,KAAAR,EAAM,QAAAS,EAAU,IAAS,CAC7C,MAAMC,EAAUC,EAAAA,SACVC,EAAUD,EAAAA,SAEhB,OAAAE,EAAS,IAAM,CACTH,EAAQ,UACFA,EAAA,QAAQ,SAAS,IAAIV,EAAK,OAAO,EAAGA,EAAK,OAAO,EAAGA,EAAK,OAAO,CAAC,EAGnES,IACKC,EAAA,QAAQ,SAAS,GAAK,KAAK,IAAI,KAAK,IAAA,EAAQ,IAAK,EAAI,KAI7DE,EAAQ,SACVA,EAAQ,QAAQ,SAAS,IACvBZ,EAAK,OAAO,EACZA,EAAK,OAAO,EAAI,GAChBA,EAAK,OAAO,CAAA,CAEhB,CACD,SAGE,QAEC,CAAA,SAAA,CAACc,EAAAA,KAAA,QAAA,CAAM,IAAKJ,EACV,SAAA,CAAAK,MAACC,GAAO,KAAM,CAAC,GAAI,EAAG,SAAU,CAAC,EAAG,EAAG,CAAC,EACtC,SAACD,EAAA,IAAA,oBAAA,CAAkB,MAAOf,EAAK,KAAO,CAAA,EACxC,EAGAe,EAAAA,IAACE,GAAS,KAAM,CAAC,IAAM,IAAM,EAAG,EAAG,SAAU,CAAC,EAAG,KAAO,CAAC,EACvD,SAACF,EAAA,IAAA,oBAAA,CAAkB,MAAOf,EAAK,MAAO,YAAW,GAAC,QAAS,EAAA,CAAK,CAClE,CAAA,EAGCA,EAAK,WACHe,EAAAA,IAAAC,EAAA,CAAO,KAAM,CAAC,EAAG,EAAG,SAAU,CAAC,EAAG,EAAG,CAAC,EACrC,SAAAD,EAAA,IAAC,oBAAA,CACC,MAAOf,EAAK,MACZ,YAAW,GACX,QAAS,GACT,UAAS,EAAA,CAAA,EAEb,CAAA,EAEJ,EAGAe,EAAA,IAACG,EAAA,CACC,IAAKN,EACL,SAAU,GACV,MAAOZ,EAAK,MACZ,QAAQ,SACR,QAAQ,SAEP,SAAKA,EAAA,IAAA,CACR,CACF,CAAA,CAAA,CAEJ,CAGA,SAASmB,EAAkB,CAAE,GAAAC,EAAI,SAAAf,EAAU,MAAAgB,EAAO,SAAAC,EAAU,WAAAC,GAAc,CACxE,MAAMb,EAAUC,EAAAA,SACV,CAACa,EAASC,CAAU,EAAIC,WAAS,EAAK,EAE5Cb,EAAUc,GAAU,CAClB,GAAIjB,EAAQ,QAAS,CAEnBA,EAAQ,QAAQ,SAAS,EAAIiB,EAAM,MAAM,YAAc,GACvDjB,EAAQ,QAAQ,SAAS,EAAIiB,EAAM,MAAM,YAAc,GAGvD,MAAMC,EAAQL,EAAa,IAAMC,EAAU,IAAM,EACzCd,EAAA,QAAQ,MAAM,UAAUkB,CAAK,CACvC,CAAA,CACD,EAED,MAAMC,EAAc,IAAM,CACxBP,EAASF,CAAE,CAAA,EAIX,OAAAN,EAAA,KAACgB,EAAA,CACC,IAAKpB,EACL,SAAAL,EACA,KAAM,CAAC,EAAG,EAAG,CAAC,EACd,QAASwB,EACT,cAAe,IAAMJ,EAAW,EAAI,EACpC,aAAc,IAAMA,EAAW,EAAK,EAEpC,SAAA,CAAAV,EAAA,IAAC,uBAAA,CACC,MAAOQ,EAAaA,EAAW,MAAQF,EACvC,SAAUE,EAAaA,EAAW,MAAQ,UAC1C,kBAAmBA,EAAa,GAAM,EACtC,UAAW,EAAAA,CAAoB,CACjC,EAGCA,SACEO,EAAI,CAAA,KAAM,CAAC,IAAK,IAAK,GAAG,EACvB,SAAAf,EAAA,IAAC,oBAAA,CACC,MAAOQ,EAAW,MAClB,YAAW,GACX,QAAS,GACT,UAAS,EAAA,CAAA,EAEb,CAAA,CAAA,CAAA,CAIR,CAGA,SAASQ,EAAc,CAAE,KAAA/B,GAAQ,CAC/B,MAAMgC,EAAarB,EAAAA,SAEnB,OAAAE,EAAS,IAAM,CACTmB,EAAW,UACbA,EAAW,QAAQ,SAAS,IAAI,GAAGhC,EAAK,OAAO,QAAQ,EACvDgC,EAAW,QAAQ,OAAO,GAAGhC,EAAK,OAAO,MAAM,EACjD,CACD,EAGCc,EAAA,KAAC,QAAM,CAAA,IAAKkB,EAEV,SAAA,CAAAjB,EAAA,IAACe,EAAI,CAAA,KAAM,CAAC,GAAK,GAAK,EAAG,EACvB,SAAAf,EAAA,IAAC,oBAAkB,CAAA,MAAOf,EAAK,KAAO,CAAA,EACxC,EAGAe,EAAAA,IAAC,QAEC,CAAA,SAAAA,EAAA,IAACE,EAAS,CAAA,KAAM,CAAC,IAAM,IAAM,CAAC,EAAG,SAAU,CAAC,EAAG,EAAG,EAAE,EAClD,SAACF,EAAAA,IAAA,oBAAA,CAAkB,MAAOf,EAAK,MAAO,YAAW,GAAC,QAAS,EAAK,CAAA,CAAA,CAClE,CACF,CAAA,CACF,CAAA,CAAA,CAEJ,CAEA,SAASiC,GAAQ,CACf,KAAM,CAACC,CAAa,EAAIR,EAAAA,SAAS,IAAM,IAAI5B,CAAsB,EAC3D,CAACqC,EAAOC,CAAQ,EAAIV,EAAA,SAAS,CAAE,CAAA,EAC/B,CAACW,EAAWC,CAAY,EAAIZ,WAAS,EAAK,EAC1C,CAACa,EAASC,CAAU,EAAId,WAAS,CACrC,CAAE,GAAI,WAAY,SAAU,CAAC,GAAI,EAAG,CAAC,EAAG,MAAO,UAAW,WAAY,IAAK,EAC3E,CAAE,GAAI,WAAY,SAAU,CAAC,GAAI,EAAG,CAAC,EAAG,MAAO,UAAW,WAAY,IAAK,EAC3E,CAAE,GAAI,WAAY,SAAU,CAAC,EAAG,EAAG,CAAC,EAAG,MAAO,UAAW,WAAY,IAAK,EAC1E,CAAE,GAAI,WAAY,SAAU,CAAC,EAAG,EAAG,CAAC,EAAG,MAAO,UAAW,WAAY,IAAK,EAC1E,CAAE,GAAI,WAAY,SAAU,CAAC,EAAG,EAAG,CAAC,EAAG,MAAO,UAAW,WAAY,IAAK,CAAA,CAC3E,EAEK,CACJ,gBAAAe,EACA,mBAAAC,EACA,gBAAAC,EACA,cAAAC,CAAA,EACEC,EAAY,OAAQ,CACtB,gBAAiB,CAAE,MAAO,GAAM,MAAO,QAAS,EAChD,mBAAoB,CAAE,MAAO,GAAO,MAAO,QAAS,EACpD,gBAAiB,CAAE,MAAO,GAAO,MAAO,QAAS,EACjD,cAAe,CAAE,MAAO,GAAM,MAAO,OAAQ,CAAA,CAC9C,EAEDC,EAAAA,UAAU,KAEMZ,EAAA,GAAG,qBAAsBI,CAAY,EACrCJ,EAAA,GAAG,eAAiBlC,GAAS,CACzCoC,EAAiBW,GAAA,CACT,MAAAC,EAAW,CAAC,GAAGD,CAAI,EACnB9C,EAAQ+C,EAAS,aAAeC,EAAE,KAAOjD,EAAK,EAAE,EACtD,OAAIC,GAAS,EACX+C,EAAS/C,CAAK,EAAID,EAElBgD,EAAS,KAAKhD,CAAI,EAEbgD,CAAA,CACR,CAAA,CACF,EAEad,EAAA,GAAG,iBAAmBgB,GAAW,CACzCA,EAAO,OAAS,UACPV,EAAAO,GAAQA,EAAK,IAAYI,IAAA,CAClC,GAAGA,EACH,WAAYA,EAAI,KAAOD,EAAO,SAC5Bf,EAAM,KAAKc,GAAKA,EAAE,KAAOC,EAAO,MAAM,GAAKhB,EAAc,aAAA,EACzDiB,EAAI,YACN,CAAC,CACL,CACD,EAGQf,EAAAF,EAAc,UAAU,EAE1B,IAAM,CACXA,EAAc,WAAW,CAAA,GAE1B,CAACA,EAAeC,CAAK,CAAC,EAGzBtB,EAAUc,GAAU,CAClB,GAAIU,EAAW,CACP,KAAA,CAAE,MAAAe,EAAO,OAAAC,CAAW,EAAA1B,EAGpB2B,EAAS,IAAIC,EAAcH,EAAM,EAAI,EAAGA,EAAM,EAAI,EAAG,CAAC,EAC5DE,EAAO,UAAUD,CAAM,EAEvBnB,EAAc,gBAAgB,CAC5B,OAAQ,CAAE,EAAGoB,EAAO,EAAG,EAAGA,EAAO,EAAG,EAAGA,EAAO,CAAE,EAChD,OAAQ,CACN,SAAUD,EAAO,SAAS,QAAQ,EAClC,OAAQ,CAAC,EAAG,EAAG,CAAC,CAClB,CAAA,CACD,CACH,CAAA,CACD,EAEK,MAAAG,EAAsBpD,GAAa,CACvC8B,EAAc,aAAa9B,CAAQ,CAAA,EAGrC,OAGKU,EAAA,KAAA2C,WAAA,CAAA,SAAA,CAAAlB,EAAQ,IACPY,GAAApC,EAAA,IAACI,EAAA,CAEC,GAAIgC,EAAI,GACR,SAAUA,EAAI,SACd,MAAOA,EAAI,MACX,WAAYA,EAAI,WAChB,SAAUK,CAAA,EALLL,EAAI,EAAA,CAOZ,EAGAd,GAAaI,GAET3B,EAAAA,KAAA2C,EAAA,SAAA,CAAA,SAAA,CAAAtB,EAAM,IACLnC,GAAAe,EAAA,IAACP,GAAyB,KAAAR,CAAT,EAAAA,EAAK,EAAgB,CACvC,QACAQ,EAAW,CAAA,KAAM0B,EAAc,eAAgB,QAAO,GAAC,CAAA,EAC1D,EAIDG,GAAaK,GAET3B,EAAAA,IAAA0C,EAAA,SAAA,CAAA,SAAAtB,EAAM,IACLnC,GAAAe,EAAA,IAACgB,EAAwC,CAAA,KAAA/B,CAAA,EAArB,UAAUA,EAAK,EAAE,EAAgB,CACtD,EACH,EAIFe,MAACe,GAAI,SAAU,CAAC,EAAG,GAAI,CAAC,EAAG,KAAM,CAAC,GAAI,GAAK,EAAE,EAC3C,SAACf,EAAA,IAAA,uBAAA,CAAqB,MAAM,UAAU,UAAS,EAAC,CAAA,EAClD,EAGAA,EAAAA,IAAC,eAAa,CAAA,UAAW,EAAK,CAAA,EAC9BA,MAAC,oBAAiB,SAAU,CAAC,GAAI,GAAI,CAAC,EAAG,UAAW,GAAK,EACzDA,EAAAA,IAAC,aAAW,CAAA,SAAU,CAAC,IAAK,EAAG,GAAG,EAAG,MAAM,UAAU,UAAW,EAAK,CAAA,EACrEA,EAAAA,IAAC,aAAW,CAAA,SAAU,CAAC,GAAI,EAAG,EAAE,EAAG,MAAM,UAAU,UAAW,EAAK,CAAA,EAGnEA,EAAA,IAACG,EAAA,CACC,SAAU,CAAC,EAAG,EAAG,CAAC,EAClB,SAAU,IACV,MAAM,UACN,QAAQ,SACR,QAAQ,SACT,SAAA,OAAA,CAED,EAEAH,EAAA,IAACG,EAAA,CACC,SAAU,CAAC,EAAG,IAAK,CAAC,EACpB,SAAU,GACV,MAAM,UACN,QAAQ,SACR,QAAQ,SAEP,SAAYmB,EAAA,GAAGF,EAAM,OAAS,CAAC,SAAW,MAAA,CAC7C,CACF,CAAA,CAAA,CAEJ,CAEA,SAASuB,GAAyB,CAChC,KAAM,CAACxB,CAAa,EAAIR,EAAAA,SAAS,IAAM,IAAI5B,CAAsB,EAC3D,CAACuC,EAAWC,CAAY,EAAIZ,WAAS,EAAK,EAC1C,CAACS,EAAOC,CAAQ,EAAIV,EAAA,SAAS,CAAE,CAAA,EAErCoB,EAAAA,UAAU,IAAM,CACAZ,EAAA,GAAG,qBAAsBI,CAAY,EACrCJ,EAAA,GAAG,eAAgB,IAAM,CAC5BE,EAAAF,EAAc,UAAU,CAAA,CAClC,EAEQE,EAAAF,EAAc,UAAU,CAAA,EAChC,CAACA,CAAa,CAAC,EAElB,MAAMyB,EAAgB,IAAM,CACtBtB,EACFH,EAAc,WAAW,EAEzBA,EAAc,QAAQ,CACxB,EAGF,cACGhD,EACC,CAAA,SAAA,CAAA6B,MAAC3B,EACC,CAAA,SAAA2B,EAAA,IAAC6C,EAAA,CACC,OAAQ,CAAE,SAAU,CAAC,EAAG,EAAG,CAAC,EAAG,IAAK,EAAG,EACvC,GAAI,CAAE,UAAW,EAAK,EAEtB,SAAA9C,EAAA,KAAC+C,EAAS,SAAA,CAAA,SAAU,KAClB,SAAA,CAAA9C,EAAA,IAACkB,EAAM,EAAA,EACPlB,EAAA,IAAC+C,EAAA,CACC,cAAa,GACb,cAAe,IACf,YAAa,EACb,YAAa,EAAA,CACf,CAAA,EACF,CAAA,CAAA,EAEJ,EAEAhD,EAAA,KAACzB,EAAA,CACC,QAAS,CAAE,EAAG,GAAI,EAClB,QAAS,CAAE,EAAG,CAAE,EAChB,WAAY,CAAE,SAAU,EAAI,EAE5B,SAAA,CAAA0B,EAAAA,IAACxB,GAAU,SAEX,UAAA,CAAA,EAEAwB,EAAAA,IAACvB,GAAgB,SAEjB,qDAAA,CAAA,EAEAsB,EAAAA,KAACnB,GAAgB,UAAA0C,EACf,SAAA,CAACvB,EAAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAU,YAAa,CAAA,QAC3B,OAAK,CAAA,UAAU,cACb,SAAAsB,EAAY,MAAQ,MACvB,CAAA,EACF,EAEAtB,EAAA,IAAClB,EAAA,CACC,OAAQwC,EACR,QAASsB,EAER,WAAY,OAAS,MAAA,CACxB,EAECtB,GACCvB,EAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACC,EAAAA,IAAA,KAAA,CAAG,MAAO,CAAE,MAAO,sBAAuB,aAAc,QAAA,EAAY,SAAI,MAAA,CAAA,EAEzED,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAC,EAAA,IAAC,MAAA,CACC,UAAU,aACV,MAAO,CAAE,WAAYmB,EAAc,aAAA,EAAe,KAAM,CAAA,CACzD,EACDpB,EAAAA,KAAC,OAAK,CAAA,UAAU,YAAa,SAAA,CAAAoB,EAAc,eAAe,KAAK,MAAA,EAAI,EAClEnB,EAAA,IAAA,OAAA,CAAK,UAAU,cAAc,SAAE,KAAA,CAAA,EAClC,EAECoB,EAAM,IAAInC,GACRc,EAAAA,KAAA,MAAA,CAAkB,UAAU,YAC3B,SAAA,CAAAC,EAAA,IAAC,MAAA,CACC,UAAU,aACV,MAAO,CAAE,WAAYf,EAAK,KAAM,CAAA,CACjC,EACAe,EAAA,IAAA,OAAA,CAAK,UAAU,YAAa,WAAK,KAAK,EACtCA,EAAA,IAAA,OAAA,CAAK,UAAU,cAAc,SAAE,KAAA,CAAA,GANxBf,EAAK,EAOf,CACD,CAAA,EACH,CAAA,EAEJ,EAEAe,EAAAA,IAAC,MAAG,MAAO,CAAE,MAAO,sBAAuB,aAAc,MAAO,EAAG,SAAI,MAAA,CAAA,SACtEtB,EACC,CAAA,SAAA,CAAAqB,OAAC,KAAG,CAAA,SAAA,CAAAC,EAAAA,IAAC,QAAK,SAAM,QAAA,CAAA,EAAO,YAAA,EAAU,SAChC,KAAG,CAAA,SAAA,CAAAA,EAAAA,IAAC,QAAK,SAAS,WAAA,CAAA,EAAO,YAAA,EAAU,SACnC,KAAG,CAAA,SAAA,CAAAA,EAAAA,IAAC,QAAK,SAAI,MAAA,CAAA,EAAO,aAAA,EAAW,SAC/B,KAAG,CAAA,SAAA,CAAAA,EAAAA,IAAC,QAAK,SAAI,MAAA,CAAA,EAAO,aAAA,EAAW,SAC/B,KAAG,CAAA,SAAA,CAAAA,EAAAA,IAAC,QAAK,SAAI,MAAA,CAAA,EAAO,YAAA,EAAU,CAAA,EACjC,EAEAA,EAAAA,IAAC,MAAG,MAAO,CAAE,MAAO,sBAAuB,aAAc,MAAO,EAAG,SAAI,MAAA,CAAA,SACtEtB,EACC,CAAA,SAAA,CAAAqB,OAAC,KAAG,CAAA,SAAA,CAAAC,EAAAA,IAAC,QAAK,SAAI,MAAA,CAAA,EAAO,gBAAA,EAAc,SAClC,KAAG,CAAA,SAAA,CAAAA,EAAAA,IAAC,QAAK,SAAI,MAAA,CAAA,EAAO,cAAA,EAAY,SAChC,KAAG,CAAA,SAAA,CAAAA,EAAAA,IAAC,QAAK,SAAI,MAAA,CAAA,EAAO,YAAA,EAAU,SAC9B,KAAG,CAAA,SAAA,CAAAA,EAAAA,IAAC,QAAK,SAAI,MAAA,CAAA,EAAO,WAAA,EAAS,SAC7B,KAAG,CAAA,SAAA,CAAAA,EAAAA,IAAC,QAAK,SAAI,MAAA,CAAA,EAAO,WAAA,EAAS,CAAA,EAChC,EAEAA,EAAAA,IAAC,MAAG,MAAO,CAAE,MAAO,sBAAuB,aAAc,MAAO,EAAG,SAAI,MAAA,CAAA,SACtEtB,EACC,CAAA,SAAA,CAAAqB,OAAC,KAAG,CAAA,SAAA,CAAAC,EAAAA,IAAC,QAAK,SAAI,MAAA,CAAA,EAAO,aAAA,EAAW,SAC/B,KAAG,CAAA,SAAA,CAAAA,EAAAA,IAAC,QAAK,SAAI,MAAA,CAAA,EAAO,cAAA,EAAY,SAChC,KAAG,CAAA,SAAA,CAAAA,EAAAA,IAAC,QAAK,SAAI,MAAA,CAAA,EAAO,YAAA,EAAU,SAC9B,KAAG,CAAA,SAAA,CAAAA,EAAAA,IAAC,QAAK,SAAI,MAAA,CAAA,EAAO,WAAA,EAAS,CAAA,EAChC,EAEAA,EAAAA,IAAC,MAAG,MAAO,CAAE,MAAO,sBAAuB,aAAc,MAAO,EAAG,SAAI,MAAA,CAAA,SACtEvB,EAAgB,CAAA,SAAA,CAAA,mBACJ,KAAE,EAAA,EAAE,gBACP,KAAE,EAAA,EAAE,iBACH,KAAE,EAAA,EAAE,iBACJ,KAAE,EAAA,EAAE,UAAA,EAEf,EAEAuB,EAAAA,IAAC,MAAG,MAAO,CAAE,MAAO,sBAAuB,aAAc,MAAO,EAAG,SAAI,MAAA,CAAA,SACtEvB,EAAgB,CAAA,SAAA,CAAA,iBACN,KAAE,EAAA,EAAE,iBACJ,KAAE,EAAA,EAAE,kBACH,KAAE,EAAA,EAAE,kBACJ,KAAE,EAAA,EAAE,YAAA,EAEhB,SAECE,EACC,CAAA,SAAA,CAAAqB,EAAAA,IAAC,WAAQ,SAAS,WAAA,CAAA,QACjqPZ,CAAA,EACI,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CAEJ"}