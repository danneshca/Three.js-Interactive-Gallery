{"version":3,"file":"ThreeDUIMenu-a08cac57.js","sources":["../../node_modules/three/examples/jsm/renderers/CSS3DRenderer.js","../../node_modules/three/examples/jsm/renderers/CSS2DRenderer.js","../../src/pages/experiments/ThreeDUIMenu.jsx"],"sourcesContent":["import {\n\tMatrix4,\n\tObject3D,\n\tQuaternion,\n\tVector3\n} from 'three';\n\n/**\n * Based on http://www.emagix.net/academic/mscs-project/item/camera-sync-with-css3-and-webgl-threejs\n */\n\nconst _position = new Vector3();\nconst _quaternion = new Quaternion();\nconst _scale = new Vector3();\n\nclass CSS3DObject extends Object3D {\n\n\tconstructor( element = document.createElement( 'div' ) ) {\n\n\t\tsuper();\n\n\t\tthis.isCSS3DObject = true;\n\n\t\tthis.element = element;\n\t\tthis.element.style.position = 'absolute';\n\t\tthis.element.style.pointerEvents = 'auto';\n\t\tthis.element.style.userSelect = 'none';\n\n\t\tthis.element.setAttribute( 'draggable', false );\n\n\t\tthis.addEventListener( 'removed', function () {\n\n\t\t\tthis.traverse( function ( object ) {\n\n\t\t\t\tif ( object.element instanceof Element && object.element.parentNode !== null ) {\n\n\t\t\t\t\tobject.element.parentNode.removeChild( object.element );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.element = source.element.cloneNode( true );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CSS3DSprite extends CSS3DObject {\n\n\tconstructor( element ) {\n\n\t\tsuper( element );\n\n\t\tthis.isCSS3DSprite = true;\n\n\t\tthis.rotation2D = 0;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.rotation2D = source.rotation2D;\n\n\t\treturn this;\n\n\t}\n\n}\n\n//\n\nconst _matrix = new Matrix4();\nconst _matrix2 = new Matrix4();\n\nclass CSS3DRenderer {\n\n\tconstructor( parameters = {} ) {\n\n\t\tconst _this = this;\n\n\t\tlet _width, _height;\n\t\tlet _widthHalf, _heightHalf;\n\n\t\tconst cache = {\n\t\t\tcamera: { style: '' },\n\t\t\tobjects: new WeakMap()\n\t\t};\n\n\t\tconst domElement = parameters.element !== undefined ? parameters.element : document.createElement( 'div' );\n\n\t\tdomElement.style.overflow = 'hidden';\n\n\t\tthis.domElement = domElement;\n\n\t\tconst viewElement = document.createElement( 'div' );\n\t\tviewElement.style.transformOrigin = '0 0';\n\t\tviewElement.style.pointerEvents = 'none';\n\t\tdomElement.appendChild( viewElement );\n\n\t\tconst cameraElement = document.createElement( 'div' );\n\n\t\tcameraElement.style.transformStyle = 'preserve-3d';\n\n\t\tviewElement.appendChild( cameraElement );\n\n\t\tthis.getSize = function () {\n\n\t\t\treturn {\n\t\t\t\twidth: _width,\n\t\t\t\theight: _height\n\t\t\t};\n\n\t\t};\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tconst fov = camera.projectionMatrix.elements[ 5 ] * _heightHalf;\n\n\t\t\tif ( camera.view && camera.view.enabled ) {\n\n\t\t\t\t// view offset\n\t\t\t\tviewElement.style.transform = `translate( ${ - camera.view.offsetX * ( _width / camera.view.width ) }px, ${ - camera.view.offsetY * ( _height / camera.view.height ) }px )`;\n\n\t\t\t\t// view fullWidth and fullHeight, view width and height\n\t\t\t\tviewElement.style.transform += `scale( ${ camera.view.fullWidth / camera.view.width }, ${ camera.view.fullHeight / camera.view.height } )`;\n\n\t\t\t} else {\n\n\t\t\t\tviewElement.style.transform = '';\n\n\t\t\t}\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\tlet tx, ty;\n\n\t\t\tif ( camera.isOrthographicCamera ) {\n\n\t\t\t\ttx = - ( camera.right + camera.left ) / 2;\n\t\t\t\tty = ( camera.top + camera.bottom ) / 2;\n\n\t\t\t}\n\n\t\t\tconst scaleByViewOffset = camera.view && camera.view.enabled ? camera.view.height / camera.view.fullHeight : 1;\n\t\t\tconst cameraCSSMatrix = camera.isOrthographicCamera ?\n\t\t\t\t`scale( ${ scaleByViewOffset } )` + 'scale(' + fov + ')' + 'translate(' + epsilon( tx ) + 'px,' + epsilon( ty ) + 'px)' + getCameraCSSMatrix( camera.matrixWorldInverse ) :\n\t\t\t\t`scale( ${ scaleByViewOffset } )` + 'translateZ(' + fov + 'px)' + getCameraCSSMatrix( camera.matrixWorldInverse );\n\t\t\tconst perspective = camera.isPerspectiveCamera ? 'perspective(' + fov + 'px) ' : '';\n\n\t\t\tconst style = perspective + cameraCSSMatrix +\n\t\t\t\t'translate(' + _widthHalf + 'px,' + _heightHalf + 'px)';\n\n\t\t\tif ( cache.camera.style !== style ) {\n\n\t\t\t\tcameraElement.style.transform = style;\n\n\t\t\t\tcache.camera.style = style;\n\n\t\t\t}\n\n\t\t\trenderObject( scene, scene, camera, cameraCSSMatrix );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\t\t\t_widthHalf = _width / 2;\n\t\t\t_heightHalf = _height / 2;\n\n\t\t\tdomElement.style.width = width + 'px';\n\t\t\tdomElement.style.height = height + 'px';\n\n\t\t\tviewElement.style.width = width + 'px';\n\t\t\tviewElement.style.height = height + 'px';\n\n\t\t\tcameraElement.style.width = width + 'px';\n\t\t\tcameraElement.style.height = height + 'px';\n\n\t\t};\n\n\t\tfunction epsilon( value ) {\n\n\t\t\treturn Math.abs( value ) < 1e-10 ? 0 : value;\n\n\t\t}\n\n\t\tfunction getCameraCSSMatrix( matrix ) {\n\n\t\t\tconst elements = matrix.elements;\n\n\t\t\treturn 'matrix3d(' +\n\t\t\t\tepsilon( elements[ 0 ] ) + ',' +\n\t\t\t\tepsilon( - elements[ 1 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 2 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 3 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 4 ] ) + ',' +\n\t\t\t\tepsilon( - elements[ 5 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 6 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 7 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 8 ] ) + ',' +\n\t\t\t\tepsilon( - elements[ 9 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 10 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 11 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 12 ] ) + ',' +\n\t\t\t\tepsilon( - elements[ 13 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 14 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 15 ] ) +\n\t\t\t')';\n\n\t\t}\n\n\t\tfunction getObjectCSSMatrix( matrix ) {\n\n\t\t\tconst elements = matrix.elements;\n\t\t\tconst matrix3d = 'matrix3d(' +\n\t\t\t\tepsilon( elements[ 0 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 1 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 2 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 3 ] ) + ',' +\n\t\t\t\tepsilon( - elements[ 4 ] ) + ',' +\n\t\t\t\tepsilon( - elements[ 5 ] ) + ',' +\n\t\t\t\tepsilon( - elements[ 6 ] ) + ',' +\n\t\t\t\tepsilon( - elements[ 7 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 8 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 9 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 10 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 11 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 12 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 13 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 14 ] ) + ',' +\n\t\t\t\tepsilon( elements[ 15 ] ) +\n\t\t\t')';\n\n\t\t\treturn 'translate(-50%,-50%)' + matrix3d;\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, cameraCSSMatrix ) {\n\n\t\t\tif ( object.isCSS3DObject ) {\n\n\t\t\t\tconst visible = ( object.visible === true ) && ( object.layers.test( camera.layers ) === true );\n\t\t\t\tobject.element.style.display = ( visible === true ) ? '' : 'none';\n\n\t\t\t\tif ( visible === true ) {\n\n\t\t\t\t\tobject.onBeforeRender( _this, scene, camera );\n\n\t\t\t\t\tlet style;\n\n\t\t\t\t\tif ( object.isCSS3DSprite ) {\n\n\t\t\t\t\t\t// http://swiftcoder.wordpress.com/2008/11/25/constructing-a-billboard-matrix/\n\n\t\t\t\t\t\t_matrix.copy( camera.matrixWorldInverse );\n\t\t\t\t\t\t_matrix.transpose();\n\n\t\t\t\t\t\tif ( object.rotation2D !== 0 ) _matrix.multiply( _matrix2.makeRotationZ( object.rotation2D ) );\n\n\t\t\t\t\t\tobject.matrixWorld.decompose( _position, _quaternion, _scale );\n\t\t\t\t\t\t_matrix.setPosition( _position );\n\t\t\t\t\t\t_matrix.scale( _scale );\n\n\t\t\t\t\t\t_matrix.elements[ 3 ] = 0;\n\t\t\t\t\t\t_matrix.elements[ 7 ] = 0;\n\t\t\t\t\t\t_matrix.elements[ 11 ] = 0;\n\t\t\t\t\t\t_matrix.elements[ 15 ] = 1;\n\n\t\t\t\t\t\tstyle = getObjectCSSMatrix( _matrix );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstyle = getObjectCSSMatrix( object.matrixWorld );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst element = object.element;\n\t\t\t\t\tconst cachedObject = cache.objects.get( object );\n\n\t\t\t\t\tif ( cachedObject === undefined || cachedObject.style !== style ) {\n\n\t\t\t\t\t\telement.style.transform = style;\n\n\t\t\t\t\t\tconst objectData = { style: style };\n\t\t\t\t\t\tcache.objects.set( object, objectData );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( element.parentNode !== cameraElement ) {\n\n\t\t\t\t\t\tcameraElement.appendChild( element );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.onAfterRender( _this, scene, camera );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = object.children.length; i < l; i ++ ) {\n\n\t\t\t\trenderObject( object.children[ i ], scene, camera, cameraCSSMatrix );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nexport { CSS3DObject, CSS3DSprite, CSS3DRenderer };\n","import {\n\tMatrix4,\n\tObject3D,\n\tVector2,\n\tVector3\n} from 'three';\n\nclass CSS2DObject extends Object3D {\n\n\tconstructor( element = document.createElement( 'div' ) ) {\n\n\t\tsuper();\n\n\t\tthis.isCSS2DObject = true;\n\n\t\tthis.element = element;\n\n\t\tthis.element.style.position = 'absolute';\n\t\tthis.element.style.userSelect = 'none';\n\n\t\tthis.element.setAttribute( 'draggable', false );\n\n\t\tthis.center = new Vector2( 0.5, 0.5 ); // ( 0, 0 ) is the lower left; ( 1, 1 ) is the top right\n\n\t\tthis.addEventListener( 'removed', function () {\n\n\t\t\tthis.traverse( function ( object ) {\n\n\t\t\t\tif ( object.element instanceof Element && object.element.parentNode !== null ) {\n\n\t\t\t\t\tobject.element.parentNode.removeChild( object.element );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.element = source.element.cloneNode( true );\n\n\t\tthis.center = source.center;\n\n\t\treturn this;\n\n\t}\n\n}\n\n//\n\nconst _vector = new Vector3();\nconst _viewMatrix = new Matrix4();\nconst _viewProjectionMatrix = new Matrix4();\nconst _a = new Vector3();\nconst _b = new Vector3();\n\nclass CSS2DRenderer {\n\n\tconstructor( parameters = {} ) {\n\n\t\tconst _this = this;\n\n\t\tlet _width, _height;\n\t\tlet _widthHalf, _heightHalf;\n\n\t\tconst cache = {\n\t\t\tobjects: new WeakMap()\n\t\t};\n\n\t\tconst domElement = parameters.element !== undefined ? parameters.element : document.createElement( 'div' );\n\n\t\tdomElement.style.overflow = 'hidden';\n\n\t\tthis.domElement = domElement;\n\n\t\tthis.getSize = function () {\n\n\t\t\treturn {\n\t\t\t\twidth: _width,\n\t\t\t\theight: _height\n\t\t\t};\n\n\t\t};\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\t_viewMatrix.copy( camera.matrixWorldInverse );\n\t\t\t_viewProjectionMatrix.multiplyMatrices( camera.projectionMatrix, _viewMatrix );\n\n\t\t\trenderObject( scene, scene, camera );\n\t\t\tzOrder( scene );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_widthHalf = _width / 2;\n\t\t\t_heightHalf = _height / 2;\n\n\t\t\tdomElement.style.width = width + 'px';\n\t\t\tdomElement.style.height = height + 'px';\n\n\t\t};\n\n\t\tfunction renderObject( object, scene, camera ) {\n\n\t\t\tif ( object.isCSS2DObject ) {\n\n\t\t\t\t_vector.setFromMatrixPosition( object.matrixWorld );\n\t\t\t\t_vector.applyMatrix4( _viewProjectionMatrix );\n\n\t\t\t\tconst visible = ( object.visible === true ) && ( _vector.z >= - 1 && _vector.z <= 1 ) && ( object.layers.test( camera.layers ) === true );\n\t\t\t\tobject.element.style.display = ( visible === true ) ? '' : 'none';\n\n\t\t\t\tif ( visible === true ) {\n\n\t\t\t\t\tobject.onBeforeRender( _this, scene, camera );\n\n\t\t\t\t\tconst element = object.element;\n\n\t\t\t\t\telement.style.transform = 'translate(' + ( - 100 * object.center.x ) + '%,' + ( - 100 * object.center.y ) + '%)' + 'translate(' + ( _vector.x * _widthHalf + _widthHalf ) + 'px,' + ( - _vector.y * _heightHalf + _heightHalf ) + 'px)';\n\n\t\t\t\t\tif ( element.parentNode !== domElement ) {\n\n\t\t\t\t\t\tdomElement.appendChild( element );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.onAfterRender( _this, scene, camera );\n\n\t\t\t\t}\n\n\t\t\t\tconst objectData = {\n\t\t\t\t\tdistanceToCameraSquared: getDistanceToSquared( camera, object )\n\t\t\t\t};\n\n\t\t\t\tcache.objects.set( object, objectData );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = object.children.length; i < l; i ++ ) {\n\n\t\t\t\trenderObject( object.children[ i ], scene, camera );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getDistanceToSquared( object1, object2 ) {\n\n\t\t\t_a.setFromMatrixPosition( object1.matrixWorld );\n\t\t\t_b.setFromMatrixPosition( object2.matrixWorld );\n\n\t\t\treturn _a.distanceToSquared( _b );\n\n\t\t}\n\n\t\tfunction filterAndFlatten( scene ) {\n\n\t\t\tconst result = [];\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tif ( object.isCSS2DObject ) result.push( object );\n\n\t\t\t} );\n\n\t\t\treturn result;\n\n\t\t}\n\n\t\tfunction zOrder( scene ) {\n\n\t\t\tconst sorted = filterAndFlatten( scene ).sort( function ( a, b ) {\n\n\t\t\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\t\t\treturn b.renderOrder - a.renderOrder;\n\n\t\t\t\t}\n\n\t\t\t\tconst distanceA = cache.objects.get( a ).distanceToCameraSquared;\n\t\t\t\tconst distanceB = cache.objects.get( b ).distanceToCameraSquared;\n\n\t\t\t\treturn distanceA - distanceB;\n\n\t\t\t} );\n\n\t\t\tconst zMax = sorted.length;\n\n\t\t\tfor ( let i = 0, l = sorted.length; i < l; i ++ ) {\n\n\t\t\t\tsorted[ i ].element.style.zIndex = zMax - i;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nexport { CSS2DObject, CSS2DRenderer };\n","import React, { Suspense, useRef, useState, useEffect, useCallback } from 'react'\nimport { Canvas, useFrame, useThree, extend } from '@react-three/fiber'\nimport { OrbitControls, Text, Box, Sphere, Plane, Html, useTexture } from '@react-three/drei'\nimport { useControls } from 'leva'\nimport styled from 'styled-components'\nimport { motion } from 'framer-motion'\nimport * as THREE from 'three'\nimport { CSS3DRenderer, CSS3DObject } from 'three/examples/jsm/renderers/CSS3DRenderer'\nimport { CSS2DRenderer, CSS2DObject } from 'three/examples/jsm/renderers/CSS2DRenderer'\n\n// 扩展Three.js组件\nextend({ CSS3DObject, CSS2DObject })\n\nconst PageContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  position: relative;\n  padding-top: 80px;\n`\n\nconst CanvasContainer = styled.div`\n  flex: 1;\n  height: calc(100vh - 80px);\n  position: relative;\n`\n\nconst InfoPanel = styled(motion.div)`\n  width: 350px;\n  background: rgba(26, 26, 26, 0.95);\n  backdrop-filter: blur(20px);\n  border-left: 1px solid rgba(255, 255, 255, 0.1);\n  padding: 2rem;\n  overflow-y: auto;\n  z-index: 100;\n`\n\nconst InfoTitle = styled.h2`\n  color: var(--accent-color);\n  font-size: 1.5rem;\n  margin-bottom: 1rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n`\n\nconst InfoDescription = styled.p`\n  color: var(--text-secondary);\n  line-height: 1.6;\n  margin-bottom: 1.5rem;\n`\n\nconst TechList = styled.ul`\n  color: var(--text-secondary);\n  margin-left: 1rem;\n  \n  li {\n    margin-bottom: 0.5rem;\n    \n    code {\n      background: rgba(0, 255, 255, 0.1);\n      color: var(--accent-color);\n      padding: 0.2rem 0.4rem;\n      border-radius: 4px;\n      font-size: 0.9rem;\n    }\n  }\n`\n\nconst CodeSection = styled.details`\n  margin-top: 2rem;\n  \n  summary {\n    color: var(--accent-color);\n    cursor: pointer;\n    font-weight: 600;\n    margin-bottom: 1rem;\n  }\n  \n  pre {\n    background: rgba(0, 0, 0, 0.5);\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    border-radius: 8px;\n    padding: 1rem;\n    overflow-x: auto;\n    font-size: 0.8rem;\n    color: var(--text-secondary);\n  }\n`\n\n// 3D UI面板样式\nconst UIPanel = styled.div`\n  background: linear-gradient(135deg, \n    rgba(0, 255, 255, 0.1) 0%, \n    rgba(255, 0, 255, 0.1) 100%);\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  border-radius: 12px;\n  padding: 20px;\n  width: 300px;\n  color: white;\n  font-family: 'Arial', sans-serif;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\n  \n  .panel-header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: 15px;\n    padding-bottom: 10px;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n    \n    h3 {\n      margin: 0;\n      color: #00ffff;\n      font-size: 18px;\n    }\n    \n    .close-btn {\n      background: rgba(255, 0, 0, 0.3);\n      border: 1px solid rgba(255, 0, 0, 0.5);\n      border-radius: 50%;\n      width: 24px;\n      height: 24px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      cursor: pointer;\n      color: #ff4444;\n      font-size: 12px;\n      transition: all 0.3s ease;\n      \n      &:hover {\n        background: rgba(255, 0, 0, 0.5);\n        transform: scale(1.1);\n      }\n    }\n  }\n  \n  .panel-content {\n    .menu-item {\n      display: flex;\n      align-items: center;\n      padding: 10px;\n      margin: 5px 0;\n      background: rgba(255, 255, 255, 0.1);\n      border-radius: 8px;\n      cursor: pointer;\n      transition: all 0.3s ease;\n      \n      &:hover {\n        background: rgba(0, 255, 255, 0.2);\n        transform: translateX(5px);\n      }\n      \n      .icon {\n        margin-right: 10px;\n        font-size: 16px;\n      }\n      \n      .label {\n        font-size: 14px;\n      }\n    }\n    \n    .slider-control {\n      margin: 15px 0;\n      \n      label {\n        display: block;\n        margin-bottom: 5px;\n        font-size: 12px;\n        color: #cccccc;\n      }\n      \n      input[type=\"range\"] {\n        width: 100%;\n        height: 4px;\n        background: rgba(255, 255, 255, 0.2);\n        border-radius: 2px;\n        outline: none;\n        \n        &::-webkit-slider-thumb {\n          appearance: none;\n          width: 16px;\n          height: 16px;\n          background: #00ffff;\n          border-radius: 50%;\n          cursor: pointer;\n        }\n      }\n    }\n    \n    .color-picker {\n      margin: 15px 0;\n      \n      label {\n        display: block;\n        margin-bottom: 5px;\n        font-size: 12px;\n        color: #cccccc;\n      }\n      \n      .color-options {\n        display: flex;\n        gap: 8px;\n        \n        .color-option {\n          width: 24px;\n          height: 24px;\n          border-radius: 50%;\n          cursor: pointer;\n          border: 2px solid transparent;\n          transition: all 0.3s ease;\n          \n          &:hover {\n            transform: scale(1.2);\n          }\n          \n          &.selected {\n            border-color: #00ffff;\n            box-shadow: 0 0 10px rgba(0, 255, 255, 0.5);\n          }\n        }\n      }\n    }\n  }\n`\n\nconst CircularMenu = styled.div`\n  position: relative;\n  width: 200px;\n  height: 200px;\n  \n  .center-button {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 60px;\n    height: 60px;\n    background: linear-gradient(45deg, #00ffff, #ff00ff);\n    border: none;\n    border-radius: 50%;\n    color: white;\n    font-size: 24px;\n    cursor: pointer;\n    transition: all 0.3s ease;\n    box-shadow: 0 4px 20px rgba(0, 255, 255, 0.3);\n    \n    &:hover {\n      transform: translate(-50%, -50%) scale(1.1);\n      box-shadow: 0 6px 30px rgba(0, 255, 255, 0.5);\n    }\n  }\n  \n  .menu-items {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    \n    .menu-item {\n      position: absolute;\n      width: 40px;\n      height: 40px;\n      background: rgba(255, 255, 255, 0.2);\n      backdrop-filter: blur(10px);\n      border: 1px solid rgba(255, 255, 255, 0.3);\n      border-radius: 50%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      cursor: pointer;\n      transition: all 0.3s ease;\n      color: white;\n      font-size: 16px;\n      \n      &:hover {\n        background: rgba(0, 255, 255, 0.3);\n        transform: scale(1.2);\n        box-shadow: 0 4px 15px rgba(0, 255, 255, 0.4);\n      }\n    }\n  }\n`\n\nconst TabMenu = styled.div`\n  background: rgba(0, 0, 0, 0.8);\n  backdrop-filter: blur(15px);\n  border-radius: 12px;\n  overflow: hidden;\n  width: 400px;\n  \n  .tab-headers {\n    display: flex;\n    background: rgba(255, 255, 255, 0.1);\n    \n    .tab-header {\n      flex: 1;\n      padding: 12px 20px;\n      text-align: center;\n      cursor: pointer;\n      transition: all 0.3s ease;\n      color: #cccccc;\n      border-bottom: 2px solid transparent;\n      \n      &:hover {\n        background: rgba(255, 255, 255, 0.1);\n        color: white;\n      }\n      \n      &.active {\n        background: rgba(0, 255, 255, 0.2);\n        color: #00ffff;\n        border-bottom-color: #00ffff;\n      }\n    }\n  }\n  \n  .tab-content {\n    padding: 20px;\n    min-height: 200px;\n    \n    .content-section {\n      margin-bottom: 15px;\n      \n      h4 {\n        color: #00ffff;\n        margin-bottom: 10px;\n        font-size: 16px;\n      }\n      \n      p {\n        color: #cccccc;\n        line-height: 1.5;\n        margin-bottom: 10px;\n      }\n      \n      .action-buttons {\n        display: flex;\n        gap: 10px;\n        \n        button {\n          background: rgba(0, 255, 255, 0.2);\n          border: 1px solid rgba(0, 255, 255, 0.5);\n          color: #00ffff;\n          padding: 8px 16px;\n          border-radius: 6px;\n          cursor: pointer;\n          transition: all 0.3s ease;\n          \n          &:hover {\n            background: rgba(0, 255, 255, 0.3);\n            transform: translateY(-2px);\n          }\n        }\n      }\n    }\n  }\n`\n\n// 3D UI面板组件\nfunction ThreeDPanel({ position, rotation, title, children, onClose, visible = true }) {\n  const meshRef = useRef()\n  const [hovered, setHovered] = useState(false)\n  \n  useFrame((state) => {\n    if (meshRef.current && visible) {\n      // 轻微的浮动动画\n      meshRef.current.position.y = position[1] + Math.sin(state.clock.elapsedTime * 2) * 0.05\n      \n      // 悬停时的缩放效果\n      const targetScale = hovered ? 1.05 : 1\n      meshRef.current.scale.lerp(new THREE.Vector3(targetScale, targetScale, targetScale), 0.1)\n    }\n  })\n  \n  if (!visible) return null\n  \n  return (\n    <group\n      ref={meshRef}\n      position={position}\n      rotation={rotation}\n      onPointerEnter={() => setHovered(true)}\n      onPointerLeave={() => setHovered(false)}\n    >\n      <Html\n        transform\n        occlude\n        distanceFactor={10}\n        position={[0, 0, 0.01]}\n      >\n        <UIPanel>\n          <div className=\"panel-header\">\n            <h3>{title}</h3>\n            {onClose && (\n              <div className=\"close-btn\" onClick={onClose}>\n                ×\n              </div>\n            )}\n          </div>\n          <div className=\"panel-content\">\n            {children}\n          </div>\n        </UIPanel>\n      </Html>\n      \n      {/* 背景面板 */}\n      <Plane args={[3.5, 2.5]}>\n        <meshBasicMaterial \n          color={hovered ? '#001122' : '#000011'} \n          transparent \n          opacity={0.1}\n        />\n      </Plane>\n    </group>\n  )\n}\n\n// 圆形菜单组件\nfunction CircularMenuComponent({ position, items, onItemClick }) {\n  const groupRef = useRef()\n  const [expanded, setExpanded] = useState(false)\n  \n  useFrame((state) => {\n    if (groupRef.current) {\n      groupRef.current.rotation.z = state.clock.elapsedTime * 0.2\n    }\n  })\n  \n  const toggleMenu = () => {\n    setExpanded(!expanded)\n  }\n  \n  return (\n    <group ref={groupRef} position={position}>\n      <Html transform distanceFactor={8}>\n        <CircularMenu>\n          <button className=\"center-button\" onClick={toggleMenu}>\n            {expanded ? '×' : '☰'}\n          </button>\n          \n          {expanded && (\n            <div className=\"menu-items\">\n              {items.map((item, index) => {\n                const angle = (index / items.length) * Math.PI * 2\n                const radius = 80\n                const x = Math.cos(angle) * radius\n                const y = Math.sin(angle) * radius\n                \n                return (\n                  <div\n                    key={index}\n                    className=\"menu-item\"\n                    style={{\n                      left: `calc(50% + ${x}px - 20px)`,\n                      top: `calc(50% + ${y}px - 20px)`\n                    }}\n                    onClick={() => onItemClick(item)}\n                  >\n                    {item.icon}\n                  </div>\n                )\n              })}\n            </div>\n          )}\n        </CircularMenu>\n      </Html>\n    </group>\n  )\n}\n\n// 标签菜单组件\nfunction TabMenuComponent({ position, tabs, activeTab, onTabChange }) {\n  return (\n    <group position={position}>\n      <Html transform distanceFactor={12}>\n        <TabMenu>\n          <div className=\"tab-headers\">\n            {tabs.map((tab, index) => (\n              <div\n                key={index}\n                className={`tab-header ${activeTab === index ? 'active' : ''}`}\n                onClick={() => onTabChange(index)}\n              >\n                {tab.title}\n              </div>\n            ))}\n          </div>\n          \n          <div className=\"tab-content\">\n            {tabs[activeTab] && tabs[activeTab].content}\n          </div>\n        </TabMenu>\n      </Html>\n    </group>\n  )\n}\n\n// 3D按钮组件\nfunction ThreeDButton({ position, text, color = '#00ffff', onClick }) {\n  const meshRef = useRef()\n  const [hovered, setHovered] = useState(false)\n  const [clicked, setClicked] = useState(false)\n  \n  useFrame((state) => {\n    if (meshRef.current) {\n      const targetY = position[1] + (hovered ? 0.1 : 0) + (clicked ? -0.05 : 0)\n      meshRef.current.position.y = THREE.MathUtils.lerp(meshRef.current.position.y, targetY, 0.1)\n      \n      const targetScale = hovered ? 1.1 : 1\n      meshRef.current.scale.lerp(new THREE.Vector3(targetScale, targetScale, targetScale), 0.1)\n    }\n  })\n  \n  const handleClick = () => {\n    setClicked(true)\n    setTimeout(() => setClicked(false), 150)\n    if (onClick) onClick()\n  }\n  \n  return (\n    <group\n      ref={meshRef}\n      position={position}\n      onPointerEnter={() => setHovered(true)}\n      onPointerLeave={() => setHovered(false)}\n      onClick={handleClick}\n    >\n      <Box args={[2, 0.5, 0.2]}>\n        <meshStandardMaterial \n          color={hovered ? '#ffffff' : color}\n          emissive={hovered ? color : '#000000'}\n          emissiveIntensity={hovered ? 0.2 : 0}\n        />\n      </Box>\n      \n      <Text\n        position={[0, 0, 0.11]}\n        fontSize={0.2}\n        color={hovered ? '#000000' : '#ffffff'}\n        anchorX=\"center\"\n        anchorY=\"middle\"\n      >\n        {text}\n      </Text>\n    </group>\n  )\n}\n\n// 主场景组件\nfunction Scene() {\n  const [panels, setPanels] = useState({\n    settings: true,\n    tools: true,\n    info: false\n  })\n  \n  const [activeTab, setActiveTab] = useState(0)\n  const [selectedColor, setSelectedColor] = useState('#00ffff')\n  const [sliderValue, setSliderValue] = useState(50)\n  \n  const {\n    showPanels,\n    showButtons,\n    showCircularMenu,\n    showTabMenu,\n    panelDistance,\n    animationSpeed\n  } = useControls('3D UI 设置', {\n    showPanels: { value: true, label: '显示面板' },\n    showButtons: { value: true, label: '显示按钮' },\n    showCircularMenu: { value: true, label: '显示圆形菜单' },\n    showTabMenu: { value: true, label: '显示标签菜单' },\n    panelDistance: { value: 5, min: 3, max: 10, step: 0.5, label: '面板距离' },\n    animationSpeed: { value: 1, min: 0.1, max: 3, step: 0.1, label: '动画速度' }\n  })\n  \n  // 圆形菜单项\n  const circularMenuItems = [\n    { icon: '🏠', label: '主页', action: 'home' },\n    { icon: '⚙️', label: '设置', action: 'settings' },\n    { icon: '📊', label: '数据', action: 'data' },\n    { icon: '💡', label: '帮助', action: 'help' },\n    { icon: '🔍', label: '搜索', action: 'search' },\n    { icon: '📁', label: '文件', action: 'files' }\n  ]\n  \n  // 标签菜单内容\n  const tabMenuTabs = [\n    {\n      title: '概览',\n      content: (\n        <div className=\"content-section\">\n          <h4>系统状态</h4>\n          <p>所有系统运行正常，性能良好。</p>\n          <div className=\"action-buttons\">\n            <button>刷新</button>\n            <button>详情</button>\n          </div>\n        </div>\n      )\n    },\n    {\n      title: '设置',\n      content: (\n        <div className=\"content-section\">\n          <h4>系统配置</h4>\n          <p>调整系统参数和偏好设置。</p>\n          <div className=\"action-buttons\">\n            <button>保存</button>\n            <button>重置</button>\n          </div>\n        </div>\n      )\n    },\n    {\n      title: '工具',\n      content: (\n        <div className=\"content-section\">\n          <h4>实用工具</h4>\n          <p>访问各种系统工具和实用程序。</p>\n          <div className=\"action-buttons\">\n            <button>启动</button>\n            <button>配置</button>\n          </div>\n        </div>\n      )\n    }\n  ]\n  \n  const colors = ['#ff0000', '#00ff00', '#0000ff', '#ffff00', '#ff00ff', '#00ffff']\n  \n  const handleCircularMenuClick = (item) => {\n    console.log('圆形菜单点击:', item)\n  }\n  \n  const handleButtonClick = (action) => {\n    console.log('按钮点击:', action)\n    if (action === 'toggle-info') {\n      setPanels(prev => ({ ...prev, info: !prev.info }))\n    }\n  }\n  \n  const closePanelHandler = (panelName) => {\n    setPanels(prev => ({ ...prev, [panelName]: false }))\n  }\n  \n  return (\n    <>\n      {/* 环境光照 */}\n      <ambientLight intensity={0.4} />\n      <directionalLight position={[10, 10, 5]} intensity={0.6} />\n      <pointLight position={[-10, 5, -10]} color=\"#ff0080\" intensity={0.3} />\n      <pointLight position={[10, 5, 10]} color=\"#0080ff\" intensity={0.3} />\n      \n      {/* 背景环境 */}\n      <Sphere args={[50]} position={[0, 0, 0]}>\n        <meshBasicMaterial color=\"#000011\" side={THREE.BackSide} />\n      </Sphere>\n      \n      {/* 3D UI面板 */}\n      {showPanels && (\n        <>\n          <ThreeDPanel\n            position={[-panelDistance, 2, 0]}\n            rotation={[0, Math.PI / 6, 0]}\n            title=\"设置面板\"\n            visible={panels.settings}\n            onClose={() => closePanelHandler('settings')}\n          >\n            <div className=\"menu-item\" onClick={() => handleButtonClick('option1')}>\n              <span className=\"icon\">🎨</span>\n              <span className=\"label\">主题设置</span>\n            </div>\n            <div className=\"menu-item\" onClick={() => handleButtonClick('option2')}>\n              <span className=\"icon\">🔊</span>\n              <span className=\"label\">音频设置</span>\n            </div>\n            <div className=\"menu-item\" onClick={() => handleButtonClick('option3')}>\n              <span className=\"icon\">🌐</span>\n              <span className=\"label\">网络设置</span>\n            </div>\n            \n            <div className=\"slider-control\">\n              <label>音量: {sliderValue}%</label>\n              <input\n                type=\"range\"\n                min=\"0\"\n                max=\"100\"\n                value={sliderValue}\n                onChange={(e) => setSliderValue(e.target.value)}\n              />\n            </div>\n            \n            <div className=\"color-picker\">\n              <label>主题颜色</label>\n              <div className=\"color-options\">\n                {colors.map((color, index) => (\n                  <div\n                    key={index}\n                    className={`color-option ${selectedColor === color ? 'selected' : ''}`}\n                    style={{ backgroundColor: color }}\n                    onClick={() => setSelectedColor(color)}\n                  />\n                ))}\n              </div>\n            </div>\n          </ThreeDPanel>\n          \n          <ThreeDPanel\n            position={[panelDistance, 2, 0]}\n            rotation={[0, -Math.PI / 6, 0]}\n            title=\"工具面板\"\n            visible={panels.tools}\n            onClose={() => closePanelHandler('tools')}\n          >\n            <div className=\"menu-item\" onClick={() => handleButtonClick('tool1')}>\n              <span className=\"icon\">📐</span>\n              <span className=\"label\">测量工具</span>\n            </div>\n            <div className=\"menu-item\" onClick={() => handleButtonClick('tool2')}>\n              <span className=\"icon\">✏️</span>\n              <span className=\"label\">绘图工具</span>\n            </div>\n            <div className=\"menu-item\" onClick={() => handleButtonClick('tool3')}>\n              <span className=\"icon\">🔍</span>\n              <span className=\"label\">检查工具</span>\n            </div>\n            <div className=\"menu-item\" onClick={() => handleButtonClick('tool4')}>\n              <span className=\"icon\">📊</span>\n              <span className=\"label\">分析工具</span>\n            </div>\n          </ThreeDPanel>\n          \n          <ThreeDPanel\n            position={[0, 2, -panelDistance]}\n            rotation={[0, 0, 0]}\n            title=\"信息面板\"\n            visible={panels.info}\n            onClose={() => closePanelHandler('info')}\n          >\n            <div className=\"menu-item\">\n              <span className=\"icon\">📈</span>\n              <span className=\"label\">性能监控</span>\n            </div>\n            <div className=\"menu-item\">\n              <span className=\"icon\">💾</span>\n              <span className=\"label\">存储状态</span>\n            </div>\n            <div className=\"menu-item\">\n              <span className=\"icon\">🌡️</span>\n              <span className=\"label\">系统温度</span>\n            </div>\n          </ThreeDPanel>\n        </>\n      )}\n      \n      {/* 圆形菜单 */}\n      {showCircularMenu && (\n        <CircularMenuComponent\n          position={[-3, -1, 2]}\n          items={circularMenuItems}\n          onItemClick={handleCircularMenuClick}\n        />\n      )}\n      \n      {/* 标签菜单 */}\n      {showTabMenu && (\n        <TabMenuComponent\n          position={[3, -1, 2]}\n          tabs={tabMenuTabs}\n          activeTab={activeTab}\n          onTabChange={setActiveTab}\n        />\n      )}\n      \n      {/* 3D按钮 */}\n      {showButtons && (\n        <>\n          <ThreeDButton\n            position={[-2, -2, 0]}\n            text=\"开始\"\n            color=\"#00ff00\"\n            onClick={() => handleButtonClick('start')}\n          />\n          \n          <ThreeDButton\n            position={[0, -2, 0]}\n            text=\"暂停\"\n            color=\"#ffff00\"\n            onClick={() => handleButtonClick('pause')}\n          />\n          \n          <ThreeDButton\n            position={[2, -2, 0]}\n            text=\"停止\"\n            color=\"#ff0000\"\n            onClick={() => handleButtonClick('stop')}\n          />\n          \n          <ThreeDButton\n            position={[0, -3, 0]}\n            text=\"信息\"\n            color=\"#00ffff\"\n            onClick={() => handleButtonClick('toggle-info')}\n          />\n        </>\n      )}\n      \n      {/* 标题 */}\n      <Text\n        position={[0, 5, 0]}\n        fontSize={1.5}\n        color=\"#00ffff\"\n        anchorX=\"center\"\n        anchorY=\"middle\"\n      >\n        3D UI 菜单系统\n      </Text>\n      \n      <Text\n        position={[0, 4.5, 0]}\n        fontSize={0.5}\n        color=\"#ffffff\"\n        anchorX=\"center\"\n        anchorY=\"middle\"\n      >\n        交互式三维用户界面演示\n      </Text>\n    </>\n  )\n}\n\nfunction ThreeDUIMenu() {\n  return (\n    <PageContainer>\n      <CanvasContainer>\n        <Canvas\n          camera={{ position: [0, 0, 10], fov: 75 }}\n          gl={{ antialias: true }}\n        >\n          <Suspense fallback={null}>\n            <Scene />\n            <OrbitControls\n              enableDamping\n              dampingFactor={0.05}\n              minDistance={5}\n              maxDistance={20}\n              maxPolarAngle={Math.PI / 1.5}\n            />\n          </Suspense>\n        </Canvas>\n      </CanvasContainer>\n      \n      <InfoPanel\n        initial={{ x: 350 }}\n        animate={{ x: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        <InfoTitle>\n          🎛️ 3D UI 菜单\n        </InfoTitle>\n        \n        <InfoDescription>\n          创新的三维用户界面系统，将传统的2D界面元素融入3D空间，提供沉浸式的交互体验和直观的空间导航。\n        </InfoDescription>\n        \n        <h3 style={{ color: 'var(--accent-color)', marginBottom: '1rem' }}>核心特性</h3>\n        <TechList>\n          <li><code>3D面板</code> - 浮动在3D空间中的交互面板</li>\n          <li><code>圆形菜单</code> - 径向布局的快速访问菜单</li>\n          <li><code>标签界面</code> - 多页面内容的3D标签系统</li>\n          <li><code>立体按钮</code> - 具有深度感的3D按钮</li>\n          <li><code>空间导航</code> - 基于3D坐标的界面布局</li>\n        </TechList>\n        \n        <h3 style={{ color: 'var(--accent-color)', marginBottom: '1rem' }}>交互方式</h3>\n        <TechList>\n          <li><code>鼠标悬停</code> - 元素高亮和缩放效果</li>\n          <li><code>点击交互</code> - 3D按钮和菜单项响应</li>\n          <li><code>拖拽操作</code> - 面板位置和大小调整</li>\n          <li><code>手势控制</code> - 支持触摸和手势操作</li>\n          <li><code>键盘快捷键</code> - 快速访问和导航</li>\n        </TechList>\n        \n        <h3 style={{ color: 'var(--accent-color)', marginBottom: '1rem' }}>技术实现</h3>\n        <TechList>\n          <li><code>CSS3DRenderer</code> - HTML元素的3D渲染</li>\n          <li><code>CSS2DRenderer</code> - 2D标签的3D定位</li>\n          <li><code>Html组件</code> - React Three Fiber的HTML集成</li>\n          <li><code>Transform3D</code> - CSS 3D变换和动画</li>\n          <li><code>事件系统</code> - 3D空间中的事件处理</li>\n        </TechList>\n        \n        <h3 style={{ color: 'var(--accent-color)', marginBottom: '1rem' }}>设计原则</h3>\n        <InfoDescription>\n          • 空间层次感和深度感<br/>\n          • 直观的视觉反馈<br/>\n          • 流畅的动画过渡<br/>\n          • 一致的交互模式<br/>\n          • 可访问性和易用性\n        </InfoDescription>\n        \n        <h3 style={{ color: 'var(--accent-color)', marginBottom: '1rem' }}>应用场景</h3>\n        <InfoDescription>\n          • VR/AR应用界面<br/>\n          • 3D建模软件<br/>\n          • 游戏用户界面<br/>\n          • 数据可视化控制台<br/>\n          • 沉浸式展示系统\n        </InfoDescription>\n        \n        <h3 style={{ color: 'var(--accent-color)', marginBottom: '1rem' }}>性能优化</h3>\n        <InfoDescription>\n          • DOM元素的合理使用<br/>\n          • CSS3D硬件加速<br/>\n          • 事件委托和防抖<br/>\n          • 视锥体剔除优化<br/>\n          • 渲染层级管理\n        </InfoDescription>\n        \n        <CodeSection>\n          <summary>🔍 查看核心代码</summary>\n          <pre>{`// 3D UI面板组件\nfunction ThreeDPanel({ position, rotation, title, children, onClose, visible = true }) {\n  const meshRef = useRef()\n  const [hovered, setHovered] = useState(false)\n  \n  useFrame((state) => {\n    if (meshRef.current && visible) {\n      // 轻微的浮动动画\n      meshRef.current.position.y = position[1] + \n        Math.sin(state.clock.elapsedTime * 2) * 0.05\n      \n      // 悬停时的缩放效果\n      const targetScale = hovered ? 1.05 : 1\n      meshRef.current.scale.lerp(\n        new THREE.Vector3(targetScale, targetScale, targetScale), 0.1\n      )\n    }\n  })\n  \n  if (!visible) return null\n  \n  return (\n    <group\n      ref={meshRef}\n      position={position}\n      rotation={rotation}\n      onPointerEnter={() => setHovered(true)}\n      onPointerLeave={() => setHovered(false)}\n    >\n      {/* HTML内容在3D空间中渲染 */}\n      <Html\n        transform\n        occlude\n        distanceFactor={10}\n        position={[0, 0, 0.01]}\n      >\n        <UIPanel>\n          <div className=\"panel-header\">\n            <h3>{title}</h3>\n            {onClose && (\n              <div className=\"close-btn\" onClick={onClose}>\n                ×\n              </div>\n            )}\n          </div>\n          <div className=\"panel-content\">\n            {children}\n          </div>\n        </UIPanel>\n      </Html>\n      \n      {/* 3D背景面板 */}\n      <Plane args={[3.5, 2.5]}>\n        <meshBasicMaterial \n          color={hovered ? '#001122' : '#000011'} \n          transparent \n          opacity={0.1}\n        />\n      </Plane>\n    </group>\n  )\n}\n\n// 圆形菜单组件\nfunction CircularMenuComponent({ position, items, onItemClick }) {\n  const groupRef = useRef()\n  const [expanded, setExpanded] = useState(false)\n  \n  useFrame((state) => {\n    if (groupRef.current) {\n      groupRef.current.rotation.z = state.clock.elapsedTime * 0.2\n    }\n  })\n  \n  const toggleMenu = () => {\n    setExpanded(!expanded)\n  }\n  \n  return (\n    <group ref={groupRef} position={position}>\n      <Html transform distanceFactor={8}>\n        <CircularMenu>\n          <button className=\"center-button\" onClick={toggleMenu}>\n            {expanded ? '×' : '☰'}\n          </button>\n          \n          {expanded && (\n            <div className=\"menu-items\">\n              {items.map((item, index) => {\n                const angle = (index / items.length) * Math.PI * 2\n                const radius = 80\n                const x = Math.cos(angle) * radius\n                const y = Math.sin(angle) * radius\n                \n                return (\n                  <div\n                    key={index}\n                    className=\"menu-item\"\n                    style={{\n                      left: \\`calc(50% + \\${x}px - 20px)\\`,\n                      top: \\`calc(50% + \\${y}px - 20px)\\`\n                    }}\n                    onClick={() => onItemClick(item)}\n                  >\n                    {item.icon}\n                  </div>\n                )\n              })}\n            </div>\n          )}\n        </CircularMenu>\n      </Html>\n    </group>\n  )\n}\n\n// 3D按钮组件\nfunction ThreeDButton({ position, text, color = '#00ffff', onClick }) {\n  const meshRef = useRef()\n  const [hovered, setHovered] = useState(false)\n  const [clicked, setClicked] = useState(false)\n  \n  useFrame((state) => {\n    if (meshRef.current) {\n      const targetY = position[1] + (hovered ? 0.1 : 0) + (clicked ? -0.05 : 0)\n      meshRef.current.position.y = THREE.MathUtils.lerp(\n        meshRef.current.position.y, targetY, 0.1\n      )\n      \n      const targetScale = hovered ? 1.1 : 1\n      meshRef.current.scale.lerp(\n        new THREE.Vector3(targetScale, targetScale, targetScale), 0.1\n      )\n    }\n  })\n  \n  const handleClick = () => {\n    setClicked(true)\n    setTimeout(() => setClicked(false), 150)\n    if (onClick) onClick()\n  }\n  \n  return (\n    <group\n      ref={meshRef}\n      position={position}\n      onPointerEnter={() => setHovered(true)}\n      onPointerLeave={() => setHovered(false)}\n      onClick={handleClick}\n    >\n      <Box args={[2, 0.5, 0.2]}>\n        <meshStandardMaterial \n          color={hovered ? '#ffffff' : color}\n          emissive={hovered ? color : '#000000'}\n          emissiveIntensity={hovered ? 0.2 : 0}\n        />\n      </Box>\n      \n      <Text\n        position={[0, 0, 0.11]}\n        fontSize={0.2}\n        color={hovered ? '#000000' : '#ffffff'}\n        anchorX=\"center\"\n        anchorY=\"middle\"\n      >\n        {text}\n      </Text>\n    </group>\n  )\n}\n\n// CSS3D渲染器集成\nfunction useCSS3DRenderer() {\n  const { gl, scene, camera } = useThree()\n  const [css3dRenderer, setCSS3DRenderer] = useState(null)\n  \n  useEffect(() => {\n    const renderer = new CSS3DRenderer()\n    renderer.setSize(window.innerWidth, window.innerHeight)\n    renderer.domElement.style.position = 'absolute'\n    renderer.domElement.style.top = '0'\n    renderer.domElement.style.pointerEvents = 'none'\n    \n    document.body.appendChild(renderer.domElement)\n    setCSS3DRenderer(renderer)\n    \n    return () => {\n      document.body.removeChild(renderer.domElement)\n    }\n  }, [])\n  \n  useFrame(() => {\n    if (css3dRenderer) {\n      css3dRenderer.render(scene, camera)\n    }\n  })\n  \n  return css3dRenderer\n}\n\n// 标签菜单组件\nfunction TabMenuComponent({ position, tabs, activeTab, onTabChange }) {\n  return (\n    <group position={position}>\n      <Html transform distanceFactor={12}>\n        <TabMenu>\n          <div className=\"tab-headers\">\n            {tabs.map((tab, index) => (\n              <div\n                key={index}\n                className={\\`tab-header \\${activeTab === index ? 'active' : ''}\\`}\n                onClick={() => onTabChange(index)}\n              >\n                {tab.title}\n              </div>\n            ))}\n          </div>\n          \n          <div className=\"tab-content\">\n            {tabs[activeTab] && tabs[activeTab].content}\n          </div>\n        </TabMenu>\n      </Html>\n    </group>\n  )\n}\n\n// 3D UI管理器\nclass ThreeDUIManager {\n  constructor() {\n    this.panels = new Map()\n    this.menus = new Map()\n    this.buttons = new Map()\n    this.eventListeners = new Map()\n  }\n  \n  // 注册UI元素\n  registerPanel(id, panel) {\n    this.panels.set(id, panel)\n  }\n  \n  registerMenu(id, menu) {\n    this.menus.set(id, menu)\n  }\n  \n  registerButton(id, button) {\n    this.buttons.set(id, button)\n  }\n  \n  // 显示/隐藏面板\n  showPanel(id) {\n    const panel = this.panels.get(id)\n    if (panel) {\n      panel.visible = true\n    }\n  }\n  \n  hidePanel(id) {\n    const panel = this.panels.get(id)\n    if (panel) {\n      panel.visible = false\n    }\n  }\n  \n  // 切换面板状态\n  togglePanel(id) {\n    const panel = this.panels.get(id)\n    if (panel) {\n      panel.visible = !panel.visible\n    }\n  }\n  \n  // 更新面板位置\n  updatePanelPosition(id, position) {\n    const panel = this.panels.get(id)\n    if (panel) {\n      panel.position = position\n    }\n  }\n  \n  // 添加事件监听器\n  addEventListener(elementId, event, callback) {\n    if (!this.eventListeners.has(elementId)) {\n      this.eventListeners.set(elementId, new Map())\n    }\n    this.eventListeners.get(elementId).set(event, callback)\n  }\n  \n  // 触发事件\n  triggerEvent(elementId, event, data) {\n    const elementListeners = this.eventListeners.get(elementId)\n    if (elementListeners && elementListeners.has(event)) {\n      elementListeners.get(event)(data)\n    }\n  }\n  \n  // 布局管理\n  arrangeInCircle(elements, center, radius) {\n    elements.forEach((element, index) => {\n      const angle = (index / elements.length) * Math.PI * 2\n      const x = center[0] + Math.cos(angle) * radius\n      const y = center[1]\n      const z = center[2] + Math.sin(angle) * radius\n      \n      element.position = [x, y, z]\n      element.rotation = [0, -angle, 0]\n    })\n  }\n  \n  arrangeInGrid(elements, rows, cols, spacing) {\n    elements.forEach((element, index) => {\n      const row = Math.floor(index / cols)\n      const col = index % cols\n      \n      const x = (col - (cols - 1) / 2) * spacing[0]\n      const y = (row - (rows - 1) / 2) * spacing[1]\n      const z = 0\n      \n      element.position = [x, y, z]\n    })\n  }\n  \n  // 动画管理\n  animateToPosition(elementId, targetPosition, duration = 1000) {\n    const element = this.getElement(elementId)\n    if (!element) return\n    \n    const startPosition = [...element.position]\n    const startTime = Date.now()\n    \n    const animate = () => {\n      const elapsed = Date.now() - startTime\n      const progress = Math.min(elapsed / duration, 1)\n      \n      // 使用缓动函数\n      const easeProgress = this.easeInOutCubic(progress)\n      \n      element.position = [\n        startPosition[0] + (targetPosition[0] - startPosition[0]) * easeProgress,\n        startPosition[1] + (targetPosition[1] - startPosition[1]) * easeProgress,\n        startPosition[2] + (targetPosition[2] - startPosition[2]) * easeProgress\n      ]\n      \n      if (progress < 1) {\n        requestAnimationFrame(animate)\n      }\n    }\n    \n    animate()\n  }\n  \n  // 缓动函数\n  easeInOutCubic(t) {\n    return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1\n  }\n  \n  // 获取元素\n  getElement(id) {\n    return this.panels.get(id) || this.menus.get(id) || this.buttons.get(id)\n  }\n  \n  // 清理资源\n  dispose() {\n    this.panels.clear()\n    this.menus.clear()\n    this.buttons.clear()\n    this.eventListeners.clear()\n  }\n}\n\n// 使用示例\nconst uiManager = new ThreeDUIManager()\n\n// 注册UI元素\nuiManager.registerPanel('settings', {\n  position: [-5, 2, 0],\n  rotation: [0, Math.PI / 6, 0],\n  visible: true\n})\n\n// 添加事件监听\nuiManager.addEventListener('settings', 'click', (data) => {\n  console.log('设置面板被点击:', data)\n})\n\n// 动画到新位置\nuiManager.animateToPosition('settings', [0, 3, -2], 1500)\n\n// 圆形布局\nconst panels = ['panel1', 'panel2', 'panel3', 'panel4']\nuiManager.arrangeInCircle(panels, [0, 0, 0], 5)`}</pre>\n        </CodeSection>\n      </InfoPanel>\n    </PageContainer>\n  )\n}\n\nexport default ThreeDUIMenu"],"names":["Vector3","CSS3DObject","Object3D","element","object","source","recursive","Matrix4","CSS2DObject","Vector2","extend","PageContainer","styled","CanvasContainer","InfoPanel","motion","InfoTitle","InfoDescription","TechList","CodeSection","UIPanel","CircularMenu","TabMenu","ThreeDPanel","position","rotation","title","children","onClose","visible","meshRef","useRef","hovered","setHovered","useState","useFrame","state","targetScale","THREE.Vector3","jsxs","jsx","Html","Plane","CircularMenuComponent","items","onItemClick","groupRef","expanded","setExpanded","toggleMenu","item","index","angle","radius","x","y","TabMenuComponent","tabs","activeTab","onTabChange","tab","ThreeDButton","text","color","onClick","clicked","setClicked","targetY","THREE.MathUtils","handleClick","Box","Text","Scene","panels","setPanels","setActiveTab","selectedColor","setSelectedColor","sliderValue","setSliderValue","showPanels","showButtons","showCircularMenu","showTabMenu","panelDistance","animationSpeed","useControls","circularMenuItems","tabMenuTabs","colors","handleCircularMenuClick","handleButtonClick","action","prev","closePanelHandler","panelName","Fragment","Sphere","THREE.BackSide","e","ThreeDUIMenu","Canvas","Suspense","OrbitControls"],"mappings":"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","x_google_ignoreList":[0,1]}