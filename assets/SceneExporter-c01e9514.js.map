{"version":3,"file":"SceneExporter-c01e9514.js","sources":["../../node_modules/three/examples/jsm/utils/TextureUtils.js","../../node_modules/three/examples/jsm/exporters/GLTFExporter.js","../../node_modules/three/examples/jsm/exporters/OBJExporter.js","../../node_modules/three/examples/jsm/exporters/PLYExporter.js","../../node_modules/three/examples/jsm/exporters/STLExporter.js","../../src/pages/experiments/SceneExporter.jsx"],"sourcesContent":["import {\n\tPlaneGeometry,\n\tShaderMaterial,\n\tUniform,\n\tMesh,\n\tPerspectiveCamera,\n\tScene,\n\tWebGLRenderer,\n\tTexture,\n\tSRGBColorSpace\n} from 'three';\n\nlet _renderer;\nlet fullscreenQuadGeometry;\nlet fullscreenQuadMaterial;\nlet fullscreenQuad;\n\nexport function decompress( texture, maxTextureSize = Infinity, renderer = null ) {\n\n\tif ( ! fullscreenQuadGeometry ) fullscreenQuadGeometry = new PlaneGeometry( 2, 2, 1, 1 );\n\tif ( ! fullscreenQuadMaterial ) fullscreenQuadMaterial = new ShaderMaterial( {\n\t\tuniforms: { blitTexture: new Uniform( texture ) },\n\t\tvertexShader: `\n            varying vec2 vUv;\n            void main(){\n                vUv = uv;\n                gl_Position = vec4(position.xy * 1.0,0.,.999999);\n            }`,\n\t\tfragmentShader: `\n            uniform sampler2D blitTexture; \n            varying vec2 vUv;\n\n            void main(){ \n                gl_FragColor = vec4(vUv.xy, 0, 1);\n                \n                #ifdef IS_SRGB\n                gl_FragColor = LinearTosRGB( texture2D( blitTexture, vUv) );\n                #else\n                gl_FragColor = texture2D( blitTexture, vUv);\n                #endif\n            }`\n\t} );\n\n\tfullscreenQuadMaterial.uniforms.blitTexture.value = texture;\n\tfullscreenQuadMaterial.defines.IS_SRGB = texture.colorSpace == SRGBColorSpace;\n\tfullscreenQuadMaterial.needsUpdate = true;\n\n\tif ( ! fullscreenQuad ) {\n\n\t\tfullscreenQuad = new Mesh( fullscreenQuadGeometry, fullscreenQuadMaterial );\n\t\tfullscreenQuad.frustrumCulled = false;\n\n\t}\n\n\tconst _camera = new PerspectiveCamera();\n\tconst _scene = new Scene();\n\t_scene.add( fullscreenQuad );\n\n\tif ( ! renderer ) {\n\n\t\trenderer = _renderer = new WebGLRenderer( { antialias: false } );\n\n\t}\n\n\trenderer.setSize( Math.min( texture.image.width, maxTextureSize ), Math.min( texture.image.height, maxTextureSize ) );\n\trenderer.clear();\n\trenderer.render( _scene, _camera );\n\n\tconst readableTexture = new Texture( renderer.domElement );\n\n\treadableTexture.minFilter = texture.minFilter;\n\treadableTexture.magFilter = texture.magFilter;\n\treadableTexture.wrapS = texture.wrapS;\n\treadableTexture.wrapT = texture.wrapT;\n\treadableTexture.name = texture.name;\n\n\tif ( _renderer ) {\n\n\t\t_renderer.dispose();\n\t\t_renderer = null;\n\n\t}\n\n\treturn readableTexture;\n\n}\n","import {\n\tBufferAttribute,\n\tClampToEdgeWrapping,\n\tColor,\n\tDoubleSide,\n\tInterpolateDiscrete,\n\tInterpolateLinear,\n\tNoColorSpace,\n\tLinearFilter,\n\tLinearMipmapLinearFilter,\n\tLinearMipmapNearestFilter,\n\tMathUtils,\n\tMatrix4,\n\tMirroredRepeatWrapping,\n\tNearestFilter,\n\tNearestMipmapLinearFilter,\n\tNearestMipmapNearestFilter,\n\tPropertyBinding,\n\tRGBAFormat,\n\tRepeatWrapping,\n\tScene,\n\tSource,\n\tSRGBColorSpace,\n\tCompressedTexture,\n\tVector3,\n\tQuaternion,\n} from 'three';\nimport { decompress } from './../utils/TextureUtils.js';\n\n\n/**\n * The KHR_mesh_quantization extension allows these extra attribute component types\n *\n * @see https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_mesh_quantization/README.md#extending-mesh-attributes\n */\nconst KHR_mesh_quantization_ExtraAttrTypes = {\n\tPOSITION: [\n\t\t'byte',\n\t\t'byte normalized',\n\t\t'unsigned byte',\n\t\t'unsigned byte normalized',\n\t\t'short',\n\t\t'short normalized',\n\t\t'unsigned short',\n\t\t'unsigned short normalized',\n\t],\n\tNORMAL: [\n\t\t'byte normalized',\n\t\t'short normalized',\n\t],\n\tTANGENT: [\n\t\t'byte normalized',\n\t\t'short normalized',\n\t],\n\tTEXCOORD: [\n\t\t'byte',\n\t\t'byte normalized',\n\t\t'unsigned byte',\n\t\t'short',\n\t\t'short normalized',\n\t\t'unsigned short',\n\t],\n};\n\n\nclass GLTFExporter {\n\n\tconstructor() {\n\n\t\tthis.pluginCallbacks = [];\n\n\t\tthis.register( function ( writer ) {\n\n\t\t\treturn new GLTFLightExtension( writer );\n\n\t\t} );\n\n\t\tthis.register( function ( writer ) {\n\n\t\t\treturn new GLTFMaterialsUnlitExtension( writer );\n\n\t\t} );\n\n\t\tthis.register( function ( writer ) {\n\n\t\t\treturn new GLTFMaterialsTransmissionExtension( writer );\n\n\t\t} );\n\n\t\tthis.register( function ( writer ) {\n\n\t\t\treturn new GLTFMaterialsVolumeExtension( writer );\n\n\t\t} );\n\n\t\tthis.register( function ( writer ) {\n\n\t\t\treturn new GLTFMaterialsIorExtension( writer );\n\n\t\t} );\n\n\t\tthis.register( function ( writer ) {\n\n\t\t\treturn new GLTFMaterialsSpecularExtension( writer );\n\n\t\t} );\n\n\t\tthis.register( function ( writer ) {\n\n\t\t\treturn new GLTFMaterialsClearcoatExtension( writer );\n\n\t\t} );\n\n\t\tthis.register( function ( writer ) {\n\n\t\t\treturn new GLTFMaterialsIridescenceExtension( writer );\n\n\t\t} );\n\n\t\tthis.register( function ( writer ) {\n\n\t\t\treturn new GLTFMaterialsSheenExtension( writer );\n\n\t\t} );\n\n\t\tthis.register( function ( writer ) {\n\n\t\t\treturn new GLTFMaterialsAnisotropyExtension( writer );\n\n\t\t} );\n\n\t\tthis.register( function ( writer ) {\n\n\t\t\treturn new GLTFMaterialsEmissiveStrengthExtension( writer );\n\n\t\t} );\n\n\t\tthis.register( function ( writer ) {\n\n\t\t\treturn new GLTFMeshGpuInstancing( writer );\n\n\t\t} );\n\n\t}\n\n\tregister( callback ) {\n\n\t\tif ( this.pluginCallbacks.indexOf( callback ) === - 1 ) {\n\n\t\t\tthis.pluginCallbacks.push( callback );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunregister( callback ) {\n\n\t\tif ( this.pluginCallbacks.indexOf( callback ) !== - 1 ) {\n\n\t\t\tthis.pluginCallbacks.splice( this.pluginCallbacks.indexOf( callback ), 1 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Parse scenes and generate GLTF output\n\t * @param  {Scene or [THREE.Scenes]} input   Scene or Array of THREE.Scenes\n\t * @param  {Function} onDone  Callback on completed\n\t * @param  {Function} onError  Callback on errors\n\t * @param  {Object} options options\n\t */\n\tparse( input, onDone, onError, options ) {\n\n\t\tconst writer = new GLTFWriter();\n\t\tconst plugins = [];\n\n\t\tfor ( let i = 0, il = this.pluginCallbacks.length; i < il; i ++ ) {\n\n\t\t\tplugins.push( this.pluginCallbacks[ i ]( writer ) );\n\n\t\t}\n\n\t\twriter.setPlugins( plugins );\n\t\twriter.write( input, onDone, options ).catch( onError );\n\n\t}\n\n\tparseAsync( input, options ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.parse( input, resolve, reject, options );\n\n\t\t} );\n\n\t}\n\n}\n\n//------------------------------------------------------------------------------\n// Constants\n//------------------------------------------------------------------------------\n\nconst WEBGL_CONSTANTS = {\n\tPOINTS: 0x0000,\n\tLINES: 0x0001,\n\tLINE_LOOP: 0x0002,\n\tLINE_STRIP: 0x0003,\n\tTRIANGLES: 0x0004,\n\tTRIANGLE_STRIP: 0x0005,\n\tTRIANGLE_FAN: 0x0006,\n\n\tBYTE: 0x1400,\n\tUNSIGNED_BYTE: 0x1401,\n\tSHORT: 0x1402,\n\tUNSIGNED_SHORT: 0x1403,\n\tINT: 0x1404,\n\tUNSIGNED_INT: 0x1405,\n\tFLOAT: 0x1406,\n\n\tARRAY_BUFFER: 0x8892,\n\tELEMENT_ARRAY_BUFFER: 0x8893,\n\n\tNEAREST: 0x2600,\n\tLINEAR: 0x2601,\n\tNEAREST_MIPMAP_NEAREST: 0x2700,\n\tLINEAR_MIPMAP_NEAREST: 0x2701,\n\tNEAREST_MIPMAP_LINEAR: 0x2702,\n\tLINEAR_MIPMAP_LINEAR: 0x2703,\n\n\tCLAMP_TO_EDGE: 33071,\n\tMIRRORED_REPEAT: 33648,\n\tREPEAT: 10497\n};\n\nconst KHR_MESH_QUANTIZATION = 'KHR_mesh_quantization';\n\nconst THREE_TO_WEBGL = {};\n\nTHREE_TO_WEBGL[ NearestFilter ] = WEBGL_CONSTANTS.NEAREST;\nTHREE_TO_WEBGL[ NearestMipmapNearestFilter ] = WEBGL_CONSTANTS.NEAREST_MIPMAP_NEAREST;\nTHREE_TO_WEBGL[ NearestMipmapLinearFilter ] = WEBGL_CONSTANTS.NEAREST_MIPMAP_LINEAR;\nTHREE_TO_WEBGL[ LinearFilter ] = WEBGL_CONSTANTS.LINEAR;\nTHREE_TO_WEBGL[ LinearMipmapNearestFilter ] = WEBGL_CONSTANTS.LINEAR_MIPMAP_NEAREST;\nTHREE_TO_WEBGL[ LinearMipmapLinearFilter ] = WEBGL_CONSTANTS.LINEAR_MIPMAP_LINEAR;\n\nTHREE_TO_WEBGL[ ClampToEdgeWrapping ] = WEBGL_CONSTANTS.CLAMP_TO_EDGE;\nTHREE_TO_WEBGL[ RepeatWrapping ] = WEBGL_CONSTANTS.REPEAT;\nTHREE_TO_WEBGL[ MirroredRepeatWrapping ] = WEBGL_CONSTANTS.MIRRORED_REPEAT;\n\nconst PATH_PROPERTIES = {\n\tscale: 'scale',\n\tposition: 'translation',\n\tquaternion: 'rotation',\n\tmorphTargetInfluences: 'weights'\n};\n\nconst DEFAULT_SPECULAR_COLOR = new Color();\n\n// GLB constants\n// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#glb-file-format-specification\n\nconst GLB_HEADER_BYTES = 12;\nconst GLB_HEADER_MAGIC = 0x46546C67;\nconst GLB_VERSION = 2;\n\nconst GLB_CHUNK_PREFIX_BYTES = 8;\nconst GLB_CHUNK_TYPE_JSON = 0x4E4F534A;\nconst GLB_CHUNK_TYPE_BIN = 0x004E4942;\n\n//------------------------------------------------------------------------------\n// Utility functions\n//------------------------------------------------------------------------------\n\n/**\n * Compare two arrays\n * @param  {Array} array1 Array 1 to compare\n * @param  {Array} array2 Array 2 to compare\n * @return {Boolean}        Returns true if both arrays are equal\n */\nfunction equalArray( array1, array2 ) {\n\n\treturn ( array1.length === array2.length ) && array1.every( function ( element, index ) {\n\n\t\treturn element === array2[ index ];\n\n\t} );\n\n}\n\n/**\n * Converts a string to an ArrayBuffer.\n * @param  {string} text\n * @return {ArrayBuffer}\n */\nfunction stringToArrayBuffer( text ) {\n\n\treturn new TextEncoder().encode( text ).buffer;\n\n}\n\n/**\n * Is identity matrix\n *\n * @param {Matrix4} matrix\n * @returns {Boolean} Returns true, if parameter is identity matrix\n */\nfunction isIdentityMatrix( matrix ) {\n\n\treturn equalArray( matrix.elements, [ 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ] );\n\n}\n\n/**\n * Get the min and max vectors from the given attribute\n * @param  {BufferAttribute} attribute Attribute to find the min/max in range from start to start + count\n * @param  {Integer} start\n * @param  {Integer} count\n * @return {Object} Object containing the `min` and `max` values (As an array of attribute.itemSize components)\n */\nfunction getMinMax( attribute, start, count ) {\n\n\tconst output = {\n\n\t\tmin: new Array( attribute.itemSize ).fill( Number.POSITIVE_INFINITY ),\n\t\tmax: new Array( attribute.itemSize ).fill( Number.NEGATIVE_INFINITY )\n\n\t};\n\n\tfor ( let i = start; i < start + count; i ++ ) {\n\n\t\tfor ( let a = 0; a < attribute.itemSize; a ++ ) {\n\n\t\t\tlet value;\n\n\t\t\tif ( attribute.itemSize > 4 ) {\n\n\t\t\t\t // no support for interleaved data for itemSize > 4\n\n\t\t\t\tvalue = attribute.array[ i * attribute.itemSize + a ];\n\n\t\t\t} else {\n\n\t\t\t\tif ( a === 0 ) value = attribute.getX( i );\n\t\t\t\telse if ( a === 1 ) value = attribute.getY( i );\n\t\t\t\telse if ( a === 2 ) value = attribute.getZ( i );\n\t\t\t\telse if ( a === 3 ) value = attribute.getW( i );\n\n\t\t\t\tif ( attribute.normalized === true ) {\n\n\t\t\t\t\tvalue = MathUtils.normalize( value, attribute.array );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toutput.min[ a ] = Math.min( output.min[ a ], value );\n\t\t\toutput.max[ a ] = Math.max( output.max[ a ], value );\n\n\t\t}\n\n\t}\n\n\treturn output;\n\n}\n\n/**\n * Get the required size + padding for a buffer, rounded to the next 4-byte boundary.\n * https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#data-alignment\n *\n * @param {Integer} bufferSize The size the original buffer.\n * @returns {Integer} new buffer size with required padding.\n *\n */\nfunction getPaddedBufferSize( bufferSize ) {\n\n\treturn Math.ceil( bufferSize / 4 ) * 4;\n\n}\n\n/**\n * Returns a buffer aligned to 4-byte boundary.\n *\n * @param {ArrayBuffer} arrayBuffer Buffer to pad\n * @param {Integer} paddingByte (Optional)\n * @returns {ArrayBuffer} The same buffer if it's already aligned to 4-byte boundary or a new buffer\n */\nfunction getPaddedArrayBuffer( arrayBuffer, paddingByte = 0 ) {\n\n\tconst paddedLength = getPaddedBufferSize( arrayBuffer.byteLength );\n\n\tif ( paddedLength !== arrayBuffer.byteLength ) {\n\n\t\tconst array = new Uint8Array( paddedLength );\n\t\tarray.set( new Uint8Array( arrayBuffer ) );\n\n\t\tif ( paddingByte !== 0 ) {\n\n\t\t\tfor ( let i = arrayBuffer.byteLength; i < paddedLength; i ++ ) {\n\n\t\t\t\tarray[ i ] = paddingByte;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn array.buffer;\n\n\t}\n\n\treturn arrayBuffer;\n\n}\n\nfunction getCanvas() {\n\n\tif ( typeof document === 'undefined' && typeof OffscreenCanvas !== 'undefined' ) {\n\n\t\treturn new OffscreenCanvas( 1, 1 );\n\n\t}\n\n\treturn document.createElement( 'canvas' );\n\n}\n\nfunction getToBlobPromise( canvas, mimeType ) {\n\n\tif ( canvas.toBlob !== undefined ) {\n\n\t\treturn new Promise( ( resolve ) => canvas.toBlob( resolve, mimeType ) );\n\n\t}\n\n\tlet quality;\n\n\t// Blink's implementation of convertToBlob seems to default to a quality level of 100%\n\t// Use the Blink default quality levels of toBlob instead so that file sizes are comparable.\n\tif ( mimeType === 'image/jpeg' ) {\n\n\t\tquality = 0.92;\n\n\t} else if ( mimeType === 'image/webp' ) {\n\n\t\tquality = 0.8;\n\n\t}\n\n\treturn canvas.convertToBlob( {\n\n\t\ttype: mimeType,\n\t\tquality: quality\n\n\t} );\n\n}\n\n/**\n * Writer\n */\nclass GLTFWriter {\n\n\tconstructor() {\n\n\t\tthis.plugins = [];\n\n\t\tthis.options = {};\n\t\tthis.pending = [];\n\t\tthis.buffers = [];\n\n\t\tthis.byteOffset = 0;\n\t\tthis.buffers = [];\n\t\tthis.nodeMap = new Map();\n\t\tthis.skins = [];\n\n\t\tthis.extensionsUsed = {};\n\t\tthis.extensionsRequired = {};\n\n\t\tthis.uids = new Map();\n\t\tthis.uid = 0;\n\n\t\tthis.json = {\n\t\t\tasset: {\n\t\t\t\tversion: '2.0',\n\t\t\t\tgenerator: 'THREE.GLTFExporter'\n\t\t\t}\n\t\t};\n\n\t\tthis.cache = {\n\t\t\tmeshes: new Map(),\n\t\t\tattributes: new Map(),\n\t\t\tattributesNormalized: new Map(),\n\t\t\tmaterials: new Map(),\n\t\t\ttextures: new Map(),\n\t\t\timages: new Map()\n\t\t};\n\n\t}\n\n\tsetPlugins( plugins ) {\n\n\t\tthis.plugins = plugins;\n\n\t}\n\n\t/**\n\t * Parse scenes and generate GLTF output\n\t * @param  {Scene or [THREE.Scenes]} input   Scene or Array of THREE.Scenes\n\t * @param  {Function} onDone  Callback on completed\n\t * @param  {Object} options options\n\t */\n\tasync write( input, onDone, options = {} ) {\n\n\t\tthis.options = Object.assign( {\n\t\t\t// default options\n\t\t\tbinary: false,\n\t\t\ttrs: false,\n\t\t\tonlyVisible: true,\n\t\t\tmaxTextureSize: Infinity,\n\t\t\tanimations: [],\n\t\t\tincludeCustomExtensions: false\n\t\t}, options );\n\n\t\tif ( this.options.animations.length > 0 ) {\n\n\t\t\t// Only TRS properties, and not matrices, may be targeted by animation.\n\t\t\tthis.options.trs = true;\n\n\t\t}\n\n\t\tthis.processInput( input );\n\n\t\tawait Promise.all( this.pending );\n\n\t\tconst writer = this;\n\t\tconst buffers = writer.buffers;\n\t\tconst json = writer.json;\n\t\toptions = writer.options;\n\n\t\tconst extensionsUsed = writer.extensionsUsed;\n\t\tconst extensionsRequired = writer.extensionsRequired;\n\n\t\t// Merge buffers.\n\t\tconst blob = new Blob( buffers, { type: 'application/octet-stream' } );\n\n\t\t// Declare extensions.\n\t\tconst extensionsUsedList = Object.keys( extensionsUsed );\n\t\tconst extensionsRequiredList = Object.keys( extensionsRequired );\n\n\t\tif ( extensionsUsedList.length > 0 ) json.extensionsUsed = extensionsUsedList;\n\t\tif ( extensionsRequiredList.length > 0 ) json.extensionsRequired = extensionsRequiredList;\n\n\t\t// Update bytelength of the single buffer.\n\t\tif ( json.buffers && json.buffers.length > 0 ) json.buffers[ 0 ].byteLength = blob.size;\n\n\t\tif ( options.binary === true ) {\n\n\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#glb-file-format-specification\n\n\t\t\tconst reader = new FileReader();\n\t\t\treader.readAsArrayBuffer( blob );\n\t\t\treader.onloadend = function () {\n\n\t\t\t\t// Binary chunk.\n\t\t\t\tconst binaryChunk = getPaddedArrayBuffer( reader.result );\n\t\t\t\tconst binaryChunkPrefix = new DataView( new ArrayBuffer( GLB_CHUNK_PREFIX_BYTES ) );\n\t\t\t\tbinaryChunkPrefix.setUint32( 0, binaryChunk.byteLength, true );\n\t\t\t\tbinaryChunkPrefix.setUint32( 4, GLB_CHUNK_TYPE_BIN, true );\n\n\t\t\t\t// JSON chunk.\n\t\t\t\tconst jsonChunk = getPaddedArrayBuffer( stringToArrayBuffer( JSON.stringify( json ) ), 0x20 );\n\t\t\t\tconst jsonChunkPrefix = new DataView( new ArrayBuffer( GLB_CHUNK_PREFIX_BYTES ) );\n\t\t\t\tjsonChunkPrefix.setUint32( 0, jsonChunk.byteLength, true );\n\t\t\t\tjsonChunkPrefix.setUint32( 4, GLB_CHUNK_TYPE_JSON, true );\n\n\t\t\t\t// GLB header.\n\t\t\t\tconst header = new ArrayBuffer( GLB_HEADER_BYTES );\n\t\t\t\tconst headerView = new DataView( header );\n\t\t\t\theaderView.setUint32( 0, GLB_HEADER_MAGIC, true );\n\t\t\t\theaderView.setUint32( 4, GLB_VERSION, true );\n\t\t\t\tconst totalByteLength = GLB_HEADER_BYTES\n\t\t\t\t\t+ jsonChunkPrefix.byteLength + jsonChunk.byteLength\n\t\t\t\t\t+ binaryChunkPrefix.byteLength + binaryChunk.byteLength;\n\t\t\t\theaderView.setUint32( 8, totalByteLength, true );\n\n\t\t\t\tconst glbBlob = new Blob( [\n\t\t\t\t\theader,\n\t\t\t\t\tjsonChunkPrefix,\n\t\t\t\t\tjsonChunk,\n\t\t\t\t\tbinaryChunkPrefix,\n\t\t\t\t\tbinaryChunk\n\t\t\t\t], { type: 'application/octet-stream' } );\n\n\t\t\t\tconst glbReader = new FileReader();\n\t\t\t\tglbReader.readAsArrayBuffer( glbBlob );\n\t\t\t\tglbReader.onloadend = function () {\n\n\t\t\t\t\tonDone( glbReader.result );\n\n\t\t\t\t};\n\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tif ( json.buffers && json.buffers.length > 0 ) {\n\n\t\t\t\tconst reader = new FileReader();\n\t\t\t\treader.readAsDataURL( blob );\n\t\t\t\treader.onloadend = function () {\n\n\t\t\t\t\tconst base64data = reader.result;\n\t\t\t\t\tjson.buffers[ 0 ].uri = base64data;\n\t\t\t\t\tonDone( json );\n\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tonDone( json );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\t/**\n\t * Serializes a userData.\n\t *\n\t * @param {THREE.Object3D|THREE.Material} object\n\t * @param {Object} objectDef\n\t */\n\tserializeUserData( object, objectDef ) {\n\n\t\tif ( Object.keys( object.userData ).length === 0 ) return;\n\n\t\tconst options = this.options;\n\t\tconst extensionsUsed = this.extensionsUsed;\n\n\t\ttry {\n\n\t\t\tconst json = JSON.parse( JSON.stringify( object.userData ) );\n\n\t\t\tif ( options.includeCustomExtensions && json.gltfExtensions ) {\n\n\t\t\t\tif ( objectDef.extensions === undefined ) objectDef.extensions = {};\n\n\t\t\t\tfor ( const extensionName in json.gltfExtensions ) {\n\n\t\t\t\t\tobjectDef.extensions[ extensionName ] = json.gltfExtensions[ extensionName ];\n\t\t\t\t\textensionsUsed[ extensionName ] = true;\n\n\t\t\t\t}\n\n\t\t\t\tdelete json.gltfExtensions;\n\n\t\t\t}\n\n\t\t\tif ( Object.keys( json ).length > 0 ) objectDef.extras = json;\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFExporter: userData of \\'' + object.name + '\\' ' +\n\t\t\t\t'won\\'t be serialized because of JSON.stringify error - ' + error.message );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns ids for buffer attributes.\n\t * @param  {Object} object\n\t * @return {Integer}\n\t */\n\tgetUID( attribute, isRelativeCopy = false ) {\n\n\t\tif ( this.uids.has( attribute ) === false ) {\n\n\t\t\tconst uids = new Map();\n\n\t\t\tuids.set( true, this.uid ++ );\n\t\t\tuids.set( false, this.uid ++ );\n\n\t\t\tthis.uids.set( attribute, uids );\n\n\t\t}\n\n\t\tconst uids = this.uids.get( attribute );\n\n\t\treturn uids.get( isRelativeCopy );\n\n\t}\n\n\t/**\n\t * Checks if normal attribute values are normalized.\n\t *\n\t * @param {BufferAttribute} normal\n\t * @returns {Boolean}\n\t */\n\tisNormalizedNormalAttribute( normal ) {\n\n\t\tconst cache = this.cache;\n\n\t\tif ( cache.attributesNormalized.has( normal ) ) return false;\n\n\t\tconst v = new Vector3();\n\n\t\tfor ( let i = 0, il = normal.count; i < il; i ++ ) {\n\n\t\t\t// 0.0005 is from glTF-validator\n\t\t\tif ( Math.abs( v.fromBufferAttribute( normal, i ).length() - 1.0 ) > 0.0005 ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\t/**\n\t * Creates normalized normal buffer attribute.\n\t *\n\t * @param {BufferAttribute} normal\n\t * @returns {BufferAttribute}\n\t *\n\t */\n\tcreateNormalizedNormalAttribute( normal ) {\n\n\t\tconst cache = this.cache;\n\n\t\tif ( cache.attributesNormalized.has( normal ) )\treturn cache.attributesNormalized.get( normal );\n\n\t\tconst attribute = normal.clone();\n\t\tconst v = new Vector3();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tv.fromBufferAttribute( attribute, i );\n\n\t\t\tif ( v.x === 0 && v.y === 0 && v.z === 0 ) {\n\n\t\t\t\t// if values can't be normalized set (1, 0, 0)\n\t\t\t\tv.setX( 1.0 );\n\n\t\t\t} else {\n\n\t\t\t\tv.normalize();\n\n\t\t\t}\n\n\t\t\tattribute.setXYZ( i, v.x, v.y, v.z );\n\n\t\t}\n\n\t\tcache.attributesNormalized.set( normal, attribute );\n\n\t\treturn attribute;\n\n\t}\n\n\t/**\n\t * Applies a texture transform, if present, to the map definition. Requires\n\t * the KHR_texture_transform extension.\n\t *\n\t * @param {Object} mapDef\n\t * @param {THREE.Texture} texture\n\t */\n\tapplyTextureTransform( mapDef, texture ) {\n\n\t\tlet didTransform = false;\n\t\tconst transformDef = {};\n\n\t\tif ( texture.offset.x !== 0 || texture.offset.y !== 0 ) {\n\n\t\t\ttransformDef.offset = texture.offset.toArray();\n\t\t\tdidTransform = true;\n\n\t\t}\n\n\t\tif ( texture.rotation !== 0 ) {\n\n\t\t\ttransformDef.rotation = texture.rotation;\n\t\t\tdidTransform = true;\n\n\t\t}\n\n\t\tif ( texture.repeat.x !== 1 || texture.repeat.y !== 1 ) {\n\n\t\t\ttransformDef.scale = texture.repeat.toArray();\n\t\t\tdidTransform = true;\n\n\t\t}\n\n\t\tif ( didTransform ) {\n\n\t\t\tmapDef.extensions = mapDef.extensions || {};\n\t\t\tmapDef.extensions[ 'KHR_texture_transform' ] = transformDef;\n\t\t\tthis.extensionsUsed[ 'KHR_texture_transform' ] = true;\n\n\t\t}\n\n\t}\n\n\tbuildMetalRoughTexture( metalnessMap, roughnessMap ) {\n\n\t\tif ( metalnessMap === roughnessMap ) return metalnessMap;\n\n\t\tfunction getEncodingConversion( map ) {\n\n\t\t\tif ( map.colorSpace === SRGBColorSpace ) {\n\n\t\t\t\treturn function SRGBToLinear( c ) {\n\n\t\t\t\t\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\treturn function LinearToLinear( c ) {\n\n\t\t\t\treturn c;\n\n\t\t\t};\n\n\t\t}\n\n\t\tconsole.warn( 'THREE.GLTFExporter: Merged metalnessMap and roughnessMap textures.' );\n\n\t\tif ( metalnessMap instanceof CompressedTexture ) {\n\n\t\t\tmetalnessMap = decompress( metalnessMap );\n\n\t\t}\n\n\t\tif ( roughnessMap instanceof CompressedTexture ) {\n\n\t\t\troughnessMap = decompress( roughnessMap );\n\n\t\t}\n\n\t\tconst metalness = metalnessMap ? metalnessMap.image : null;\n\t\tconst roughness = roughnessMap ? roughnessMap.image : null;\n\n\t\tconst width = Math.max( metalness ? metalness.width : 0, roughness ? roughness.width : 0 );\n\t\tconst height = Math.max( metalness ? metalness.height : 0, roughness ? roughness.height : 0 );\n\n\t\tconst canvas = getCanvas();\n\t\tcanvas.width = width;\n\t\tcanvas.height = height;\n\n\t\tconst context = canvas.getContext( '2d' );\n\t\tcontext.fillStyle = '#00ffff';\n\t\tcontext.fillRect( 0, 0, width, height );\n\n\t\tconst composite = context.getImageData( 0, 0, width, height );\n\n\t\tif ( metalness ) {\n\n\t\t\tcontext.drawImage( metalness, 0, 0, width, height );\n\n\t\t\tconst convert = getEncodingConversion( metalnessMap );\n\t\t\tconst data = context.getImageData( 0, 0, width, height ).data;\n\n\t\t\tfor ( let i = 2; i < data.length; i += 4 ) {\n\n\t\t\t\tcomposite.data[ i ] = convert( data[ i ] / 256 ) * 256;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( roughness ) {\n\n\t\t\tcontext.drawImage( roughness, 0, 0, width, height );\n\n\t\t\tconst convert = getEncodingConversion( roughnessMap );\n\t\t\tconst data = context.getImageData( 0, 0, width, height ).data;\n\n\t\t\tfor ( let i = 1; i < data.length; i += 4 ) {\n\n\t\t\t\tcomposite.data[ i ] = convert( data[ i ] / 256 ) * 256;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcontext.putImageData( composite, 0, 0 );\n\n\t\t//\n\n\t\tconst reference = metalnessMap || roughnessMap;\n\n\t\tconst texture = reference.clone();\n\n\t\ttexture.source = new Source( canvas );\n\t\ttexture.colorSpace = NoColorSpace;\n\t\ttexture.channel = ( metalnessMap || roughnessMap ).channel;\n\n\t\tif ( metalnessMap && roughnessMap && metalnessMap.channel !== roughnessMap.channel ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFExporter: UV channels for metalnessMap and roughnessMap textures must match.' );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\t/**\n\t * Process a buffer to append to the default one.\n\t * @param  {ArrayBuffer} buffer\n\t * @return {Integer}\n\t */\n\tprocessBuffer( buffer ) {\n\n\t\tconst json = this.json;\n\t\tconst buffers = this.buffers;\n\n\t\tif ( ! json.buffers ) json.buffers = [ { byteLength: 0 } ];\n\n\t\t// All buffers are merged before export.\n\t\tbuffers.push( buffer );\n\n\t\treturn 0;\n\n\t}\n\n\t/**\n\t * Process and generate a BufferView\n\t * @param  {BufferAttribute} attribute\n\t * @param  {number} componentType\n\t * @param  {number} start\n\t * @param  {number} count\n\t * @param  {number} target (Optional) Target usage of the BufferView\n\t * @return {Object}\n\t */\n\tprocessBufferView( attribute, componentType, start, count, target ) {\n\n\t\tconst json = this.json;\n\n\t\tif ( ! json.bufferViews ) json.bufferViews = [];\n\n\t\t// Create a new dataview and dump the attribute's array into it\n\n\t\tlet componentSize;\n\n\t\tswitch ( componentType ) {\n\n\t\t\tcase WEBGL_CONSTANTS.BYTE:\n\t\t\tcase WEBGL_CONSTANTS.UNSIGNED_BYTE:\n\n\t\t\t\tcomponentSize = 1;\n\n\t\t\t\tbreak;\n\n\t\t\tcase WEBGL_CONSTANTS.SHORT:\n\t\t\tcase WEBGL_CONSTANTS.UNSIGNED_SHORT:\n\n\t\t\t\tcomponentSize = 2;\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tcomponentSize = 4;\n\n\t\t}\n\n\t\tconst byteLength = getPaddedBufferSize( count * attribute.itemSize * componentSize );\n\t\tconst dataView = new DataView( new ArrayBuffer( byteLength ) );\n\t\tlet offset = 0;\n\n\t\tfor ( let i = start; i < start + count; i ++ ) {\n\n\t\t\tfor ( let a = 0; a < attribute.itemSize; a ++ ) {\n\n\t\t\t\tlet value;\n\n\t\t\t\tif ( attribute.itemSize > 4 ) {\n\n\t\t\t\t\t // no support for interleaved data for itemSize > 4\n\n\t\t\t\t\tvalue = attribute.array[ i * attribute.itemSize + a ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( a === 0 ) value = attribute.getX( i );\n\t\t\t\t\telse if ( a === 1 ) value = attribute.getY( i );\n\t\t\t\t\telse if ( a === 2 ) value = attribute.getZ( i );\n\t\t\t\t\telse if ( a === 3 ) value = attribute.getW( i );\n\n\t\t\t\t\tif ( attribute.normalized === true ) {\n\n\t\t\t\t\t\tvalue = MathUtils.normalize( value, attribute.array );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( componentType === WEBGL_CONSTANTS.FLOAT ) {\n\n\t\t\t\t\tdataView.setFloat32( offset, value, true );\n\n\t\t\t\t} else if ( componentType === WEBGL_CONSTANTS.INT ) {\n\n\t\t\t\t\tdataView.setInt32( offset, value, true );\n\n\t\t\t\t} else if ( componentType === WEBGL_CONSTANTS.UNSIGNED_INT ) {\n\n\t\t\t\t\tdataView.setUint32( offset, value, true );\n\n\t\t\t\t} else if ( componentType === WEBGL_CONSTANTS.SHORT ) {\n\n\t\t\t\t\tdataView.setInt16( offset, value, true );\n\n\t\t\t\t} else if ( componentType === WEBGL_CONSTANTS.UNSIGNED_SHORT ) {\n\n\t\t\t\t\tdataView.setUint16( offset, value, true );\n\n\t\t\t\t} else if ( componentType === WEBGL_CONSTANTS.BYTE ) {\n\n\t\t\t\t\tdataView.setInt8( offset, value );\n\n\t\t\t\t} else if ( componentType === WEBGL_CONSTANTS.UNSIGNED_BYTE ) {\n\n\t\t\t\t\tdataView.setUint8( offset, value );\n\n\t\t\t\t}\n\n\t\t\t\toffset += componentSize;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bufferViewDef = {\n\n\t\t\tbuffer: this.processBuffer( dataView.buffer ),\n\t\t\tbyteOffset: this.byteOffset,\n\t\t\tbyteLength: byteLength\n\n\t\t};\n\n\t\tif ( target !== undefined ) bufferViewDef.target = target;\n\n\t\tif ( target === WEBGL_CONSTANTS.ARRAY_BUFFER ) {\n\n\t\t\t// Only define byteStride for vertex attributes.\n\t\t\tbufferViewDef.byteStride = attribute.itemSize * componentSize;\n\n\t\t}\n\n\t\tthis.byteOffset += byteLength;\n\n\t\tjson.bufferViews.push( bufferViewDef );\n\n\t\t// @TODO Merge bufferViews where possible.\n\t\tconst output = {\n\n\t\t\tid: json.bufferViews.length - 1,\n\t\t\tbyteLength: 0\n\n\t\t};\n\n\t\treturn output;\n\n\t}\n\n\t/**\n\t * Process and generate a BufferView from an image Blob.\n\t * @param {Blob} blob\n\t * @return {Promise<Integer>}\n\t */\n\tprocessBufferViewImage( blob ) {\n\n\t\tconst writer = this;\n\t\tconst json = writer.json;\n\n\t\tif ( ! json.bufferViews ) json.bufferViews = [];\n\n\t\treturn new Promise( function ( resolve ) {\n\n\t\t\tconst reader = new FileReader();\n\t\t\treader.readAsArrayBuffer( blob );\n\t\t\treader.onloadend = function () {\n\n\t\t\t\tconst buffer = getPaddedArrayBuffer( reader.result );\n\n\t\t\t\tconst bufferViewDef = {\n\t\t\t\t\tbuffer: writer.processBuffer( buffer ),\n\t\t\t\t\tbyteOffset: writer.byteOffset,\n\t\t\t\t\tbyteLength: buffer.byteLength\n\t\t\t\t};\n\n\t\t\t\twriter.byteOffset += buffer.byteLength;\n\t\t\t\tresolve( json.bufferViews.push( bufferViewDef ) - 1 );\n\n\t\t\t};\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Process attribute to generate an accessor\n\t * @param  {BufferAttribute} attribute Attribute to process\n\t * @param  {THREE.BufferGeometry} geometry (Optional) Geometry used for truncated draw range\n\t * @param  {Integer} start (Optional)\n\t * @param  {Integer} count (Optional)\n\t * @return {Integer|null} Index of the processed accessor on the \"accessors\" array\n\t */\n\tprocessAccessor( attribute, geometry, start, count ) {\n\n\t\tconst json = this.json;\n\n\t\tconst types = {\n\n\t\t\t1: 'SCALAR',\n\t\t\t2: 'VEC2',\n\t\t\t3: 'VEC3',\n\t\t\t4: 'VEC4',\n\t\t\t9: 'MAT3',\n\t\t\t16: 'MAT4'\n\n\t\t};\n\n\t\tlet componentType;\n\n\t\t// Detect the component type of the attribute array\n\t\tif ( attribute.array.constructor === Float32Array ) {\n\n\t\t\tcomponentType = WEBGL_CONSTANTS.FLOAT;\n\n\t\t} else if ( attribute.array.constructor === Int32Array ) {\n\n\t\t\tcomponentType = WEBGL_CONSTANTS.INT;\n\n\t\t} else if ( attribute.array.constructor === Uint32Array ) {\n\n\t\t\tcomponentType = WEBGL_CONSTANTS.UNSIGNED_INT;\n\n\t\t} else if ( attribute.array.constructor === Int16Array ) {\n\n\t\t\tcomponentType = WEBGL_CONSTANTS.SHORT;\n\n\t\t} else if ( attribute.array.constructor === Uint16Array ) {\n\n\t\t\tcomponentType = WEBGL_CONSTANTS.UNSIGNED_SHORT;\n\n\t\t} else if ( attribute.array.constructor === Int8Array ) {\n\n\t\t\tcomponentType = WEBGL_CONSTANTS.BYTE;\n\n\t\t} else if ( attribute.array.constructor === Uint8Array ) {\n\n\t\t\tcomponentType = WEBGL_CONSTANTS.UNSIGNED_BYTE;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.GLTFExporter: Unsupported bufferAttribute component type: ' + attribute.array.constructor.name );\n\n\t\t}\n\n\t\tif ( start === undefined ) start = 0;\n\t\tif ( count === undefined || count === Infinity ) count = attribute.count;\n\n\t\t// Skip creating an accessor if the attribute doesn't have data to export\n\t\tif ( count === 0 ) return null;\n\n\t\tconst minMax = getMinMax( attribute, start, count );\n\t\tlet bufferViewTarget;\n\n\t\t// If geometry isn't provided, don't infer the target usage of the bufferView. For\n\t\t// animation samplers, target must not be set.\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tbufferViewTarget = attribute === geometry.index ? WEBGL_CONSTANTS.ELEMENT_ARRAY_BUFFER : WEBGL_CONSTANTS.ARRAY_BUFFER;\n\n\t\t}\n\n\t\tconst bufferView = this.processBufferView( attribute, componentType, start, count, bufferViewTarget );\n\n\t\tconst accessorDef = {\n\n\t\t\tbufferView: bufferView.id,\n\t\t\tbyteOffset: bufferView.byteOffset,\n\t\t\tcomponentType: componentType,\n\t\t\tcount: count,\n\t\t\tmax: minMax.max,\n\t\t\tmin: minMax.min,\n\t\t\ttype: types[ attribute.itemSize ]\n\n\t\t};\n\n\t\tif ( attribute.normalized === true ) accessorDef.normalized = true;\n\t\tif ( ! json.accessors ) json.accessors = [];\n\n\t\treturn json.accessors.push( accessorDef ) - 1;\n\n\t}\n\n\t/**\n\t * Process image\n\t * @param  {Image} image to process\n\t * @param  {Integer} format of the image (RGBAFormat)\n\t * @param  {Boolean} flipY before writing out the image\n\t * @param  {String} mimeType export format\n\t * @return {Integer}     Index of the processed texture in the \"images\" array\n\t */\n\tprocessImage( image, format, flipY, mimeType = 'image/png' ) {\n\n\t\tif ( image !== null ) {\n\n\t\t\tconst writer = this;\n\t\t\tconst cache = writer.cache;\n\t\t\tconst json = writer.json;\n\t\t\tconst options = writer.options;\n\t\t\tconst pending = writer.pending;\n\n\t\t\tif ( ! cache.images.has( image ) ) cache.images.set( image, {} );\n\n\t\t\tconst cachedImages = cache.images.get( image );\n\n\t\t\tconst key = mimeType + ':flipY/' + flipY.toString();\n\n\t\t\tif ( cachedImages[ key ] !== undefined ) return cachedImages[ key ];\n\n\t\t\tif ( ! json.images ) json.images = [];\n\n\t\t\tconst imageDef = { mimeType: mimeType };\n\n\t\t\tconst canvas = getCanvas();\n\n\t\t\tcanvas.width = Math.min( image.width, options.maxTextureSize );\n\t\t\tcanvas.height = Math.min( image.height, options.maxTextureSize );\n\n\t\t\tconst ctx = canvas.getContext( '2d' );\n\n\t\t\tif ( flipY === true ) {\n\n\t\t\t\tctx.translate( 0, canvas.height );\n\t\t\t\tctx.scale( 1, - 1 );\n\n\t\t\t}\n\n\t\t\tif ( image.data !== undefined ) { // THREE.DataTexture\n\n\t\t\t\tif ( format !== RGBAFormat ) {\n\n\t\t\t\t\tconsole.error( 'GLTFExporter: Only RGBAFormat is supported.', format );\n\n\t\t\t\t}\n\n\t\t\t\tif ( image.width > options.maxTextureSize || image.height > options.maxTextureSize ) {\n\n\t\t\t\t\tconsole.warn( 'GLTFExporter: Image size is bigger than maxTextureSize', image );\n\n\t\t\t\t}\n\n\t\t\t\tconst data = new Uint8ClampedArray( image.height * image.width * 4 );\n\n\t\t\t\tfor ( let i = 0; i < data.length; i += 4 ) {\n\n\t\t\t\t\tdata[ i + 0 ] = image.data[ i + 0 ];\n\t\t\t\t\tdata[ i + 1 ] = image.data[ i + 1 ];\n\t\t\t\t\tdata[ i + 2 ] = image.data[ i + 2 ];\n\t\t\t\t\tdata[ i + 3 ] = image.data[ i + 3 ];\n\n\t\t\t\t}\n\n\t\t\t\tctx.putImageData( new ImageData( data, image.width, image.height ), 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tctx.drawImage( image, 0, 0, canvas.width, canvas.height );\n\n\t\t\t}\n\n\t\t\tif ( options.binary === true ) {\n\n\t\t\t\tpending.push(\n\n\t\t\t\t\tgetToBlobPromise( canvas, mimeType )\n\t\t\t\t\t\t.then( blob => writer.processBufferViewImage( blob ) )\n\t\t\t\t\t\t.then( bufferViewIndex => {\n\n\t\t\t\t\t\t\timageDef.bufferView = bufferViewIndex;\n\n\t\t\t\t\t\t} )\n\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tif ( canvas.toDataURL !== undefined ) {\n\n\t\t\t\t\timageDef.uri = canvas.toDataURL( mimeType );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tpending.push(\n\n\t\t\t\t\t\tgetToBlobPromise( canvas, mimeType )\n\t\t\t\t\t\t\t.then( blob => new FileReader().readAsDataURL( blob ) )\n\t\t\t\t\t\t\t.then( dataURL => {\n\n\t\t\t\t\t\t\t\timageDef.uri = dataURL;\n\n\t\t\t\t\t\t\t} )\n\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst index = json.images.push( imageDef ) - 1;\n\t\t\tcachedImages[ key ] = index;\n\t\t\treturn index;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.GLTFExporter: No valid image data found. Unable to process texture.' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Process sampler\n\t * @param  {Texture} map Texture to process\n\t * @return {Integer}     Index of the processed texture in the \"samplers\" array\n\t */\n\tprocessSampler( map ) {\n\n\t\tconst json = this.json;\n\n\t\tif ( ! json.samplers ) json.samplers = [];\n\n\t\tconst samplerDef = {\n\t\t\tmagFilter: THREE_TO_WEBGL[ map.magFilter ],\n\t\t\tminFilter: THREE_TO_WEBGL[ map.minFilter ],\n\t\t\twrapS: THREE_TO_WEBGL[ map.wrapS ],\n\t\t\twrapT: THREE_TO_WEBGL[ map.wrapT ]\n\t\t};\n\n\t\treturn json.samplers.push( samplerDef ) - 1;\n\n\t}\n\n\t/**\n\t * Process texture\n\t * @param  {Texture} map Map to process\n\t * @return {Integer} Index of the processed texture in the \"textures\" array\n\t */\n\tprocessTexture( map ) {\n\n\t\tconst writer = this;\n\t\tconst options = writer.options;\n\t\tconst cache = this.cache;\n\t\tconst json = this.json;\n\n\t\tif ( cache.textures.has( map ) ) return cache.textures.get( map );\n\n\t\tif ( ! json.textures ) json.textures = [];\n\n\t\t// make non-readable textures (e.g. CompressedTexture) readable by blitting them into a new texture\n\t\tif ( map instanceof CompressedTexture ) {\n\n\t\t\tmap = decompress( map, options.maxTextureSize );\n\n\t\t}\n\n\t\tlet mimeType = map.userData.mimeType;\n\n\t\tif ( mimeType === 'image/webp' ) mimeType = 'image/png';\n\n\t\tconst textureDef = {\n\t\t\tsampler: this.processSampler( map ),\n\t\t\tsource: this.processImage( map.image, map.format, map.flipY, mimeType )\n\t\t};\n\n\t\tif ( map.name ) textureDef.name = map.name;\n\n\t\tthis._invokeAll( function ( ext ) {\n\n\t\t\text.writeTexture && ext.writeTexture( map, textureDef );\n\n\t\t} );\n\n\t\tconst index = json.textures.push( textureDef ) - 1;\n\t\tcache.textures.set( map, index );\n\t\treturn index;\n\n\t}\n\n\t/**\n\t * Process material\n\t * @param  {THREE.Material} material Material to process\n\t * @return {Integer|null} Index of the processed material in the \"materials\" array\n\t */\n\tprocessMaterial( material ) {\n\n\t\tconst cache = this.cache;\n\t\tconst json = this.json;\n\n\t\tif ( cache.materials.has( material ) ) return cache.materials.get( material );\n\n\t\tif ( material.isShaderMaterial ) {\n\n\t\t\tconsole.warn( 'GLTFExporter: THREE.ShaderMaterial not supported.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif ( ! json.materials ) json.materials = [];\n\n\t\t// @QUESTION Should we avoid including any attribute that has the default value?\n\t\tconst materialDef = {\tpbrMetallicRoughness: {} };\n\n\t\tif ( material.isMeshStandardMaterial !== true && material.isMeshBasicMaterial !== true ) {\n\n\t\t\tconsole.warn( 'GLTFExporter: Use MeshStandardMaterial or MeshBasicMaterial for best results.' );\n\n\t\t}\n\n\t\t// pbrMetallicRoughness.baseColorFactor\n\t\tconst color = material.color.toArray().concat( [ material.opacity ] );\n\n\t\tif ( ! equalArray( color, [ 1, 1, 1, 1 ] ) ) {\n\n\t\t\tmaterialDef.pbrMetallicRoughness.baseColorFactor = color;\n\n\t\t}\n\n\t\tif ( material.isMeshStandardMaterial ) {\n\n\t\t\tmaterialDef.pbrMetallicRoughness.metallicFactor = material.metalness;\n\t\t\tmaterialDef.pbrMetallicRoughness.roughnessFactor = material.roughness;\n\n\t\t} else {\n\n\t\t\tmaterialDef.pbrMetallicRoughness.metallicFactor = 0.5;\n\t\t\tmaterialDef.pbrMetallicRoughness.roughnessFactor = 0.5;\n\n\t\t}\n\n\t\t// pbrMetallicRoughness.metallicRoughnessTexture\n\t\tif ( material.metalnessMap || material.roughnessMap ) {\n\n\t\t\tconst metalRoughTexture = this.buildMetalRoughTexture( material.metalnessMap, material.roughnessMap );\n\n\t\t\tconst metalRoughMapDef = {\n\t\t\t\tindex: this.processTexture( metalRoughTexture ),\n\t\t\t\tchannel: metalRoughTexture.channel\n\t\t\t};\n\t\t\tthis.applyTextureTransform( metalRoughMapDef, metalRoughTexture );\n\t\t\tmaterialDef.pbrMetallicRoughness.metallicRoughnessTexture = metalRoughMapDef;\n\n\t\t}\n\n\t\t// pbrMetallicRoughness.baseColorTexture\n\t\tif ( material.map ) {\n\n\t\t\tconst baseColorMapDef = {\n\t\t\t\tindex: this.processTexture( material.map ),\n\t\t\t\ttexCoord: material.map.channel\n\t\t\t};\n\t\t\tthis.applyTextureTransform( baseColorMapDef, material.map );\n\t\t\tmaterialDef.pbrMetallicRoughness.baseColorTexture = baseColorMapDef;\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tconst emissive = material.emissive;\n\t\t\tconst maxEmissiveComponent = Math.max( emissive.r, emissive.g, emissive.b );\n\n\t\t\tif ( maxEmissiveComponent > 0 ) {\n\n\t\t\t\tmaterialDef.emissiveFactor = material.emissive.toArray();\n\n\t\t\t}\n\n\t\t\t// emissiveTexture\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tconst emissiveMapDef = {\n\t\t\t\t\tindex: this.processTexture( material.emissiveMap ),\n\t\t\t\t\ttexCoord: material.emissiveMap.channel\n\t\t\t\t};\n\t\t\t\tthis.applyTextureTransform( emissiveMapDef, material.emissiveMap );\n\t\t\t\tmaterialDef.emissiveTexture = emissiveMapDef;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// normalTexture\n\t\tif ( material.normalMap ) {\n\n\t\t\tconst normalMapDef = {\n\t\t\t\tindex: this.processTexture( material.normalMap ),\n\t\t\t\ttexCoord: material.normalMap.channel\n\t\t\t};\n\n\t\t\tif ( material.normalScale && material.normalScale.x !== 1 ) {\n\n\t\t\t\t// glTF normal scale is univariate. Ignore `y`, which may be flipped.\n\t\t\t\t// Context: https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\n\t\t\t\tnormalMapDef.scale = material.normalScale.x;\n\n\t\t\t}\n\n\t\t\tthis.applyTextureTransform( normalMapDef, material.normalMap );\n\t\t\tmaterialDef.normalTexture = normalMapDef;\n\n\t\t}\n\n\t\t// occlusionTexture\n\t\tif ( material.aoMap ) {\n\n\t\t\tconst occlusionMapDef = {\n\t\t\t\tindex: this.processTexture( material.aoMap ),\n\t\t\t\ttexCoord: material.aoMap.channel\n\t\t\t};\n\n\t\t\tif ( material.aoMapIntensity !== 1.0 ) {\n\n\t\t\t\tocclusionMapDef.strength = material.aoMapIntensity;\n\n\t\t\t}\n\n\t\t\tthis.applyTextureTransform( occlusionMapDef, material.aoMap );\n\t\t\tmaterialDef.occlusionTexture = occlusionMapDef;\n\n\t\t}\n\n\t\t// alphaMode\n\t\tif ( material.transparent ) {\n\n\t\t\tmaterialDef.alphaMode = 'BLEND';\n\n\t\t} else {\n\n\t\t\tif ( material.alphaTest > 0.0 ) {\n\n\t\t\t\tmaterialDef.alphaMode = 'MASK';\n\t\t\t\tmaterialDef.alphaCutoff = material.alphaTest;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// doubleSided\n\t\tif ( material.side === DoubleSide ) materialDef.doubleSided = true;\n\t\tif ( material.name !== '' ) materialDef.name = material.name;\n\n\t\tthis.serializeUserData( material, materialDef );\n\n\t\tthis._invokeAll( function ( ext ) {\n\n\t\t\text.writeMaterial && ext.writeMaterial( material, materialDef );\n\n\t\t} );\n\n\t\tconst index = json.materials.push( materialDef ) - 1;\n\t\tcache.materials.set( material, index );\n\t\treturn index;\n\n\t}\n\n\t/**\n\t * Process mesh\n\t * @param  {THREE.Mesh} mesh Mesh to process\n\t * @return {Integer|null} Index of the processed mesh in the \"meshes\" array\n\t */\n\tprocessMesh( mesh ) {\n\n\t\tconst cache = this.cache;\n\t\tconst json = this.json;\n\n\t\tconst meshCacheKeyParts = [ mesh.geometry.uuid ];\n\n\t\tif ( Array.isArray( mesh.material ) ) {\n\n\t\t\tfor ( let i = 0, l = mesh.material.length; i < l; i ++ ) {\n\n\t\t\t\tmeshCacheKeyParts.push( mesh.material[ i ].uuid\t);\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tmeshCacheKeyParts.push( mesh.material.uuid );\n\n\t\t}\n\n\t\tconst meshCacheKey = meshCacheKeyParts.join( ':' );\n\n\t\tif ( cache.meshes.has( meshCacheKey ) ) return cache.meshes.get( meshCacheKey );\n\n\t\tconst geometry = mesh.geometry;\n\n\t\tlet mode;\n\n\t\t// Use the correct mode\n\t\tif ( mesh.isLineSegments ) {\n\n\t\t\tmode = WEBGL_CONSTANTS.LINES;\n\n\t\t} else if ( mesh.isLineLoop ) {\n\n\t\t\tmode = WEBGL_CONSTANTS.LINE_LOOP;\n\n\t\t} else if ( mesh.isLine ) {\n\n\t\t\tmode = WEBGL_CONSTANTS.LINE_STRIP;\n\n\t\t} else if ( mesh.isPoints ) {\n\n\t\t\tmode = WEBGL_CONSTANTS.POINTS;\n\n\t\t} else {\n\n\t\t\tmode = mesh.material.wireframe ? WEBGL_CONSTANTS.LINES : WEBGL_CONSTANTS.TRIANGLES;\n\n\t\t}\n\n\t\tconst meshDef = {};\n\t\tconst attributes = {};\n\t\tconst primitives = [];\n\t\tconst targets = [];\n\n\t\t// Conversion between attributes names in threejs and gltf spec\n\t\tconst nameConversion = {\n\t\t\tuv: 'TEXCOORD_0',\n\t\t\tuv1: 'TEXCOORD_1',\n\t\t\tuv2: 'TEXCOORD_2',\n\t\t\tuv3: 'TEXCOORD_3',\n\t\t\tcolor: 'COLOR_0',\n\t\t\tskinWeight: 'WEIGHTS_0',\n\t\t\tskinIndex: 'JOINTS_0'\n\t\t};\n\n\t\tconst originalNormal = geometry.getAttribute( 'normal' );\n\n\t\tif ( originalNormal !== undefined && ! this.isNormalizedNormalAttribute( originalNormal ) ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFExporter: Creating normalized normal attribute from the non-normalized one.' );\n\n\t\t\tgeometry.setAttribute( 'normal', this.createNormalizedNormalAttribute( originalNormal ) );\n\n\t\t}\n\n\t\t// @QUESTION Detect if .vertexColors = true?\n\t\t// For every attribute create an accessor\n\t\tlet modifiedAttribute = null;\n\n\t\tfor ( let attributeName in geometry.attributes ) {\n\n\t\t\t// Ignore morph target attributes, which are exported later.\n\t\t\tif ( attributeName.slice( 0, 5 ) === 'morph' ) continue;\n\n\t\t\tconst attribute = geometry.attributes[ attributeName ];\n\t\t\tattributeName = nameConversion[ attributeName ] || attributeName.toUpperCase();\n\n\t\t\t// Prefix all geometry attributes except the ones specifically\n\t\t\t// listed in the spec; non-spec attributes are considered custom.\n\t\t\tconst validVertexAttributes =\n\t\t\t\t\t/^(POSITION|NORMAL|TANGENT|TEXCOORD_\\d+|COLOR_\\d+|JOINTS_\\d+|WEIGHTS_\\d+)$/;\n\n\t\t\tif ( ! validVertexAttributes.test( attributeName ) ) attributeName = '_' + attributeName;\n\n\t\t\tif ( cache.attributes.has( this.getUID( attribute ) ) ) {\n\n\t\t\t\tattributes[ attributeName ] = cache.attributes.get( this.getUID( attribute ) );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// JOINTS_0 must be UNSIGNED_BYTE or UNSIGNED_SHORT.\n\t\t\tmodifiedAttribute = null;\n\t\t\tconst array = attribute.array;\n\n\t\t\tif ( attributeName === 'JOINTS_0' &&\n\t\t\t\t! ( array instanceof Uint16Array ) &&\n\t\t\t\t! ( array instanceof Uint8Array ) ) {\n\n\t\t\t\tconsole.warn( 'GLTFExporter: Attribute \"skinIndex\" converted to type UNSIGNED_SHORT.' );\n\t\t\t\tmodifiedAttribute = new BufferAttribute( new Uint16Array( array ), attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tconst accessor = this.processAccessor( modifiedAttribute || attribute, geometry );\n\n\t\t\tif ( accessor !== null ) {\n\n\t\t\t\tif ( ! attributeName.startsWith( '_' ) ) {\n\n\t\t\t\t\tthis.detectMeshQuantization( attributeName, attribute );\n\n\t\t\t\t}\n\n\t\t\t\tattributes[ attributeName ] = accessor;\n\t\t\t\tcache.attributes.set( this.getUID( attribute ), accessor );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( originalNormal !== undefined ) geometry.setAttribute( 'normal', originalNormal );\n\n\t\t// Skip if no exportable attributes found\n\t\tif ( Object.keys( attributes ).length === 0 ) return null;\n\n\t\t// Morph targets\n\t\tif ( mesh.morphTargetInfluences !== undefined && mesh.morphTargetInfluences.length > 0 ) {\n\n\t\t\tconst weights = [];\n\t\t\tconst targetNames = [];\n\t\t\tconst reverseDictionary = {};\n\n\t\t\tif ( mesh.morphTargetDictionary !== undefined ) {\n\n\t\t\t\tfor ( const key in mesh.morphTargetDictionary ) {\n\n\t\t\t\t\treverseDictionary[ mesh.morphTargetDictionary[ key ] ] = key;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0; i < mesh.morphTargetInfluences.length; ++ i ) {\n\n\t\t\t\tconst target = {};\n\t\t\t\tlet warned = false;\n\n\t\t\t\tfor ( const attributeName in geometry.morphAttributes ) {\n\n\t\t\t\t\t// glTF 2.0 morph supports only POSITION/NORMAL/TANGENT.\n\t\t\t\t\t// Three.js doesn't support TANGENT yet.\n\n\t\t\t\t\tif ( attributeName !== 'position' && attributeName !== 'normal' ) {\n\n\t\t\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'GLTFExporter: Only POSITION and NORMAL morph are supported.' );\n\t\t\t\t\t\t\twarned = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst attribute = geometry.morphAttributes[ attributeName ][ i ];\n\t\t\t\t\tconst gltfAttributeName = attributeName.toUpperCase();\n\n\t\t\t\t\t// Three.js morph attribute has absolute values while the one of glTF has relative values.\n\t\t\t\t\t//\n\t\t\t\t\t// glTF 2.0 Specification:\n\t\t\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#morph-targets\n\n\t\t\t\t\tconst baseAttribute = geometry.attributes[ attributeName ];\n\n\t\t\t\t\tif ( cache.attributes.has( this.getUID( attribute, true ) ) ) {\n\n\t\t\t\t\t\ttarget[ gltfAttributeName ] = cache.attributes.get( this.getUID( attribute, true ) );\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Clones attribute not to override\n\t\t\t\t\tconst relativeAttribute = attribute.clone();\n\n\t\t\t\t\tif ( ! geometry.morphTargetsRelative ) {\n\n\t\t\t\t\t\tfor ( let j = 0, jl = attribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tfor ( let a = 0; a < attribute.itemSize; a ++ ) {\n\n\t\t\t\t\t\t\t\tif ( a === 0 ) relativeAttribute.setX( j, attribute.getX( j ) - baseAttribute.getX( j ) );\n\t\t\t\t\t\t\t\tif ( a === 1 ) relativeAttribute.setY( j, attribute.getY( j ) - baseAttribute.getY( j ) );\n\t\t\t\t\t\t\t\tif ( a === 2 ) relativeAttribute.setZ( j, attribute.getZ( j ) - baseAttribute.getZ( j ) );\n\t\t\t\t\t\t\t\tif ( a === 3 ) relativeAttribute.setW( j, attribute.getW( j ) - baseAttribute.getW( j ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttarget[ gltfAttributeName ] = this.processAccessor( relativeAttribute, geometry );\n\t\t\t\t\tcache.attributes.set( this.getUID( baseAttribute, true ), target[ gltfAttributeName ] );\n\n\t\t\t\t}\n\n\t\t\t\ttargets.push( target );\n\n\t\t\t\tweights.push( mesh.morphTargetInfluences[ i ] );\n\n\t\t\t\tif ( mesh.morphTargetDictionary !== undefined ) targetNames.push( reverseDictionary[ i ] );\n\n\t\t\t}\n\n\t\t\tmeshDef.weights = weights;\n\n\t\t\tif ( targetNames.length > 0 ) {\n\n\t\t\t\tmeshDef.extras = {};\n\t\t\t\tmeshDef.extras.targetNames = targetNames;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst isMultiMaterial = Array.isArray( mesh.material );\n\n\t\tif ( isMultiMaterial && geometry.groups.length === 0 ) return null;\n\n\t\tconst materials = isMultiMaterial ? mesh.material : [ mesh.material ];\n\t\tconst groups = isMultiMaterial ? geometry.groups : [ { materialIndex: 0, start: undefined, count: undefined } ];\n\n\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\tconst primitive = {\n\t\t\t\tmode: mode,\n\t\t\t\tattributes: attributes,\n\t\t\t};\n\n\t\t\tthis.serializeUserData( geometry, primitive );\n\n\t\t\tif ( targets.length > 0 ) primitive.targets = targets;\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\tlet cacheKey = this.getUID( geometry.index );\n\n\t\t\t\tif ( groups[ i ].start !== undefined || groups[ i ].count !== undefined ) {\n\n\t\t\t\t\tcacheKey += ':' + groups[ i ].start + ':' + groups[ i ].count;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cache.attributes.has( cacheKey ) ) {\n\n\t\t\t\t\tprimitive.indices = cache.attributes.get( cacheKey );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tprimitive.indices = this.processAccessor( geometry.index, geometry, groups[ i ].start, groups[ i ].count );\n\t\t\t\t\tcache.attributes.set( cacheKey, primitive.indices );\n\n\t\t\t\t}\n\n\t\t\t\tif ( primitive.indices === null ) delete primitive.indices;\n\n\t\t\t}\n\n\t\t\tconst material = this.processMaterial( materials[ groups[ i ].materialIndex ] );\n\n\t\t\tif ( material !== null ) primitive.material = material;\n\n\t\t\tprimitives.push( primitive );\n\n\t\t}\n\n\t\tmeshDef.primitives = primitives;\n\n\t\tif ( ! json.meshes ) json.meshes = [];\n\n\t\tthis._invokeAll( function ( ext ) {\n\n\t\t\text.writeMesh && ext.writeMesh( mesh, meshDef );\n\n\t\t} );\n\n\t\tconst index = json.meshes.push( meshDef ) - 1;\n\t\tcache.meshes.set( meshCacheKey, index );\n\t\treturn index;\n\n\t}\n\n\t/**\n\t * If a vertex attribute with a\n\t * [non-standard data type](https://registry.khronos.org/glTF/specs/2.0/glTF-2.0.html#meshes-overview)\n\t * is used, it is checked whether it is a valid data type according to the\n\t * [KHR_mesh_quantization](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_mesh_quantization/README.md)\n\t * extension.\n\t * In this case the extension is automatically added to the list of used extensions.\n\t *\n\t * @param {string} attributeName\n\t * @param {THREE.BufferAttribute} attribute\n\t */\n\tdetectMeshQuantization( attributeName, attribute ) {\n\n\t\tif ( this.extensionsUsed[ KHR_MESH_QUANTIZATION ] ) return;\n\n\t\tlet attrType = undefined;\n\n\t\tswitch ( attribute.array.constructor ) {\n\n\t\t\tcase Int8Array:\n\n\t\t\t\tattrType = 'byte';\n\n\t\t\t\tbreak;\n\n\t\t\tcase Uint8Array:\n\n\t\t\t\tattrType = 'unsigned byte';\n\n\t\t\t\tbreak;\n\n\t\t\tcase Int16Array:\n\n\t\t\t\tattrType = 'short';\n\n\t\t\t\tbreak;\n\n\t\t\tcase Uint16Array:\n\n\t\t\t\tattrType = 'unsigned short';\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.normalized ) attrType += ' normalized';\n\n\t\tconst attrNamePrefix = attributeName.split( '_', 1 )[ 0 ];\n\n\t\tif ( KHR_mesh_quantization_ExtraAttrTypes[ attrNamePrefix ] && KHR_mesh_quantization_ExtraAttrTypes[ attrNamePrefix ].includes( attrType ) ) {\n\n\t\t\tthis.extensionsUsed[ KHR_MESH_QUANTIZATION ] = true;\n\t\t\tthis.extensionsRequired[ KHR_MESH_QUANTIZATION ] = true;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Process camera\n\t * @param  {THREE.Camera} camera Camera to process\n\t * @return {Integer}      Index of the processed mesh in the \"camera\" array\n\t */\n\tprocessCamera( camera ) {\n\n\t\tconst json = this.json;\n\n\t\tif ( ! json.cameras ) json.cameras = [];\n\n\t\tconst isOrtho = camera.isOrthographicCamera;\n\n\t\tconst cameraDef = {\n\t\t\ttype: isOrtho ? 'orthographic' : 'perspective'\n\t\t};\n\n\t\tif ( isOrtho ) {\n\n\t\t\tcameraDef.orthographic = {\n\t\t\t\txmag: camera.right * 2,\n\t\t\t\tymag: camera.top * 2,\n\t\t\t\tzfar: camera.far <= 0 ? 0.001 : camera.far,\n\t\t\t\tznear: camera.near < 0 ? 0 : camera.near\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tcameraDef.perspective = {\n\t\t\t\taspectRatio: camera.aspect,\n\t\t\t\tyfov: MathUtils.degToRad( camera.fov ),\n\t\t\t\tzfar: camera.far <= 0 ? 0.001 : camera.far,\n\t\t\t\tznear: camera.near < 0 ? 0 : camera.near\n\t\t\t};\n\n\t\t}\n\n\t\t// Question: Is saving \"type\" as name intentional?\n\t\tif ( camera.name !== '' ) cameraDef.name = camera.type;\n\n\t\treturn json.cameras.push( cameraDef ) - 1;\n\n\t}\n\n\t/**\n\t * Creates glTF animation entry from AnimationClip object.\n\t *\n\t * Status:\n\t * - Only properties listed in PATH_PROPERTIES may be animated.\n\t *\n\t * @param {THREE.AnimationClip} clip\n\t * @param {THREE.Object3D} root\n\t * @return {number|null}\n\t */\n\tprocessAnimation( clip, root ) {\n\n\t\tconst json = this.json;\n\t\tconst nodeMap = this.nodeMap;\n\n\t\tif ( ! json.animations ) json.animations = [];\n\n\t\tclip = GLTFExporter.Utils.mergeMorphTargetTracks( clip.clone(), root );\n\n\t\tconst tracks = clip.tracks;\n\t\tconst channels = [];\n\t\tconst samplers = [];\n\n\t\tfor ( let i = 0; i < tracks.length; ++ i ) {\n\n\t\t\tconst track = tracks[ i ];\n\t\t\tconst trackBinding = PropertyBinding.parseTrackName( track.name );\n\t\t\tlet trackNode = PropertyBinding.findNode( root, trackBinding.nodeName );\n\t\t\tconst trackProperty = PATH_PROPERTIES[ trackBinding.propertyName ];\n\n\t\t\tif ( trackBinding.objectName === 'bones' ) {\n\n\t\t\t\tif ( trackNode.isSkinnedMesh === true ) {\n\n\t\t\t\t\ttrackNode = trackNode.skeleton.getBoneByName( trackBinding.objectIndex );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttrackNode = undefined;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ! trackNode || ! trackProperty ) {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFExporter: Could not export animation track \"%s\".', track.name );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tconst inputItemSize = 1;\n\t\t\tlet outputItemSize = track.values.length / track.times.length;\n\n\t\t\tif ( trackProperty === PATH_PROPERTIES.morphTargetInfluences ) {\n\n\t\t\t\toutputItemSize /= trackNode.morphTargetInfluences.length;\n\n\t\t\t}\n\n\t\t\tlet interpolation;\n\n\t\t\t// @TODO export CubicInterpolant(InterpolateSmooth) as CUBICSPLINE\n\n\t\t\t// Detecting glTF cubic spline interpolant by checking factory method's special property\n\t\t\t// GLTFCubicSplineInterpolant is a custom interpolant and track doesn't return\n\t\t\t// valid value from .getInterpolation().\n\t\t\tif ( track.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline === true ) {\n\n\t\t\t\tinterpolation = 'CUBICSPLINE';\n\n\t\t\t\t// itemSize of CUBICSPLINE keyframe is 9\n\t\t\t\t// (VEC3 * 3: inTangent, splineVertex, and outTangent)\n\t\t\t\t// but needs to be stored as VEC3 so dividing by 3 here.\n\t\t\t\toutputItemSize /= 3;\n\n\t\t\t} else if ( track.getInterpolation() === InterpolateDiscrete ) {\n\n\t\t\t\tinterpolation = 'STEP';\n\n\t\t\t} else {\n\n\t\t\t\tinterpolation = 'LINEAR';\n\n\t\t\t}\n\n\t\t\tsamplers.push( {\n\t\t\t\tinput: this.processAccessor( new BufferAttribute( track.times, inputItemSize ) ),\n\t\t\t\toutput: this.processAccessor( new BufferAttribute( track.values, outputItemSize ) ),\n\t\t\t\tinterpolation: interpolation\n\t\t\t} );\n\n\t\t\tchannels.push( {\n\t\t\t\tsampler: samplers.length - 1,\n\t\t\t\ttarget: {\n\t\t\t\t\tnode: nodeMap.get( trackNode ),\n\t\t\t\t\tpath: trackProperty\n\t\t\t\t}\n\t\t\t} );\n\n\t\t}\n\n\t\tjson.animations.push( {\n\t\t\tname: clip.name || 'clip_' + json.animations.length,\n\t\t\tsamplers: samplers,\n\t\t\tchannels: channels\n\t\t} );\n\n\t\treturn json.animations.length - 1;\n\n\t}\n\n\t/**\n\t * @param {THREE.Object3D} object\n\t * @return {number|null}\n\t */\n\t processSkin( object ) {\n\n\t\tconst json = this.json;\n\t\tconst nodeMap = this.nodeMap;\n\n\t\tconst node = json.nodes[ nodeMap.get( object ) ];\n\n\t\tconst skeleton = object.skeleton;\n\n\t\tif ( skeleton === undefined ) return null;\n\n\t\tconst rootJoint = object.skeleton.bones[ 0 ];\n\n\t\tif ( rootJoint === undefined ) return null;\n\n\t\tconst joints = [];\n\t\tconst inverseBindMatrices = new Float32Array( skeleton.bones.length * 16 );\n\t\tconst temporaryBoneInverse = new Matrix4();\n\n\t\tfor ( let i = 0; i < skeleton.bones.length; ++ i ) {\n\n\t\t\tjoints.push( nodeMap.get( skeleton.bones[ i ] ) );\n\t\t\ttemporaryBoneInverse.copy( skeleton.boneInverses[ i ] );\n\t\t\ttemporaryBoneInverse.multiply( object.bindMatrix ).toArray( inverseBindMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( json.skins === undefined ) json.skins = [];\n\n\t\tjson.skins.push( {\n\t\t\tinverseBindMatrices: this.processAccessor( new BufferAttribute( inverseBindMatrices, 16 ) ),\n\t\t\tjoints: joints,\n\t\t\tskeleton: nodeMap.get( rootJoint )\n\t\t} );\n\n\t\tconst skinIndex = node.skin = json.skins.length - 1;\n\n\t\treturn skinIndex;\n\n\t}\n\n\t/**\n\t * Process Object3D node\n\t * @param  {THREE.Object3D} node Object3D to processNode\n\t * @return {Integer} Index of the node in the nodes list\n\t */\n\tprocessNode( object ) {\n\n\t\tconst json = this.json;\n\t\tconst options = this.options;\n\t\tconst nodeMap = this.nodeMap;\n\n\t\tif ( ! json.nodes ) json.nodes = [];\n\n\t\tconst nodeDef = {};\n\n\t\tif ( options.trs ) {\n\n\t\t\tconst rotation = object.quaternion.toArray();\n\t\t\tconst position = object.position.toArray();\n\t\t\tconst scale = object.scale.toArray();\n\n\t\t\tif ( ! equalArray( rotation, [ 0, 0, 0, 1 ] ) ) {\n\n\t\t\t\tnodeDef.rotation = rotation;\n\n\t\t\t}\n\n\t\t\tif ( ! equalArray( position, [ 0, 0, 0 ] ) ) {\n\n\t\t\t\tnodeDef.translation = position;\n\n\t\t\t}\n\n\t\t\tif ( ! equalArray( scale, [ 1, 1, 1 ] ) ) {\n\n\t\t\t\tnodeDef.scale = scale;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( object.matrixAutoUpdate ) {\n\n\t\t\t\tobject.updateMatrix();\n\n\t\t\t}\n\n\t\t\tif ( isIdentityMatrix( object.matrix ) === false ) {\n\n\t\t\t\tnodeDef.matrix = object.matrix.elements;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// We don't export empty strings name because it represents no-name in Three.js.\n\t\tif ( object.name !== '' ) nodeDef.name = String( object.name );\n\n\t\tthis.serializeUserData( object, nodeDef );\n\n\t\tif ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\tconst meshIndex = this.processMesh( object );\n\n\t\t\tif ( meshIndex !== null ) nodeDef.mesh = meshIndex;\n\n\t\t} else if ( object.isCamera ) {\n\n\t\t\tnodeDef.camera = this.processCamera( object );\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) this.skins.push( object );\n\n\t\tif ( object.children.length > 0 ) {\n\n\t\t\tconst children = [];\n\n\t\t\tfor ( let i = 0, l = object.children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = object.children[ i ];\n\n\t\t\t\tif ( child.visible || options.onlyVisible === false ) {\n\n\t\t\t\t\tconst nodeIndex = this.processNode( child );\n\n\t\t\t\t\tif ( nodeIndex !== null ) children.push( nodeIndex );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( children.length > 0 ) nodeDef.children = children;\n\n\t\t}\n\n\t\tthis._invokeAll( function ( ext ) {\n\n\t\t\text.writeNode && ext.writeNode( object, nodeDef );\n\n\t\t} );\n\n\t\tconst nodeIndex = json.nodes.push( nodeDef ) - 1;\n\t\tnodeMap.set( object, nodeIndex );\n\t\treturn nodeIndex;\n\n\t}\n\n\t/**\n\t * Process Scene\n\t * @param  {Scene} node Scene to process\n\t */\n\tprocessScene( scene ) {\n\n\t\tconst json = this.json;\n\t\tconst options = this.options;\n\n\t\tif ( ! json.scenes ) {\n\n\t\t\tjson.scenes = [];\n\t\t\tjson.scene = 0;\n\n\t\t}\n\n\t\tconst sceneDef = {};\n\n\t\tif ( scene.name !== '' ) sceneDef.name = scene.name;\n\n\t\tjson.scenes.push( sceneDef );\n\n\t\tconst nodes = [];\n\n\t\tfor ( let i = 0, l = scene.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = scene.children[ i ];\n\n\t\t\tif ( child.visible || options.onlyVisible === false ) {\n\n\t\t\t\tconst nodeIndex = this.processNode( child );\n\n\t\t\t\tif ( nodeIndex !== null ) nodes.push( nodeIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( nodes.length > 0 ) sceneDef.nodes = nodes;\n\n\t\tthis.serializeUserData( scene, sceneDef );\n\n\t}\n\n\t/**\n\t * Creates a Scene to hold a list of objects and parse it\n\t * @param  {Array} objects List of objects to process\n\t */\n\tprocessObjects( objects ) {\n\n\t\tconst scene = new Scene();\n\t\tscene.name = 'AuxScene';\n\n\t\tfor ( let i = 0; i < objects.length; i ++ ) {\n\n\t\t\t// We push directly to children instead of calling `add` to prevent\n\t\t\t// modify the .parent and break its original scene and hierarchy\n\t\t\tscene.children.push( objects[ i ] );\n\n\t\t}\n\n\t\tthis.processScene( scene );\n\n\t}\n\n\t/**\n\t * @param {THREE.Object3D|Array<THREE.Object3D>} input\n\t */\n\tprocessInput( input ) {\n\n\t\tconst options = this.options;\n\n\t\tinput = input instanceof Array ? input : [ input ];\n\n\t\tthis._invokeAll( function ( ext ) {\n\n\t\t\text.beforeParse && ext.beforeParse( input );\n\n\t\t} );\n\n\t\tconst objectsWithoutScene = [];\n\n\t\tfor ( let i = 0; i < input.length; i ++ ) {\n\n\t\t\tif ( input[ i ] instanceof Scene ) {\n\n\t\t\t\tthis.processScene( input[ i ] );\n\n\t\t\t} else {\n\n\t\t\t\tobjectsWithoutScene.push( input[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( objectsWithoutScene.length > 0 ) this.processObjects( objectsWithoutScene );\n\n\t\tfor ( let i = 0; i < this.skins.length; ++ i ) {\n\n\t\t\tthis.processSkin( this.skins[ i ] );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < options.animations.length; ++ i ) {\n\n\t\t\tthis.processAnimation( options.animations[ i ], input[ 0 ] );\n\n\t\t}\n\n\t\tthis._invokeAll( function ( ext ) {\n\n\t\t\text.afterParse && ext.afterParse( input );\n\n\t\t} );\n\n\t}\n\n\t_invokeAll( func ) {\n\n\t\tfor ( let i = 0, il = this.plugins.length; i < il; i ++ ) {\n\n\t\t\tfunc( this.plugins[ i ] );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Punctual Lights Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n */\nclass GLTFLightExtension {\n\n\tconstructor( writer ) {\n\n\t\tthis.writer = writer;\n\t\tthis.name = 'KHR_lights_punctual';\n\n\t}\n\n\twriteNode( light, nodeDef ) {\n\n\t\tif ( ! light.isLight ) return;\n\n\t\tif ( ! light.isDirectionalLight && ! light.isPointLight && ! light.isSpotLight ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFExporter: Only directional, point, and spot lights are supported.', light );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst writer = this.writer;\n\t\tconst json = writer.json;\n\t\tconst extensionsUsed = writer.extensionsUsed;\n\n\t\tconst lightDef = {};\n\n\t\tif ( light.name ) lightDef.name = light.name;\n\n\t\tlightDef.color = light.color.toArray();\n\n\t\tlightDef.intensity = light.intensity;\n\n\t\tif ( light.isDirectionalLight ) {\n\n\t\t\tlightDef.type = 'directional';\n\n\t\t} else if ( light.isPointLight ) {\n\n\t\t\tlightDef.type = 'point';\n\n\t\t\tif ( light.distance > 0 ) lightDef.range = light.distance;\n\n\t\t} else if ( light.isSpotLight ) {\n\n\t\t\tlightDef.type = 'spot';\n\n\t\t\tif ( light.distance > 0 ) lightDef.range = light.distance;\n\n\t\t\tlightDef.spot = {};\n\t\t\tlightDef.spot.innerConeAngle = ( 1.0 - light.penumbra ) * light.angle;\n\t\t\tlightDef.spot.outerConeAngle = light.angle;\n\n\t\t}\n\n\t\tif ( light.decay !== undefined && light.decay !== 2 ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFExporter: Light decay may be lost. glTF is physically-based, '\n\t\t\t\t+ 'and expects light.decay=2.' );\n\n\t\t}\n\n\t\tif ( light.target\n\t\t\t\t&& ( light.target.parent !== light\n\t\t\t\t|| light.target.position.x !== 0\n\t\t\t\t|| light.target.position.y !== 0\n\t\t\t\t|| light.target.position.z !== - 1 ) ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFExporter: Light direction may be lost. For best results, '\n\t\t\t\t+ 'make light.target a child of the light with position 0,0,-1.' );\n\n\t\t}\n\n\t\tif ( ! extensionsUsed[ this.name ] ) {\n\n\t\t\tjson.extensions = json.extensions || {};\n\t\t\tjson.extensions[ this.name ] = { lights: [] };\n\t\t\textensionsUsed[ this.name ] = true;\n\n\t\t}\n\n\t\tconst lights = json.extensions[ this.name ].lights;\n\t\tlights.push( lightDef );\n\n\t\tnodeDef.extensions = nodeDef.extensions || {};\n\t\tnodeDef.extensions[ this.name ] = { light: lights.length - 1 };\n\n\t}\n\n}\n\n/**\n * Unlit Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n */\nclass GLTFMaterialsUnlitExtension {\n\n\tconstructor( writer ) {\n\n\t\tthis.writer = writer;\n\t\tthis.name = 'KHR_materials_unlit';\n\n\t}\n\n\twriteMaterial( material, materialDef ) {\n\n\t\tif ( ! material.isMeshBasicMaterial ) return;\n\n\t\tconst writer = this.writer;\n\t\tconst extensionsUsed = writer.extensionsUsed;\n\n\t\tmaterialDef.extensions = materialDef.extensions || {};\n\t\tmaterialDef.extensions[ this.name ] = {};\n\n\t\textensionsUsed[ this.name ] = true;\n\n\t\tmaterialDef.pbrMetallicRoughness.metallicFactor = 0.0;\n\t\tmaterialDef.pbrMetallicRoughness.roughnessFactor = 0.9;\n\n\t}\n\n}\n\n/**\n * Clearcoat Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_clearcoat\n */\nclass GLTFMaterialsClearcoatExtension {\n\n\tconstructor( writer ) {\n\n\t\tthis.writer = writer;\n\t\tthis.name = 'KHR_materials_clearcoat';\n\n\t}\n\n\twriteMaterial( material, materialDef ) {\n\n\t\tif ( ! material.isMeshPhysicalMaterial || material.clearcoat === 0 ) return;\n\n\t\tconst writer = this.writer;\n\t\tconst extensionsUsed = writer.extensionsUsed;\n\n\t\tconst extensionDef = {};\n\n\t\textensionDef.clearcoatFactor = material.clearcoat;\n\n\t\tif ( material.clearcoatMap ) {\n\n\t\t\tconst clearcoatMapDef = {\n\t\t\t\tindex: writer.processTexture( material.clearcoatMap ),\n\t\t\t\ttexCoord: material.clearcoatMap.channel\n\t\t\t};\n\t\t\twriter.applyTextureTransform( clearcoatMapDef, material.clearcoatMap );\n\t\t\textensionDef.clearcoatTexture = clearcoatMapDef;\n\n\t\t}\n\n\t\textensionDef.clearcoatRoughnessFactor = material.clearcoatRoughness;\n\n\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\tconst clearcoatRoughnessMapDef = {\n\t\t\t\tindex: writer.processTexture( material.clearcoatRoughnessMap ),\n\t\t\t\ttexCoord: material.clearcoatRoughnessMap.channel\n\t\t\t};\n\t\t\twriter.applyTextureTransform( clearcoatRoughnessMapDef, material.clearcoatRoughnessMap );\n\t\t\textensionDef.clearcoatRoughnessTexture = clearcoatRoughnessMapDef;\n\n\t\t}\n\n\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\tconst clearcoatNormalMapDef = {\n\t\t\t\tindex: writer.processTexture( material.clearcoatNormalMap ),\n\t\t\t\ttexCoord: material.clearcoatNormalMap.channel\n\t\t\t};\n\t\t\twriter.applyTextureTransform( clearcoatNormalMapDef, material.clearcoatNormalMap );\n\t\t\textensionDef.clearcoatNormalTexture = clearcoatNormalMapDef;\n\n\t\t}\n\n\t\tmaterialDef.extensions = materialDef.extensions || {};\n\t\tmaterialDef.extensions[ this.name ] = extensionDef;\n\n\t\textensionsUsed[ this.name ] = true;\n\n\n\t}\n\n}\n\n/**\n * Iridescence Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_iridescence\n */\nclass GLTFMaterialsIridescenceExtension {\n\n\tconstructor( writer ) {\n\n\t\tthis.writer = writer;\n\t\tthis.name = 'KHR_materials_iridescence';\n\n\t}\n\n\twriteMaterial( material, materialDef ) {\n\n\t\tif ( ! material.isMeshPhysicalMaterial || material.iridescence === 0 ) return;\n\n\t\tconst writer = this.writer;\n\t\tconst extensionsUsed = writer.extensionsUsed;\n\n\t\tconst extensionDef = {};\n\n\t\textensionDef.iridescenceFactor = material.iridescence;\n\n\t\tif ( material.iridescenceMap ) {\n\n\t\t\tconst iridescenceMapDef = {\n\t\t\t\tindex: writer.processTexture( material.iridescenceMap ),\n\t\t\t\ttexCoord: material.iridescenceMap.channel\n\t\t\t};\n\t\t\twriter.applyTextureTransform( iridescenceMapDef, material.iridescenceMap );\n\t\t\textensionDef.iridescenceTexture = iridescenceMapDef;\n\n\t\t}\n\n\t\textensionDef.iridescenceIor = material.iridescenceIOR;\n\t\textensionDef.iridescenceThicknessMinimum = material.iridescenceThicknessRange[ 0 ];\n\t\textensionDef.iridescenceThicknessMaximum = material.iridescenceThicknessRange[ 1 ];\n\n\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\tconst iridescenceThicknessMapDef = {\n\t\t\t\tindex: writer.processTexture( material.iridescenceThicknessMap ),\n\t\t\t\ttexCoord: material.iridescenceThicknessMap.channel\n\t\t\t};\n\t\t\twriter.applyTextureTransform( iridescenceThicknessMapDef, material.iridescenceThicknessMap );\n\t\t\textensionDef.iridescenceThicknessTexture = iridescenceThicknessMapDef;\n\n\t\t}\n\n\t\tmaterialDef.extensions = materialDef.extensions || {};\n\t\tmaterialDef.extensions[ this.name ] = extensionDef;\n\n\t\textensionsUsed[ this.name ] = true;\n\n\t}\n\n}\n\n/**\n * Transmission Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_transmission\n */\nclass GLTFMaterialsTransmissionExtension {\n\n\tconstructor( writer ) {\n\n\t\tthis.writer = writer;\n\t\tthis.name = 'KHR_materials_transmission';\n\n\t}\n\n\twriteMaterial( material, materialDef ) {\n\n\t\tif ( ! material.isMeshPhysicalMaterial || material.transmission === 0 ) return;\n\n\t\tconst writer = this.writer;\n\t\tconst extensionsUsed = writer.extensionsUsed;\n\n\t\tconst extensionDef = {};\n\n\t\textensionDef.transmissionFactor = material.transmission;\n\n\t\tif ( material.transmissionMap ) {\n\n\t\t\tconst transmissionMapDef = {\n\t\t\t\tindex: writer.processTexture( material.transmissionMap ),\n\t\t\t\ttexCoord: material.transmissionMap.channel\n\t\t\t};\n\t\t\twriter.applyTextureTransform( transmissionMapDef, material.transmissionMap );\n\t\t\textensionDef.transmissionTexture = transmissionMapDef;\n\n\t\t}\n\n\t\tmaterialDef.extensions = materialDef.extensions || {};\n\t\tmaterialDef.extensions[ this.name ] = extensionDef;\n\n\t\textensionsUsed[ this.name ] = true;\n\n\t}\n\n}\n\n/**\n * Materials Volume Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_volume\n */\nclass GLTFMaterialsVolumeExtension {\n\n\tconstructor( writer ) {\n\n\t\tthis.writer = writer;\n\t\tthis.name = 'KHR_materials_volume';\n\n\t}\n\n\twriteMaterial( material, materialDef ) {\n\n\t\tif ( ! material.isMeshPhysicalMaterial || material.transmission === 0 ) return;\n\n\t\tconst writer = this.writer;\n\t\tconst extensionsUsed = writer.extensionsUsed;\n\n\t\tconst extensionDef = {};\n\n\t\textensionDef.thicknessFactor = material.thickness;\n\n\t\tif ( material.thicknessMap ) {\n\n\t\t\tconst thicknessMapDef = {\n\t\t\t\tindex: writer.processTexture( material.thicknessMap ),\n\t\t\t\ttexCoord: material.thicknessMap.channel\n\t\t\t};\n\t\t\twriter.applyTextureTransform( thicknessMapDef, material.thicknessMap );\n\t\t\textensionDef.thicknessTexture = thicknessMapDef;\n\n\t\t}\n\n\t\textensionDef.attenuationDistance = material.attenuationDistance;\n\t\textensionDef.attenuationColor = material.attenuationColor.toArray();\n\n\t\tmaterialDef.extensions = materialDef.extensions || {};\n\t\tmaterialDef.extensions[ this.name ] = extensionDef;\n\n\t\textensionsUsed[ this.name ] = true;\n\n\t}\n\n}\n\n/**\n * Materials ior Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_ior\n */\nclass GLTFMaterialsIorExtension {\n\n\tconstructor( writer ) {\n\n\t\tthis.writer = writer;\n\t\tthis.name = 'KHR_materials_ior';\n\n\t}\n\n\twriteMaterial( material, materialDef ) {\n\n\t\tif ( ! material.isMeshPhysicalMaterial || material.ior === 1.5 ) return;\n\n\t\tconst writer = this.writer;\n\t\tconst extensionsUsed = writer.extensionsUsed;\n\n\t\tconst extensionDef = {};\n\n\t\textensionDef.ior = material.ior;\n\n\t\tmaterialDef.extensions = materialDef.extensions || {};\n\t\tmaterialDef.extensions[ this.name ] = extensionDef;\n\n\t\textensionsUsed[ this.name ] = true;\n\n\t}\n\n}\n\n/**\n * Materials specular Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_specular\n */\nclass GLTFMaterialsSpecularExtension {\n\n\tconstructor( writer ) {\n\n\t\tthis.writer = writer;\n\t\tthis.name = 'KHR_materials_specular';\n\n\t}\n\n\twriteMaterial( material, materialDef ) {\n\n\t\tif ( ! material.isMeshPhysicalMaterial || ( material.specularIntensity === 1.0 &&\n\t\t       material.specularColor.equals( DEFAULT_SPECULAR_COLOR ) &&\n\t\t     ! material.specularIntensityMap && ! material.specularColorTexture ) ) return;\n\n\t\tconst writer = this.writer;\n\t\tconst extensionsUsed = writer.extensionsUsed;\n\n\t\tconst extensionDef = {};\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tconst specularIntensityMapDef = {\n\t\t\t\tindex: writer.processTexture( material.specularIntensityMap ),\n\t\t\t\ttexCoord: material.specularIntensityMap.channel\n\t\t\t};\n\t\t\twriter.applyTextureTransform( specularIntensityMapDef, material.specularIntensityMap );\n\t\t\textensionDef.specularTexture = specularIntensityMapDef;\n\n\t\t}\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tconst specularColorMapDef = {\n\t\t\t\tindex: writer.processTexture( material.specularColorMap ),\n\t\t\t\ttexCoord: material.specularColorMap.channel\n\t\t\t};\n\t\t\twriter.applyTextureTransform( specularColorMapDef, material.specularColorMap );\n\t\t\textensionDef.specularColorTexture = specularColorMapDef;\n\n\t\t}\n\n\t\textensionDef.specularFactor = material.specularIntensity;\n\t\textensionDef.specularColorFactor = material.specularColor.toArray();\n\n\t\tmaterialDef.extensions = materialDef.extensions || {};\n\t\tmaterialDef.extensions[ this.name ] = extensionDef;\n\n\t\textensionsUsed[ this.name ] = true;\n\n\t}\n\n}\n\n/**\n * Sheen Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/main/extensions/2.0/Khronos/KHR_materials_sheen\n */\nclass GLTFMaterialsSheenExtension {\n\n\tconstructor( writer ) {\n\n\t\tthis.writer = writer;\n\t\tthis.name = 'KHR_materials_sheen';\n\n\t}\n\n\twriteMaterial( material, materialDef ) {\n\n\t\tif ( ! material.isMeshPhysicalMaterial || material.sheen == 0.0 ) return;\n\n\t\tconst writer = this.writer;\n\t\tconst extensionsUsed = writer.extensionsUsed;\n\n\t\tconst extensionDef = {};\n\n\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\tconst sheenRoughnessMapDef = {\n\t\t\t\tindex: writer.processTexture( material.sheenRoughnessMap ),\n\t\t\t\ttexCoord: material.sheenRoughnessMap.channel\n\t\t\t};\n\t\t\twriter.applyTextureTransform( sheenRoughnessMapDef, material.sheenRoughnessMap );\n\t\t\textensionDef.sheenRoughnessTexture = sheenRoughnessMapDef;\n\n\t\t}\n\n\t\tif ( material.sheenColorMap ) {\n\n\t\t\tconst sheenColorMapDef = {\n\t\t\t\tindex: writer.processTexture( material.sheenColorMap ),\n\t\t\t\ttexCoord: material.sheenColorMap.channel\n\t\t\t};\n\t\t\twriter.applyTextureTransform( sheenColorMapDef, material.sheenColorMap );\n\t\t\textensionDef.sheenColorTexture = sheenColorMapDef;\n\n\t\t}\n\n\t\textensionDef.sheenRoughnessFactor = material.sheenRoughness;\n\t\textensionDef.sheenColorFactor = material.sheenColor.toArray();\n\n\t\tmaterialDef.extensions = materialDef.extensions || {};\n\t\tmaterialDef.extensions[ this.name ] = extensionDef;\n\n\t\textensionsUsed[ this.name ] = true;\n\n\t}\n\n}\n\n/**\n * Anisotropy Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/main/extensions/2.0/Khronos/KHR_materials_anisotropy\n */\nclass GLTFMaterialsAnisotropyExtension {\n\n\tconstructor( writer ) {\n\n\t\tthis.writer = writer;\n\t\tthis.name = 'KHR_materials_anisotropy';\n\n\t}\n\n\twriteMaterial( material, materialDef ) {\n\n\t\tif ( ! material.isMeshPhysicalMaterial || material.anisotropy == 0.0 ) return;\n\n\t\tconst writer = this.writer;\n\t\tconst extensionsUsed = writer.extensionsUsed;\n\n\t\tconst extensionDef = {};\n\n\t\tif ( material.anisotropyMap ) {\n\n\t\t\tconst anisotropyMapDef = { index: writer.processTexture( material.anisotropyMap ) };\n\t\t\twriter.applyTextureTransform( anisotropyMapDef, material.anisotropyMap );\n\t\t\textensionDef.anisotropyTexture = anisotropyMapDef;\n\n\t\t}\n\n\t\textensionDef.anisotropyStrength = material.anisotropy;\n\t\textensionDef.anisotropyRotation = material.anisotropyRotation;\n\n\t\tmaterialDef.extensions = materialDef.extensions || {};\n\t\tmaterialDef.extensions[ this.name ] = extensionDef;\n\n\t\textensionsUsed[ this.name ] = true;\n\n\t}\n\n}\n\n/**\n * Materials Emissive Strength Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/blob/5768b3ce0ef32bc39cdf1bef10b948586635ead3/extensions/2.0/Khronos/KHR_materials_emissive_strength/README.md\n */\nclass GLTFMaterialsEmissiveStrengthExtension {\n\n\tconstructor( writer ) {\n\n\t\tthis.writer = writer;\n\t\tthis.name = 'KHR_materials_emissive_strength';\n\n\t}\n\n\twriteMaterial( material, materialDef ) {\n\n\t\tif ( ! material.isMeshStandardMaterial || material.emissiveIntensity === 1.0 ) return;\n\n\t\tconst writer = this.writer;\n\t\tconst extensionsUsed = writer.extensionsUsed;\n\n\t\tconst extensionDef = {};\n\n\t\textensionDef.emissiveStrength = material.emissiveIntensity;\n\n\t\tmaterialDef.extensions = materialDef.extensions || {};\n\t\tmaterialDef.extensions[ this.name ] = extensionDef;\n\n\t\textensionsUsed[ this.name ] = true;\n\n\t}\n\n}\n\n/**\n * GPU Instancing Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/EXT_mesh_gpu_instancing\n */\nclass GLTFMeshGpuInstancing {\n\n\tconstructor( writer ) {\n\n\t\tthis.writer = writer;\n\t\tthis.name = 'EXT_mesh_gpu_instancing';\n\n\t}\n\n\twriteNode( object, nodeDef ) {\n\n\t\tif ( ! object.isInstancedMesh ) return;\n\n\t\tconst writer = this.writer;\n\n\t\tconst mesh = object;\n\n\t\tconst translationAttr = new Float32Array( mesh.count * 3 );\n\t\tconst rotationAttr = new Float32Array( mesh.count * 4 );\n\t\tconst scaleAttr = new Float32Array( mesh.count * 3 );\n\n\t\tconst matrix = new Matrix4();\n\t\tconst position = new Vector3();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3();\n\n\t\tfor ( let i = 0; i < mesh.count; i ++ ) {\n\n\t\t\tmesh.getMatrixAt( i, matrix );\n\t\t\tmatrix.decompose( position, quaternion, scale );\n\n\t\t\tposition.toArray( translationAttr, i * 3 );\n\t\t\tquaternion.toArray( rotationAttr, i * 4 );\n\t\t\tscale.toArray( scaleAttr, i * 3 );\n\n\t\t}\n\n\t\tconst attributes = {\n\t\t\tTRANSLATION: writer.processAccessor( new BufferAttribute( translationAttr, 3 ) ),\n\t\t\tROTATION: writer.processAccessor( new BufferAttribute( rotationAttr, 4 ) ),\n\t\t\tSCALE: writer.processAccessor( new BufferAttribute( scaleAttr, 3 ) ),\n\t\t};\n\n\t\tif ( mesh.instanceColor )\n\t\t\tattributes._COLOR_0 = writer.processAccessor( mesh.instanceColor );\n\n\t\tnodeDef.extensions = nodeDef.extensions || {};\n\t\tnodeDef.extensions[ this.name ] = { attributes };\n\n\t\twriter.extensionsUsed[ this.name ] = true;\n\t\twriter.extensionsRequired[ this.name ] = true;\n\n\t}\n\n}\n\n/**\n * Static utility functions\n */\nGLTFExporter.Utils = {\n\n\tinsertKeyframe: function ( track, time ) {\n\n\t\tconst tolerance = 0.001; // 1ms\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = new track.TimeBufferType( track.times.length + 1 );\n\t\tconst values = new track.ValueBufferType( track.values.length + valueSize );\n\t\tconst interpolant = track.createInterpolant( new track.ValueBufferType( valueSize ) );\n\n\t\tlet index;\n\n\t\tif ( track.times.length === 0 ) {\n\n\t\t\ttimes[ 0 ] = time;\n\n\t\t\tfor ( let i = 0; i < valueSize; i ++ ) {\n\n\t\t\t\tvalues[ i ] = 0;\n\n\t\t\t}\n\n\t\t\tindex = 0;\n\n\t\t} else if ( time < track.times[ 0 ] ) {\n\n\t\t\tif ( Math.abs( track.times[ 0 ] - time ) < tolerance ) return 0;\n\n\t\t\ttimes[ 0 ] = time;\n\t\t\ttimes.set( track.times, 1 );\n\n\t\t\tvalues.set( interpolant.evaluate( time ), 0 );\n\t\t\tvalues.set( track.values, valueSize );\n\n\t\t\tindex = 0;\n\n\t\t} else if ( time > track.times[ track.times.length - 1 ] ) {\n\n\t\t\tif ( Math.abs( track.times[ track.times.length - 1 ] - time ) < tolerance ) {\n\n\t\t\t\treturn track.times.length - 1;\n\n\t\t\t}\n\n\t\t\ttimes[ times.length - 1 ] = time;\n\t\t\ttimes.set( track.times, 0 );\n\n\t\t\tvalues.set( track.values, 0 );\n\t\t\tvalues.set( interpolant.evaluate( time ), track.values.length );\n\n\t\t\tindex = times.length - 1;\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < track.times.length; i ++ ) {\n\n\t\t\t\tif ( Math.abs( track.times[ i ] - time ) < tolerance ) return i;\n\n\t\t\t\tif ( track.times[ i ] < time && track.times[ i + 1 ] > time ) {\n\n\t\t\t\t\ttimes.set( track.times.slice( 0, i + 1 ), 0 );\n\t\t\t\t\ttimes[ i + 1 ] = time;\n\t\t\t\t\ttimes.set( track.times.slice( i + 1 ), i + 2 );\n\n\t\t\t\t\tvalues.set( track.values.slice( 0, ( i + 1 ) * valueSize ), 0 );\n\t\t\t\t\tvalues.set( interpolant.evaluate( time ), ( i + 1 ) * valueSize );\n\t\t\t\t\tvalues.set( track.values.slice( ( i + 1 ) * valueSize ), ( i + 2 ) * valueSize );\n\n\t\t\t\t\tindex = i + 1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\ttrack.times = times;\n\t\ttrack.values = values;\n\n\t\treturn index;\n\n\t},\n\n\tmergeMorphTargetTracks: function ( clip, root ) {\n\n\t\tconst tracks = [];\n\t\tconst mergedTracks = {};\n\t\tconst sourceTracks = clip.tracks;\n\n\t\tfor ( let i = 0; i < sourceTracks.length; ++ i ) {\n\n\t\t\tlet sourceTrack = sourceTracks[ i ];\n\t\t\tconst sourceTrackBinding = PropertyBinding.parseTrackName( sourceTrack.name );\n\t\t\tconst sourceTrackNode = PropertyBinding.findNode( root, sourceTrackBinding.nodeName );\n\n\t\t\tif ( sourceTrackBinding.propertyName !== 'morphTargetInfluences' || sourceTrackBinding.propertyIndex === undefined ) {\n\n\t\t\t\t// Tracks that don't affect morph targets, or that affect all morph targets together, can be left as-is.\n\t\t\t\ttracks.push( sourceTrack );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( sourceTrack.createInterpolant !== sourceTrack.InterpolantFactoryMethodDiscrete\n\t\t\t\t&& sourceTrack.createInterpolant !== sourceTrack.InterpolantFactoryMethodLinear ) {\n\n\t\t\t\tif ( sourceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\t\t\t// This should never happen, because glTF morph target animations\n\t\t\t\t\t// affect all targets already.\n\t\t\t\t\tthrow new Error( 'THREE.GLTFExporter: Cannot merge tracks with glTF CUBICSPLINE interpolation.' );\n\n\t\t\t\t}\n\n\t\t\t\tconsole.warn( 'THREE.GLTFExporter: Morph target interpolation mode not yet supported. Using LINEAR instead.' );\n\n\t\t\t\tsourceTrack = sourceTrack.clone();\n\t\t\t\tsourceTrack.setInterpolation( InterpolateLinear );\n\n\t\t\t}\n\n\t\t\tconst targetCount = sourceTrackNode.morphTargetInfluences.length;\n\t\t\tconst targetIndex = sourceTrackNode.morphTargetDictionary[ sourceTrackBinding.propertyIndex ];\n\n\t\t\tif ( targetIndex === undefined ) {\n\n\t\t\t\tthrow new Error( 'THREE.GLTFExporter: Morph target name not found: ' + sourceTrackBinding.propertyIndex );\n\n\t\t\t}\n\n\t\t\tlet mergedTrack;\n\n\t\t\t// If this is the first time we've seen this object, create a new\n\t\t\t// track to store merged keyframe data for each morph target.\n\t\t\tif ( mergedTracks[ sourceTrackNode.uuid ] === undefined ) {\n\n\t\t\t\tmergedTrack = sourceTrack.clone();\n\n\t\t\t\tconst values = new mergedTrack.ValueBufferType( targetCount * mergedTrack.times.length );\n\n\t\t\t\tfor ( let j = 0; j < mergedTrack.times.length; j ++ ) {\n\n\t\t\t\t\tvalues[ j * targetCount + targetIndex ] = mergedTrack.values[ j ];\n\n\t\t\t\t}\n\n\t\t\t\t// We need to take into consideration the intended target node\n\t\t\t\t// of our original un-merged morphTarget animation.\n\t\t\t\tmergedTrack.name = ( sourceTrackBinding.nodeName || '' ) + '.morphTargetInfluences';\n\t\t\t\tmergedTrack.values = values;\n\n\t\t\t\tmergedTracks[ sourceTrackNode.uuid ] = mergedTrack;\n\t\t\t\ttracks.push( mergedTrack );\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst sourceInterpolant = sourceTrack.createInterpolant( new sourceTrack.ValueBufferType( 1 ) );\n\n\t\t\tmergedTrack = mergedTracks[ sourceTrackNode.uuid ];\n\n\t\t\t// For every existing keyframe of the merged track, write a (possibly\n\t\t\t// interpolated) value from the source track.\n\t\t\tfor ( let j = 0; j < mergedTrack.times.length; j ++ ) {\n\n\t\t\t\tmergedTrack.values[ j * targetCount + targetIndex ] = sourceInterpolant.evaluate( mergedTrack.times[ j ] );\n\n\t\t\t}\n\n\t\t\t// For every existing keyframe of the source track, write a (possibly\n\t\t\t// new) keyframe to the merged track. Values from the previous loop may\n\t\t\t// be written again, but keyframes are de-duplicated.\n\t\t\tfor ( let j = 0; j < sourceTrack.times.length; j ++ ) {\n\n\t\t\t\tconst keyframeIndex = this.insertKeyframe( mergedTrack, sourceTrack.times[ j ] );\n\t\t\t\tmergedTrack.values[ keyframeIndex * targetCount + targetIndex ] = sourceTrack.values[ j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tclip.tracks = tracks;\n\n\t\treturn clip;\n\n\t}\n\n};\n\nexport { GLTFExporter };\n","import {\n\tColor,\n\tMatrix3,\n\tVector2,\n\tVector3\n} from 'three';\n\nclass OBJExporter {\n\n\tparse( object ) {\n\n\t\tlet output = '';\n\n\t\tlet indexVertex = 0;\n\t\tlet indexVertexUvs = 0;\n\t\tlet indexNormals = 0;\n\n\t\tconst vertex = new Vector3();\n\t\tconst color = new Color();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\tconst face = [];\n\n\t\tfunction parseMesh( mesh ) {\n\n\t\t\tlet nbVertex = 0;\n\t\t\tlet nbNormals = 0;\n\t\t\tlet nbVertexUvs = 0;\n\n\t\t\tconst geometry = mesh.geometry;\n\n\t\t\tconst normalMatrixWorld = new Matrix3();\n\n\t\t\t// shortcuts\n\t\t\tconst vertices = geometry.getAttribute( 'position' );\n\t\t\tconst normals = geometry.getAttribute( 'normal' );\n\t\t\tconst uvs = geometry.getAttribute( 'uv' );\n\t\t\tconst indices = geometry.getIndex();\n\n\t\t\t// name of the mesh object\n\t\t\toutput += 'o ' + mesh.name + '\\n';\n\n\t\t\t// name of the mesh material\n\t\t\tif ( mesh.material && mesh.material.name ) {\n\n\t\t\t\toutput += 'usemtl ' + mesh.material.name + '\\n';\n\n\t\t\t}\n\n\t\t\t// vertices\n\n\t\t\tif ( vertices !== undefined ) {\n\n\t\t\t\tfor ( let i = 0, l = vertices.count; i < l; i ++, nbVertex ++ ) {\n\n\t\t\t\t\tvertex.fromBufferAttribute( vertices, i );\n\n\t\t\t\t\t// transform the vertex to world space\n\t\t\t\t\tvertex.applyMatrix4( mesh.matrixWorld );\n\n\t\t\t\t\t// transform the vertex to export format\n\t\t\t\t\toutput += 'v ' + vertex.x + ' ' + vertex.y + ' ' + vertex.z + '\\n';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// uvs\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\tfor ( let i = 0, l = uvs.count; i < l; i ++, nbVertexUvs ++ ) {\n\n\t\t\t\t\tuv.fromBufferAttribute( uvs, i );\n\n\t\t\t\t\t// transform the uv to export format\n\t\t\t\t\toutput += 'vt ' + uv.x + ' ' + uv.y + '\\n';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// normals\n\n\t\t\tif ( normals !== undefined ) {\n\n\t\t\t\tnormalMatrixWorld.getNormalMatrix( mesh.matrixWorld );\n\n\t\t\t\tfor ( let i = 0, l = normals.count; i < l; i ++, nbNormals ++ ) {\n\n\t\t\t\t\tnormal.fromBufferAttribute( normals, i );\n\n\t\t\t\t\t// transform the normal to world space\n\t\t\t\t\tnormal.applyMatrix3( normalMatrixWorld ).normalize();\n\n\t\t\t\t\t// transform the normal to export format\n\t\t\t\t\toutput += 'vn ' + normal.x + ' ' + normal.y + ' ' + normal.z + '\\n';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// faces\n\n\t\t\tif ( indices !== null ) {\n\n\t\t\t\tfor ( let i = 0, l = indices.count; i < l; i += 3 ) {\n\n\t\t\t\t\tfor ( let m = 0; m < 3; m ++ ) {\n\n\t\t\t\t\t\tconst j = indices.getX( i + m ) + 1;\n\n\t\t\t\t\t\tface[ m ] = ( indexVertex + j ) + ( normals || uvs ? '/' + ( uvs ? ( indexVertexUvs + j ) : '' ) + ( normals ? '/' + ( indexNormals + j ) : '' ) : '' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// transform the face to export format\n\t\t\t\t\toutput += 'f ' + face.join( ' ' ) + '\\n';\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( let i = 0, l = vertices.count; i < l; i += 3 ) {\n\n\t\t\t\t\tfor ( let m = 0; m < 3; m ++ ) {\n\n\t\t\t\t\t\tconst j = i + m + 1;\n\n\t\t\t\t\t\tface[ m ] = ( indexVertex + j ) + ( normals || uvs ? '/' + ( uvs ? ( indexVertexUvs + j ) : '' ) + ( normals ? '/' + ( indexNormals + j ) : '' ) : '' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// transform the face to export format\n\t\t\t\t\toutput += 'f ' + face.join( ' ' ) + '\\n';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// update index\n\t\t\tindexVertex += nbVertex;\n\t\t\tindexVertexUvs += nbVertexUvs;\n\t\t\tindexNormals += nbNormals;\n\n\t\t}\n\n\t\tfunction parseLine( line ) {\n\n\t\t\tlet nbVertex = 0;\n\n\t\t\tconst geometry = line.geometry;\n\t\t\tconst type = line.type;\n\n\t\t\t// shortcuts\n\t\t\tconst vertices = geometry.getAttribute( 'position' );\n\n\t\t\t// name of the line object\n\t\t\toutput += 'o ' + line.name + '\\n';\n\n\t\t\tif ( vertices !== undefined ) {\n\n\t\t\t\tfor ( let i = 0, l = vertices.count; i < l; i ++, nbVertex ++ ) {\n\n\t\t\t\t\tvertex.fromBufferAttribute( vertices, i );\n\n\t\t\t\t\t// transform the vertex to world space\n\t\t\t\t\tvertex.applyMatrix4( line.matrixWorld );\n\n\t\t\t\t\t// transform the vertex to export format\n\t\t\t\t\toutput += 'v ' + vertex.x + ' ' + vertex.y + ' ' + vertex.z + '\\n';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( type === 'Line' ) {\n\n\t\t\t\toutput += 'l ';\n\n\t\t\t\tfor ( let j = 1, l = vertices.count; j <= l; j ++ ) {\n\n\t\t\t\t\toutput += ( indexVertex + j ) + ' ';\n\n\t\t\t\t}\n\n\t\t\t\toutput += '\\n';\n\n\t\t\t}\n\n\t\t\tif ( type === 'LineSegments' ) {\n\n\t\t\t\tfor ( let j = 1, k = j + 1, l = vertices.count; j < l; j += 2, k = j + 1 ) {\n\n\t\t\t\t\toutput += 'l ' + ( indexVertex + j ) + ' ' + ( indexVertex + k ) + '\\n';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// update index\n\t\t\tindexVertex += nbVertex;\n\n\t\t}\n\n\t\tfunction parsePoints( points ) {\n\n\t\t\tlet nbVertex = 0;\n\n\t\t\tconst geometry = points.geometry;\n\n\t\t\tconst vertices = geometry.getAttribute( 'position' );\n\t\t\tconst colors = geometry.getAttribute( 'color' );\n\n\t\t\toutput += 'o ' + points.name + '\\n';\n\n\t\t\tif ( vertices !== undefined ) {\n\n\t\t\t\tfor ( let i = 0, l = vertices.count; i < l; i ++, nbVertex ++ ) {\n\n\t\t\t\t\tvertex.fromBufferAttribute( vertices, i );\n\t\t\t\t\tvertex.applyMatrix4( points.matrixWorld );\n\n\t\t\t\t\toutput += 'v ' + vertex.x + ' ' + vertex.y + ' ' + vertex.z;\n\n\t\t\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\t\t\tcolor.fromBufferAttribute( colors, i ).convertLinearToSRGB();\n\n\t\t\t\t\t\toutput += ' ' + color.r + ' ' + color.g + ' ' + color.b;\n\n\t\t\t\t\t}\n\n\t\t\t\t\toutput += '\\n';\n\n\t\t\t\t}\n\n\t\t\t\toutput += 'p ';\n\n\t\t\t\tfor ( let j = 1, l = vertices.count; j <= l; j ++ ) {\n\n\t\t\t\t\toutput += ( indexVertex + j ) + ' ';\n\n\t\t\t\t}\n\n\t\t\t\toutput += '\\n';\n\n\t\t\t}\n\n\t\t\t// update index\n\t\t\tindexVertex += nbVertex;\n\n\t\t}\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isMesh === true ) {\n\n\t\t\t\tparseMesh( child );\n\n\t\t\t}\n\n\t\t\tif ( child.isLine === true ) {\n\n\t\t\t\tparseLine( child );\n\n\t\t\t}\n\n\t\t\tif ( child.isPoints === true ) {\n\n\t\t\t\tparsePoints( child );\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn output;\n\n\t}\n\n}\n\nexport { OBJExporter };\n","import {\n\tMatrix3,\n\tVector3,\n\tColor\n} from 'three';\n\n/**\n * https://github.com/gkjohnson/ply-exporter-js\n *\n * Usage:\n *  const exporter = new PLYExporter();\n *\n *  // second argument is a list of options\n *  exporter.parse(mesh, data => console.log(data), { binary: true, excludeAttributes: [ 'color' ], littleEndian: true });\n *\n * Format Definition:\n * http://paulbourke.net/dataformats/ply/\n */\n\nclass PLYExporter {\n\n\tparse( object, onDone, options = {} ) {\n\n\t\t// Iterate over the valid meshes in the object\n\t\tfunction traverseMeshes( cb ) {\n\n\t\t\tobject.traverse( function ( child ) {\n\n\t\t\t\tif ( child.isMesh === true || child.isPoints ) {\n\n\t\t\t\t\tconst mesh = child;\n\t\t\t\t\tconst geometry = mesh.geometry;\n\n\t\t\t\t\tif ( geometry.hasAttribute( 'position' ) === true ) {\n\n\t\t\t\t\t\tcb( mesh, geometry );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t\t// Default options\n\t\tconst defaultOptions = {\n\t\t\tbinary: false,\n\t\t\texcludeAttributes: [], // normal, uv, color, index\n\t\t\tlittleEndian: false\n\t\t};\n\n\t\toptions = Object.assign( defaultOptions, options );\n\n\t\tconst excludeAttributes = options.excludeAttributes;\n\t\tlet includeIndices = true;\n\t\tlet includeNormals = false;\n\t\tlet includeColors = false;\n\t\tlet includeUVs = false;\n\n\t\t// count the vertices, check which properties are used,\n\t\t// and cache the BufferGeometry\n\t\tlet vertexCount = 0;\n\t\tlet faceCount = 0;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isMesh === true ) {\n\n\t\t\t\tconst mesh = child;\n\t\t\t\tconst geometry = mesh.geometry;\n\n\t\t\t\tconst vertices = geometry.getAttribute( 'position' );\n\t\t\t\tconst normals = geometry.getAttribute( 'normal' );\n\t\t\t\tconst uvs = geometry.getAttribute( 'uv' );\n\t\t\t\tconst colors = geometry.getAttribute( 'color' );\n\t\t\t\tconst indices = geometry.getIndex();\n\n\t\t\t\tif ( vertices === undefined ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tvertexCount += vertices.count;\n\t\t\t\tfaceCount += indices ? indices.count / 3 : vertices.count / 3;\n\n\t\t\t\tif ( normals !== undefined ) includeNormals = true;\n\n\t\t\t\tif ( uvs !== undefined ) includeUVs = true;\n\n\t\t\t\tif ( colors !== undefined ) includeColors = true;\n\n\t\t\t} else if ( child.isPoints ) {\n\n\t\t\t\tconst mesh = child;\n\t\t\t\tconst geometry = mesh.geometry;\n\n\t\t\t\tconst vertices = geometry.getAttribute( 'position' );\n\t\t\t\tconst normals = geometry.getAttribute( 'normal' );\n\t\t\t\tconst colors = geometry.getAttribute( 'color' );\n\n\t\t\t\tvertexCount += vertices.count;\n\n\t\t\t\tif ( normals !== undefined ) includeNormals = true;\n\n\t\t\t\tif ( colors !== undefined ) includeColors = true;\n\n\t\t\t\tincludeIndices = false;\n\n\t\t\t}\n\n\t\t} );\n\n\t\tconst tempColor = new Color();\n\t\tincludeIndices = includeIndices && excludeAttributes.indexOf( 'index' ) === - 1;\n\t\tincludeNormals = includeNormals && excludeAttributes.indexOf( 'normal' ) === - 1;\n\t\tincludeColors = includeColors && excludeAttributes.indexOf( 'color' ) === - 1;\n\t\tincludeUVs = includeUVs && excludeAttributes.indexOf( 'uv' ) === - 1;\n\n\n\t\tif ( includeIndices && faceCount !== Math.floor( faceCount ) ) {\n\n\t\t\t// point cloud meshes will not have an index array and may not have a\n\t\t\t// number of vertices that is divisble by 3 (and therefore representable\n\t\t\t// as triangles)\n\t\t\tconsole.error(\n\n\t\t\t\t'PLYExporter: Failed to generate a valid PLY file with triangle indices because the ' +\n\t\t\t\t'number of indices is not divisible by 3.'\n\n\t\t\t);\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst indexByteCount = 4;\n\n\t\tlet header =\n\t\t\t'ply\\n' +\n\t\t\t`format ${ options.binary ? ( options.littleEndian ? 'binary_little_endian' : 'binary_big_endian' ) : 'ascii' } 1.0\\n` +\n\t\t\t`element vertex ${vertexCount}\\n` +\n\n\t\t\t// position\n\t\t\t'property float x\\n' +\n\t\t\t'property float y\\n' +\n\t\t\t'property float z\\n';\n\n\t\tif ( includeNormals === true ) {\n\n\t\t\t// normal\n\t\t\theader +=\n\t\t\t\t'property float nx\\n' +\n\t\t\t\t'property float ny\\n' +\n\t\t\t\t'property float nz\\n';\n\n\t\t}\n\n\t\tif ( includeUVs === true ) {\n\n\t\t\t// uvs\n\t\t\theader +=\n\t\t\t\t'property float s\\n' +\n\t\t\t\t'property float t\\n';\n\n\t\t}\n\n\t\tif ( includeColors === true ) {\n\n\t\t\t// colors\n\t\t\theader +=\n\t\t\t\t'property uchar red\\n' +\n\t\t\t\t'property uchar green\\n' +\n\t\t\t\t'property uchar blue\\n';\n\n\t\t}\n\n\t\tif ( includeIndices === true ) {\n\n\t\t\t// faces\n\t\t\theader +=\n\t\t\t\t`element face ${faceCount}\\n` +\n\t\t\t\t'property list uchar int vertex_index\\n';\n\n\t\t}\n\n\t\theader += 'end_header\\n';\n\n\n\t\t// Generate attribute data\n\t\tconst vertex = new Vector3();\n\t\tconst normalMatrixWorld = new Matrix3();\n\t\tlet result = null;\n\n\t\tif ( options.binary === true ) {\n\n\t\t\t// Binary File Generation\n\t\t\tconst headerBin = new TextEncoder().encode( header );\n\n\t\t\t// 3 position values at 4 bytes\n\t\t\t// 3 normal values at 4 bytes\n\t\t\t// 3 color channels with 1 byte\n\t\t\t// 2 uv values at 4 bytes\n\t\t\tconst vertexListLength = vertexCount * ( 4 * 3 + ( includeNormals ? 4 * 3 : 0 ) + ( includeColors ? 3 : 0 ) + ( includeUVs ? 4 * 2 : 0 ) );\n\n\t\t\t// 1 byte shape desciptor\n\t\t\t// 3 vertex indices at ${indexByteCount} bytes\n\t\t\tconst faceListLength = includeIndices ? faceCount * ( indexByteCount * 3 + 1 ) : 0;\n\t\t\tconst output = new DataView( new ArrayBuffer( headerBin.length + vertexListLength + faceListLength ) );\n\t\t\tnew Uint8Array( output.buffer ).set( headerBin, 0 );\n\n\n\t\t\tlet vOffset = headerBin.length;\n\t\t\tlet fOffset = headerBin.length + vertexListLength;\n\t\t\tlet writtenVertices = 0;\n\t\t\ttraverseMeshes( function ( mesh, geometry ) {\n\n\t\t\t\tconst vertices = geometry.getAttribute( 'position' );\n\t\t\t\tconst normals = geometry.getAttribute( 'normal' );\n\t\t\t\tconst uvs = geometry.getAttribute( 'uv' );\n\t\t\t\tconst colors = geometry.getAttribute( 'color' );\n\t\t\t\tconst indices = geometry.getIndex();\n\n\t\t\t\tnormalMatrixWorld.getNormalMatrix( mesh.matrixWorld );\n\n\t\t\t\tfor ( let i = 0, l = vertices.count; i < l; i ++ ) {\n\n\t\t\t\t\tvertex.fromBufferAttribute( vertices, i );\n\n\t\t\t\t\tvertex.applyMatrix4( mesh.matrixWorld );\n\n\n\t\t\t\t\t// Position information\n\t\t\t\t\toutput.setFloat32( vOffset, vertex.x, options.littleEndian );\n\t\t\t\t\tvOffset += 4;\n\n\t\t\t\t\toutput.setFloat32( vOffset, vertex.y, options.littleEndian );\n\t\t\t\t\tvOffset += 4;\n\n\t\t\t\t\toutput.setFloat32( vOffset, vertex.z, options.littleEndian );\n\t\t\t\t\tvOffset += 4;\n\n\t\t\t\t\t// Normal information\n\t\t\t\t\tif ( includeNormals === true ) {\n\n\t\t\t\t\t\tif ( normals != null ) {\n\n\t\t\t\t\t\t\tvertex.fromBufferAttribute( normals, i );\n\n\t\t\t\t\t\t\tvertex.applyMatrix3( normalMatrixWorld ).normalize();\n\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, vertex.x, options.littleEndian );\n\t\t\t\t\t\t\tvOffset += 4;\n\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, vertex.y, options.littleEndian );\n\t\t\t\t\t\t\tvOffset += 4;\n\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, vertex.z, options.littleEndian );\n\t\t\t\t\t\t\tvOffset += 4;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, 0, options.littleEndian );\n\t\t\t\t\t\t\tvOffset += 4;\n\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, 0, options.littleEndian );\n\t\t\t\t\t\t\tvOffset += 4;\n\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, 0, options.littleEndian );\n\t\t\t\t\t\t\tvOffset += 4;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// UV information\n\t\t\t\t\tif ( includeUVs === true ) {\n\n\t\t\t\t\t\tif ( uvs != null ) {\n\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, uvs.getX( i ), options.littleEndian );\n\t\t\t\t\t\t\tvOffset += 4;\n\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, uvs.getY( i ), options.littleEndian );\n\t\t\t\t\t\t\tvOffset += 4;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, 0, options.littleEndian );\n\t\t\t\t\t\t\tvOffset += 4;\n\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, 0, options.littleEndian );\n\t\t\t\t\t\t\tvOffset += 4;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Color information\n\t\t\t\t\tif ( includeColors === true ) {\n\n\t\t\t\t\t\tif ( colors != null ) {\n\n\t\t\t\t\t\t\ttempColor\n\t\t\t\t\t\t\t\t.fromBufferAttribute( colors, i )\n\t\t\t\t\t\t\t\t.convertLinearToSRGB();\n\n\t\t\t\t\t\t\toutput.setUint8( vOffset, Math.floor( tempColor.r * 255 ) );\n\t\t\t\t\t\t\tvOffset += 1;\n\n\t\t\t\t\t\t\toutput.setUint8( vOffset, Math.floor( tempColor.g * 255 ) );\n\t\t\t\t\t\t\tvOffset += 1;\n\n\t\t\t\t\t\t\toutput.setUint8( vOffset, Math.floor( tempColor.b * 255 ) );\n\t\t\t\t\t\t\tvOffset += 1;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\toutput.setUint8( vOffset, 255 );\n\t\t\t\t\t\t\tvOffset += 1;\n\n\t\t\t\t\t\t\toutput.setUint8( vOffset, 255 );\n\t\t\t\t\t\t\tvOffset += 1;\n\n\t\t\t\t\t\t\toutput.setUint8( vOffset, 255 );\n\t\t\t\t\t\t\tvOffset += 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( includeIndices === true ) {\n\n\t\t\t\t\t// Create the face list\n\n\t\t\t\t\tif ( indices !== null ) {\n\n\t\t\t\t\t\tfor ( let i = 0, l = indices.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\toutput.setUint8( fOffset, 3 );\n\t\t\t\t\t\t\tfOffset += 1;\n\n\t\t\t\t\t\t\toutput.setUint32( fOffset, indices.getX( i + 0 ) + writtenVertices, options.littleEndian );\n\t\t\t\t\t\t\tfOffset += indexByteCount;\n\n\t\t\t\t\t\t\toutput.setUint32( fOffset, indices.getX( i + 1 ) + writtenVertices, options.littleEndian );\n\t\t\t\t\t\t\tfOffset += indexByteCount;\n\n\t\t\t\t\t\t\toutput.setUint32( fOffset, indices.getX( i + 2 ) + writtenVertices, options.littleEndian );\n\t\t\t\t\t\t\tfOffset += indexByteCount;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( let i = 0, l = vertices.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\toutput.setUint8( fOffset, 3 );\n\t\t\t\t\t\t\tfOffset += 1;\n\n\t\t\t\t\t\t\toutput.setUint32( fOffset, writtenVertices + i, options.littleEndian );\n\t\t\t\t\t\t\tfOffset += indexByteCount;\n\n\t\t\t\t\t\t\toutput.setUint32( fOffset, writtenVertices + i + 1, options.littleEndian );\n\t\t\t\t\t\t\tfOffset += indexByteCount;\n\n\t\t\t\t\t\t\toutput.setUint32( fOffset, writtenVertices + i + 2, options.littleEndian );\n\t\t\t\t\t\t\tfOffset += indexByteCount;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\n\t\t\t\t// Save the amount of verts we've already written so we can offset\n\t\t\t\t// the face index on the next mesh\n\t\t\t\twrittenVertices += vertices.count;\n\n\t\t\t} );\n\n\t\t\tresult = output.buffer;\n\n\t\t} else {\n\n\t\t\t// Ascii File Generation\n\t\t\t// count the number of vertices\n\t\t\tlet writtenVertices = 0;\n\t\t\tlet vertexList = '';\n\t\t\tlet faceList = '';\n\n\t\t\ttraverseMeshes( function ( mesh, geometry ) {\n\n\t\t\t\tconst vertices = geometry.getAttribute( 'position' );\n\t\t\t\tconst normals = geometry.getAttribute( 'normal' );\n\t\t\t\tconst uvs = geometry.getAttribute( 'uv' );\n\t\t\t\tconst colors = geometry.getAttribute( 'color' );\n\t\t\t\tconst indices = geometry.getIndex();\n\n\t\t\t\tnormalMatrixWorld.getNormalMatrix( mesh.matrixWorld );\n\n\t\t\t\t// form each line\n\t\t\t\tfor ( let i = 0, l = vertices.count; i < l; i ++ ) {\n\n\t\t\t\t\tvertex.fromBufferAttribute( vertices, i );\n\n\t\t\t\t\tvertex.applyMatrix4( mesh.matrixWorld );\n\n\n\t\t\t\t\t// Position information\n\t\t\t\t\tlet line =\n\t\t\t\t\t\tvertex.x + ' ' +\n\t\t\t\t\t\tvertex.y + ' ' +\n\t\t\t\t\t\tvertex.z;\n\n\t\t\t\t\t// Normal information\n\t\t\t\t\tif ( includeNormals === true ) {\n\n\t\t\t\t\t\tif ( normals != null ) {\n\n\t\t\t\t\t\t\tvertex.fromBufferAttribute( normals, i );\n\n\t\t\t\t\t\t\tvertex.applyMatrix3( normalMatrixWorld ).normalize();\n\n\t\t\t\t\t\t\tline += ' ' +\n\t\t\t\t\t\t\t\tvertex.x + ' ' +\n\t\t\t\t\t\t\t\tvertex.y + ' ' +\n\t\t\t\t\t\t\t\tvertex.z;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tline += ' 0 0 0';\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// UV information\n\t\t\t\t\tif ( includeUVs === true ) {\n\n\t\t\t\t\t\tif ( uvs != null ) {\n\n\t\t\t\t\t\t\tline += ' ' +\n\t\t\t\t\t\t\t\tuvs.getX( i ) + ' ' +\n\t\t\t\t\t\t\t\tuvs.getY( i );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tline += ' 0 0';\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Color information\n\t\t\t\t\tif ( includeColors === true ) {\n\n\t\t\t\t\t\tif ( colors != null ) {\n\n\t\t\t\t\t\t\ttempColor\n\t\t\t\t\t\t\t\t.fromBufferAttribute( colors, i )\n\t\t\t\t\t\t\t\t.convertLinearToSRGB();\n\n\t\t\t\t\t\t\tline += ' ' +\n\t\t\t\t\t\t\t\tMath.floor( tempColor.r * 255 ) + ' ' +\n\t\t\t\t\t\t\t\tMath.floor( tempColor.g * 255 ) + ' ' +\n\t\t\t\t\t\t\t\tMath.floor( tempColor.b * 255 );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tline += ' 255 255 255';\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvertexList += line + '\\n';\n\n\t\t\t\t}\n\n\t\t\t\t// Create the face list\n\t\t\t\tif ( includeIndices === true ) {\n\n\t\t\t\t\tif ( indices !== null ) {\n\n\t\t\t\t\t\tfor ( let i = 0, l = indices.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\tfaceList += `3 ${ indices.getX( i + 0 ) + writtenVertices }`;\n\t\t\t\t\t\t\tfaceList += ` ${ indices.getX( i + 1 ) + writtenVertices }`;\n\t\t\t\t\t\t\tfaceList += ` ${ indices.getX( i + 2 ) + writtenVertices }\\n`;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( let i = 0, l = vertices.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\tfaceList += `3 ${ writtenVertices + i } ${ writtenVertices + i + 1 } ${ writtenVertices + i + 2 }\\n`;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfaceCount += indices ? indices.count / 3 : vertices.count / 3;\n\n\t\t\t\t}\n\n\t\t\t\twrittenVertices += vertices.count;\n\n\t\t\t} );\n\n\t\t\tresult = `${ header }${vertexList}${ includeIndices ? `${faceList}\\n` : '\\n' }`;\n\n\t\t}\n\n\t\tif ( typeof onDone === 'function' ) requestAnimationFrame( () => onDone( result ) );\n\n\t\treturn result;\n\n\t}\n\n}\n\nexport { PLYExporter };\n","import { Vector3 } from 'three';\n\n/**\n * Usage:\n *  const exporter = new STLExporter();\n *\n *  // second argument is a list of options\n *  const data = exporter.parse( mesh, { binary: true } );\n *\n */\n\nclass STLExporter {\n\n\tparse( scene, options = {} ) {\n\n\t\toptions = Object.assign( {\n\t\t\tbinary: false\n\t\t}, options );\n\n\t\tconst binary = options.binary;\n\n\t\t//\n\n\t\tconst objects = [];\n\t\tlet triangles = 0;\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tconst geometry = object.geometry;\n\n\t\t\t\tconst index = geometry.index;\n\t\t\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\t\t\ttriangles += ( index !== null ) ? ( index.count / 3 ) : ( positionAttribute.count / 3 );\n\n\t\t\t\tobjects.push( {\n\t\t\t\t\tobject3d: object,\n\t\t\t\t\tgeometry: geometry\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} );\n\n\t\tlet output;\n\t\tlet offset = 80; // skip header\n\n\t\tif ( binary === true ) {\n\n\t\t\tconst bufferLength = triangles * 2 + triangles * 3 * 4 * 4 + 80 + 4;\n\t\t\tconst arrayBuffer = new ArrayBuffer( bufferLength );\n\t\t\toutput = new DataView( arrayBuffer );\n\t\t\toutput.setUint32( offset, triangles, true ); offset += 4;\n\n\t\t} else {\n\n\t\t\toutput = '';\n\t\t\toutput += 'solid exported\\n';\n\n\t\t}\n\n\t\tconst vA = new Vector3();\n\t\tconst vB = new Vector3();\n\t\tconst vC = new Vector3();\n\t\tconst cb = new Vector3();\n\t\tconst ab = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tfor ( let i = 0, il = objects.length; i < il; i ++ ) {\n\n\t\t\tconst object = objects[ i ].object3d;\n\t\t\tconst geometry = objects[ i ].geometry;\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t// indexed geometry\n\n\t\t\t\tfor ( let j = 0; j < index.count; j += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( j + 0 );\n\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\twriteFace( a, b, c, positionAttribute, object );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed geometry\n\n\t\t\t\tfor ( let j = 0; j < positionAttribute.count; j += 3 ) {\n\n\t\t\t\t\tconst a = j + 0;\n\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\twriteFace( a, b, c, positionAttribute, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( binary === false ) {\n\n\t\t\toutput += 'endsolid exported\\n';\n\n\t\t}\n\n\t\treturn output;\n\n\t\tfunction writeFace( a, b, c, positionAttribute, object ) {\n\n\t\t\tvA.fromBufferAttribute( positionAttribute, a );\n\t\t\tvB.fromBufferAttribute( positionAttribute, b );\n\t\t\tvC.fromBufferAttribute( positionAttribute, c );\n\n\t\t\tif ( object.isSkinnedMesh === true ) {\n\n\t\t\t\tobject.applyBoneTransform( a, vA );\n\t\t\t\tobject.applyBoneTransform( b, vB );\n\t\t\t\tobject.applyBoneTransform( c, vC );\n\n\t\t\t}\n\n\t\t\tvA.applyMatrix4( object.matrixWorld );\n\t\t\tvB.applyMatrix4( object.matrixWorld );\n\t\t\tvC.applyMatrix4( object.matrixWorld );\n\n\t\t\twriteNormal( vA, vB, vC );\n\n\t\t\twriteVertex( vA );\n\t\t\twriteVertex( vB );\n\t\t\twriteVertex( vC );\n\n\t\t\tif ( binary === true ) {\n\n\t\t\t\toutput.setUint16( offset, 0, true ); offset += 2;\n\n\t\t\t} else {\n\n\t\t\t\toutput += '\\t\\tendloop\\n';\n\t\t\t\toutput += '\\tendfacet\\n';\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction writeNormal( vA, vB, vC ) {\n\n\t\t\tcb.subVectors( vC, vB );\n\t\t\tab.subVectors( vA, vB );\n\t\t\tcb.cross( ab ).normalize();\n\n\t\t\tnormal.copy( cb ).normalize();\n\n\t\t\tif ( binary === true ) {\n\n\t\t\t\toutput.setFloat32( offset, normal.x, true ); offset += 4;\n\t\t\t\toutput.setFloat32( offset, normal.y, true ); offset += 4;\n\t\t\t\toutput.setFloat32( offset, normal.z, true ); offset += 4;\n\n\t\t\t} else {\n\n\t\t\t\toutput += '\\tfacet normal ' + normal.x + ' ' + normal.y + ' ' + normal.z + '\\n';\n\t\t\t\toutput += '\\t\\touter loop\\n';\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction writeVertex( vertex ) {\n\n\t\t\tif ( binary === true ) {\n\n\t\t\t\toutput.setFloat32( offset, vertex.x, true ); offset += 4;\n\t\t\t\toutput.setFloat32( offset, vertex.y, true ); offset += 4;\n\t\t\t\toutput.setFloat32( offset, vertex.z, true ); offset += 4;\n\n\t\t\t} else {\n\n\t\t\t\toutput += '\\t\\t\\tvertex ' + vertex.x + ' ' + vertex.y + ' ' + vertex.z + '\\n';\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nexport { STLExporter };\n","import React, { Suspense, useRef, useState, useEffect, useCallback } from 'react'\nimport { Canvas, useFrame, useThree } from '@react-three/fiber'\nimport { OrbitControls, Text, Box, Sphere, Cylinder, useGLTF } from '@react-three/drei'\nimport { useControls } from 'leva'\nimport styled from 'styled-components'\nimport { motion } from 'framer-motion'\nimport * as THREE from 'three'\nimport { GLTFExporter } from 'three/examples/jsm/exporters/GLTFExporter'\nimport { OBJExporter } from 'three/examples/jsm/exporters/OBJExporter'\nimport { PLYExporter } from 'three/examples/jsm/exporters/PLYExporter'\nimport { STLExporter } from 'three/examples/jsm/exporters/STLExporter'\n\nconst PageContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  position: relative;\n  padding-top: 80px;\n`\n\nconst CanvasContainer = styled.div`\n  flex: 1;\n  height: calc(100vh - 80px);\n  position: relative;\n`\n\nconst InfoPanel = styled(motion.div)`\n  width: 350px;\n  background: rgba(26, 26, 26, 0.95);\n  backdrop-filter: blur(20px);\n  border-left: 1px solid rgba(255, 255, 255, 0.1);\n  padding: 2rem;\n  overflow-y: auto;\n  z-index: 100;\n`\n\nconst InfoTitle = styled.h2`\n  color: var(--accent-color);\n  font-size: 1.5rem;\n  margin-bottom: 1rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n`\n\nconst InfoDescription = styled.p`\n  color: var(--text-secondary);\n  line-height: 1.6;\n  margin-bottom: 1.5rem;\n`\n\nconst TechList = styled.ul`\n  color: var(--text-secondary);\n  margin-left: 1rem;\n  \n  li {\n    margin-bottom: 0.5rem;\n    \n    code {\n      background: rgba(0, 255, 255, 0.1);\n      color: var(--accent-color);\n      padding: 0.2rem 0.4rem;\n      border-radius: 4px;\n      font-size: 0.9rem;\n    }\n  }\n`\n\nconst CodeSection = styled.details`\n  margin-top: 2rem;\n  \n  summary {\n    color: var(--accent-color);\n    cursor: pointer;\n    font-weight: 600;\n    margin-bottom: 1rem;\n  }\n  \n  pre {\n    background: rgba(0, 0, 0, 0.5);\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    border-radius: 8px;\n    padding: 1rem;\n    overflow-x: auto;\n    font-size: 0.8rem;\n    color: var(--text-secondary);\n  }\n`\n\nconst ExportPanel = styled.div`\n  background: rgba(0, 0, 0, 0.3);\n  border-radius: 8px;\n  padding: 1rem;\n  margin: 1rem 0;\n  \n  .export-section {\n    margin-bottom: 1.5rem;\n    \n    h4 {\n      color: var(--accent-color);\n      margin-bottom: 0.5rem;\n      font-size: 1rem;\n    }\n    \n    .export-options {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      gap: 0.5rem;\n      margin-bottom: 1rem;\n    }\n  }\n  \n  .export-stats {\n    background: rgba(255, 255, 255, 0.05);\n    border-radius: 4px;\n    padding: 0.5rem;\n    margin-top: 1rem;\n    \n    .stat-row {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 0.25rem;\n      font-size: 0.8rem;\n      \n      .label {\n        color: var(--text-secondary);\n      }\n      \n      .value {\n        color: var(--accent-color);\n      }\n    }\n  }\n`\n\nconst ExportButton = styled.button`\n  background: ${props => props.primary ? 'var(--accent-color)' : 'rgba(255, 255, 255, 0.1)'};\n  color: ${props => props.primary ? '#000' : 'var(--text-secondary)'};\n  border: 1px solid ${props => props.primary ? 'var(--accent-color)' : 'rgba(255, 255, 255, 0.2)'};\n  padding: 0.5rem 1rem;\n  border-radius: 4px;\n  font-size: 0.9rem;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  width: 100%;\n  \n  &:hover {\n    background: var(--accent-color);\n    color: #000;\n    transform: translateY(-1px);\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n    transform: none;\n  }\n`\n\nconst ProgressBar = styled.div`\n  width: 100%;\n  height: 4px;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 2px;\n  overflow: hidden;\n  margin: 0.5rem 0;\n  \n  .progress-fill {\n    height: 100%;\n    background: var(--accent-color);\n    width: ${props => props.progress}%;\n    transition: width 0.3s ease;\n  }\n`\n\nconst StatusMessage = styled.div`\n  padding: 0.5rem;\n  border-radius: 4px;\n  margin: 0.5rem 0;\n  font-size: 0.8rem;\n  \n  &.success {\n    background: rgba(76, 175, 80, 0.2);\n    color: #4CAF50;\n    border: 1px solid rgba(76, 175, 80, 0.3);\n  }\n  \n  &.error {\n    background: rgba(244, 67, 54, 0.2);\n    color: #f44336;\n    border: 1px solid rgba(244, 67, 54, 0.3);\n  }\n  \n  &.info {\n    background: rgba(33, 150, 243, 0.2);\n    color: #2196F3;\n    border: 1px solid rgba(33, 150, 243, 0.3);\n  }\n`\n\n// 场景导出器类\nclass SceneExporterClass {\n  constructor() {\n    this.gltfExporter = new GLTFExporter()\n    this.objExporter = new OBJExporter()\n    this.plyExporter = new PLYExporter()\n    this.stlExporter = new STLExporter()\n  }\n  \n  async exportGLTF(scene, options = {}) {\n    return new Promise((resolve, reject) => {\n      const defaultOptions = {\n        binary: false,\n        embedImages: true,\n        animations: true,\n        includeCustomExtensions: false,\n        onlyVisible: true,\n        truncateDrawRange: true,\n        maxTextureSize: 4096\n      }\n      \n      const exportOptions = { ...defaultOptions, ...options }\n      \n      this.gltfExporter.parse(\n        scene,\n        (result) => {\n          const output = exportOptions.binary ? result : JSON.stringify(result, null, 2)\n          resolve({\n            data: output,\n            filename: `scene.${exportOptions.binary ? 'glb' : 'gltf'}`,\n            mimeType: exportOptions.binary ? 'model/gltf-binary' : 'model/gltf+json'\n          })\n        },\n        (error) => reject(error),\n        exportOptions\n      )\n    })\n  }\n  \n  async exportOBJ(scene, options = {}) {\n    return new Promise((resolve) => {\n      const result = this.objExporter.parse(scene)\n      resolve({\n        data: result,\n        filename: 'scene.obj',\n        mimeType: 'text/plain'\n      })\n    })\n  }\n  \n  async exportPLY(scene, options = {}) {\n    return new Promise((resolve) => {\n      const defaultOptions = {\n        binary: false,\n        excludeAttributes: []\n      }\n      \n      const exportOptions = { ...defaultOptions, ...options }\n      const result = this.plyExporter.parse(scene, exportOptions)\n      \n      resolve({\n        data: result,\n        filename: `scene.${exportOptions.binary ? 'ply' : 'ply'}`,\n        mimeType: exportOptions.binary ? 'application/octet-stream' : 'text/plain'\n      })\n    })\n  }\n  \n  async exportSTL(scene, options = {}) {\n    return new Promise((resolve) => {\n      const defaultOptions = {\n        binary: false\n      }\n      \n      const exportOptions = { ...defaultOptions, ...options }\n      const result = this.stlExporter.parse(scene, exportOptions)\n      \n      resolve({\n        data: result,\n        filename: `scene.${exportOptions.binary ? 'stl' : 'stl'}`,\n        mimeType: exportOptions.binary ? 'application/octet-stream' : 'text/plain'\n      })\n    })\n  }\n  \n  downloadFile(data, filename, mimeType) {\n    const blob = data instanceof Blob ? data : new Blob([data], { type: mimeType })\n    const url = URL.createObjectURL(blob)\n    \n    const link = document.createElement('a')\n    link.href = url\n    link.download = filename\n    document.body.appendChild(link)\n    link.click()\n    document.body.removeChild(link)\n    \n    URL.revokeObjectURL(url)\n  }\n}\n\n// 可导出的3D对象\nfunction ExportableObject({ position, type, color, name }) {\n  const meshRef = useRef()\n  const [selected, setSelected] = useState(false)\n  \n  useFrame((state) => {\n    if (meshRef.current) {\n      meshRef.current.rotation.x = state.clock.elapsedTime * 0.5\n      meshRef.current.rotation.y = state.clock.elapsedTime * 0.3\n      \n      if (selected) {\n        meshRef.current.scale.setScalar(1.1 + Math.sin(state.clock.elapsedTime * 5) * 0.05)\n      } else {\n        meshRef.current.scale.setScalar(1)\n      }\n    }\n  })\n  \n  const handleClick = () => {\n    setSelected(!selected)\n  }\n  \n  const renderGeometry = () => {\n    switch (type) {\n      case 'box':\n        return <Box args={[1, 1, 1]} />\n      case 'sphere':\n        return <Sphere args={[0.5, 32, 32]} />\n      case 'cylinder':\n        return <Cylinder args={[0.3, 0.3, 1, 8]} />\n      default:\n        return <Box args={[1, 1, 1]} />\n    }\n  }\n  \n  return (\n    <group\n      ref={meshRef}\n      position={position}\n      onClick={handleClick}\n      userData={{ name, type, exportable: true }}\n    >\n      {renderGeometry()}\n      <meshStandardMaterial \n        color={selected ? '#ff6b6b' : color}\n        emissive={selected ? '#330000' : '#000000'}\n        wireframe={selected}\n      />\n      \n      {/* 选中指示器 */}\n      {selected && (\n        <>\n          <Box args={[1.2, 1.2, 1.2]}>\n            <meshBasicMaterial color=\"#ff6b6b\" transparent opacity={0.2} wireframe />\n          </Box>\n          \n          <Text\n            position={[0, 1, 0]}\n            fontSize={0.2}\n            color=\"#ff6b6b\"\n            anchorX=\"center\"\n            anchorY=\"bottom\"\n          >\n            {name}\n          </Text>\n        </>\n      )}\n    </group>\n  )\n}\n\nfunction Scene() {\n  const { scene, gl, camera } = useThree()\n  const [exporter] = useState(() => new SceneExporterClass())\n  const [exportProgress, setExportProgress] = useState(0)\n  const [exportStatus, setExportStatus] = useState(null)\n  const [sceneStats, setSceneStats] = useState({\n    objects: 0,\n    triangles: 0,\n    vertices: 0,\n    textures: 0\n  })\n  \n  const {\n    showGrid,\n    showLights,\n    animationSpeed\n  } = useControls('场景设置', {\n    showGrid: { value: true, label: '显示网格' },\n    showLights: { value: true, label: '显示光源' },\n    animationSpeed: { value: 1, min: 0, max: 3, step: 0.1, label: '动画速度' }\n  })\n  \n  // 导出配置\n  const {\n    gltfBinary,\n    includeAnimations,\n    embedImages,\n    screenshotWidth,\n    screenshotHeight,\n    screenshotFormat\n  } = useControls('导出设置', {\n    gltfBinary: { value: false, label: 'GLTF二进制格式' },\n    includeAnimations: { value: true, label: '包含动画' },\n    embedImages: { value: true, label: '嵌入图像' },\n    screenshotWidth: { value: 1920, min: 512, max: 4096, step: 128, label: '截图宽度' },\n    screenshotHeight: { value: 1080, min: 512, max: 4096, step: 128, label: '截图高度' },\n    screenshotFormat: {\n      value: 'png',\n      options: { 'PNG': 'png', 'JPEG': 'jpeg', 'WebP': 'webp' },\n      label: '截图格式'\n    }\n  })\n  \n  // 计算场景统计信息\n  useFrame(() => {\n    let objects = 0\n    let triangles = 0\n    let vertices = 0\n    let textures = 0\n    \n    scene.traverse((child) => {\n      if (child.isMesh) {\n        objects++\n        if (child.geometry) {\n          const geometry = child.geometry\n          if (geometry.index) {\n            triangles += geometry.index.count / 3\n          } else if (geometry.attributes.position) {\n            triangles += geometry.attributes.position.count / 3\n          }\n          if (geometry.attributes.position) {\n            vertices += geometry.attributes.position.count\n          }\n        }\n        if (child.material) {\n          const material = Array.isArray(child.material) ? child.material : [child.material]\n          material.forEach(mat => {\n            Object.values(mat).forEach(value => {\n              if (value && value.isTexture) {\n                textures++\n              }\n            })\n          })\n        }\n      }\n    })\n    \n    setSceneStats({\n      objects: Math.round(objects),\n      triangles: Math.round(triangles),\n      vertices: Math.round(vertices),\n      textures: Math.round(textures)\n    })\n  })\n  \n  const handleExport = async (format) => {\n    setExportProgress(0)\n    setExportStatus({ type: 'info', message: `开始导出 ${format.toUpperCase()} 格式...` })\n    \n    try {\n      let result\n      \n      // 模拟进度更新\n      const progressInterval = setInterval(() => {\n        setExportProgress(prev => Math.min(prev + 10, 90))\n      }, 100)\n      \n      switch (format) {\n        case 'gltf':\n          result = await exporter.exportGLTF(scene, {\n            binary: gltfBinary,\n            animations: includeAnimations,\n            embedImages: embedImages\n          })\n          break\n          \n        case 'obj':\n          result = await exporter.exportOBJ(scene)\n          break\n          \n        case 'ply':\n          result = await exporter.exportPLY(scene, { binary: false })\n          break\n          \n        case 'stl':\n          result = await exporter.exportSTL(scene, { binary: false })\n          break\n          \n        default:\n          throw new Error(`不支持的格式: ${format}`)\n      }\n      \n      clearInterval(progressInterval)\n      setExportProgress(100)\n      \n      // 下载文件\n      exporter.downloadFile(result.data, result.filename, result.mimeType)\n      \n      setExportStatus({ \n        type: 'success', \n        message: `${format.toUpperCase()} 导出成功！文件已下载。` \n      })\n      \n      // 重置进度\n      setTimeout(() => {\n        setExportProgress(0)\n        setExportStatus(null)\n      }, 3000)\n      \n    } catch (error) {\n      setExportProgress(0)\n      setExportStatus({ \n        type: 'error', \n        message: `导出失败: ${error.message}` \n      })\n      \n      setTimeout(() => {\n        setExportStatus(null)\n      }, 5000)\n    }\n  }\n  \n  return (\n    <>\n      {/* 可导出的3D对象 */}\n      <ExportableObject \n        position={[-3, 0, 0]} \n        type=\"box\" \n        color=\"#ff6b6b\" \n        name=\"红色立方体\"\n      />\n      <ExportableObject \n        position={[-1, 0, 0]} \n        type=\"sphere\" \n        color=\"#4ecdc4\" \n        name=\"青色球体\"\n      />\n      <ExportableObject \n        position={[1, 0, 0]} \n        type=\"cylinder\" \n        color=\"#45b7d1\" \n        name=\"蓝色圆柱\"\n      />\n      <ExportableObject \n        position={[3, 0, 0]} \n        type=\"box\" \n        color=\"#96ceb4\" \n        name=\"绿色立方体\"\n      />\n      <ExportableObject \n        position={[0, 2, 0]} \n        type=\"sphere\" \n        color=\"#feca57\" \n        name=\"黄色球体\"\n      />\n      \n      {/* 地面网格 */}\n      {showGrid && (\n        <Box position={[0, -2, 0]} args={[20, 0.1, 20]}>\n          <meshStandardMaterial color=\"#2c2c2c\" wireframe />\n        </Box>\n      )}\n      \n      {/* 光照 */}\n      {showLights && (\n        <>\n          <ambientLight intensity={0.4} />\n          <directionalLight position={[10, 10, 5]} intensity={0.6} />\n          <pointLight position={[-10, 5, -10]} color=\"#ff0080\" intensity={0.3} />\n          <pointLight position={[10, 5, 10]} color=\"#0080ff\" intensity={0.3} />\n        </>\n      )}\n      \n      {/* 标题 */}\n      <Text\n        position={[0, 4, 0]}\n        fontSize={1.5}\n        color=\"#00ffff\"\n        anchorX=\"center\"\n        anchorY=\"middle\"\n      >\n        场景导出器\n      </Text>\n      \n      <Text\n        position={[0, 3.5, 0]}\n        fontSize={0.5}\n        color=\"#ffffff\"\n        anchorX=\"center\"\n        anchorY=\"middle\"\n      >\n        点击对象选择，然后导出场景\n      </Text>\n    </>\n  )\n}\n\nfunction SceneExporter() {\n  const [exportProgress, setExportProgress] = useState(0)\n  const [exportStatus, setExportStatus] = useState(null)\n  const [sceneStats, setSceneStats] = useState({\n    objects: 0,\n    triangles: 0,\n    vertices: 0,\n    textures: 0\n  })\n  \n  const handleExport = async (format) => {\n    console.log('导出格式:', format)\n  }\n  \n  return (\n    <PageContainer>\n      <CanvasContainer>\n        <Canvas\n          camera={{ position: [8, 5, 8], fov: 75 }}\n          gl={{ antialias: true, preserveDrawingBuffer: true }}\n        >\n          <Suspense fallback={null}>\n            <Scene />\n            <OrbitControls\n              enableDamping\n              dampingFactor={0.05}\n              minDistance={3}\n              maxDistance={30}\n            />\n          </Suspense>\n        </Canvas>\n      </CanvasContainer>\n      \n      <InfoPanel\n        initial={{ x: 350 }}\n        animate={{ x: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        <InfoTitle>\n          📦 场景导出器\n        </InfoTitle>\n        \n        <InfoDescription>\n          强大的3D场景导出工具，支持多种格式导出，包括GLTF、OBJ、PLY、STL等主流3D格式，以及高质量截图导出功能。\n        </InfoDescription>\n        \n        <h3 style={{ color: 'var(--accent-color)', marginBottom: '1rem' }}>支持格式</h3>\n        <TechList>\n          <li><code>GLTF/GLB</code> - 现代3D传输格式，支持动画和材质</li>\n          <li><code>OBJ</code> - 通用3D模型格式，广泛支持</li>\n          <li><code>PLY</code> - 点云和网格数据格式</li>\n          <li><code>STL</code> - 3D打印标准格式</li>\n          <li><code>PNG/JPEG</code> - 高质量截图导出</li>\n        </TechList>\n        \n        <h3 style={{ color: 'var(--accent-color)', marginBottom: '1rem' }}>导出特性</h3>\n        <TechList>\n          <li><code>选择性导出</code> - 只导出选中的对象</li>\n          <li><code>材质保留</code> - 保持原始材质和纹理</li>\n          <li><code>动画支持</code> - 导出骨骼和关键帧动画</li>\n          <li><code>压缩优化</code> - 自动优化文件大小</li>\n          <li><code>批量处理</code> - 支持批量导出多个对象</li>\n        </TechList>\n        \n        <h3 style={{ color: 'var(--accent-color)', marginBottom: '1rem' }}>技术实现</h3>\n        <TechList>\n          <li><code>GLTFExporter</code> - Three.js官方GLTF导出器</li>\n          <li><code>OBJExporter</code> - Wavefront OBJ格式导出</li>\n          <li><code>WebGL渲染</code> - 高质量离屏渲染</li>\n          <li><code>Blob API</code> - 浏览器文件下载</li>\n          <li><code>Worker线程</code> - 后台处理大文件</li>\n        </TechList>\n        \n        <h3 style={{ color: 'var(--accent-color)', marginBottom: '1rem' }}>应用场景</h3>\n        <InfoDescription>\n          • 3D模型分享和交换<br/>\n          • 3D打印文件准备<br/>\n          • 游戏资源导出<br/>\n          • 建筑可视化交付<br/>\n          • 教育演示材料\n        </InfoDescription>\n        \n        <CodeSection>\n          <summary>🔍 查看核心代码</summary>\n          <pre>{`// 场景导出器实现\nclass SceneExporter {\n  constructor() {\n    this.gltfExporter = new GLTFExporter()\n    this.objExporter = new OBJExporter()\n    this.plyExporter = new PLYExporter()\n    this.stlExporter = new STLExporter()\n  }\n  \n  // GLTF格式导出\n  async exportGLTF(scene, options = {}) {\n    return new Promise((resolve, reject) => {\n      const defaultOptions = {\n        binary: false,\n        embedImages: true,\n        animations: true,\n        includeCustomExtensions: false,\n        onlyVisible: true,\n        truncateDrawRange: true,\n        maxTextureSize: 4096\n      }\n      \n      const exportOptions = { ...defaultOptions, ...options }\n      \n      this.gltfExporter.parse(\n        scene,\n        (result) => {\n          const output = exportOptions.binary ? \n            result : JSON.stringify(result, null, 2)\n          \n          resolve({\n            data: output,\n            filename: \\`scene.\\${exportOptions.binary ? 'glb' : 'gltf'}\\`,\n            mimeType: exportOptions.binary ? \n              'model/gltf-binary' : 'model/gltf+json'\n          })\n        },\n        (error) => reject(error),\n        exportOptions\n      )\n    })\n  }\n  \n  // 文件下载\n  downloadFile(data, filename, mimeType) {\n    const blob = data instanceof Blob ? \n      data : new Blob([data], { type: mimeType })\n    \n    const url = URL.createObjectURL(blob)\n    const link = document.createElement('a')\n    \n    link.href = url\n    link.download = filename\n    link.style.display = 'none'\n    \n    document.body.appendChild(link)\n    link.click()\n    document.body.removeChild(link)\n    \n    URL.revokeObjectURL(url)\n  }\n}`}</pre>\n        </CodeSection>\n      </InfoPanel>\n    </PageContainer>\n  )\n}\n\nexport default SceneExporter"],"names":["_renderer","fullscreenQuadGeometry","fullscreenQuadMaterial","fullscreenQuad","decompress","texture","maxTextureSize","renderer","PlaneGeometry","ShaderMaterial","Uniform","SRGBColorSpace","Mesh","_camera","PerspectiveCamera","_scene","Scene","WebGLRenderer","readableTexture","Texture","KHR_mesh_quantization_ExtraAttrTypes","GLTFExporter","writer","GLTFLightExtension","GLTFMaterialsUnlitExtension","GLTFMaterialsTransmissionExtension","GLTFMaterialsVolumeExtension","GLTFMaterialsIorExtension","GLTFMaterialsSpecularExtension","GLTFMaterialsClearcoatExtension","GLTFMaterialsIridescenceExtension","GLTFMaterialsSheenExtension","GLTFMaterialsAnisotropyExtension","GLTFMaterialsEmissiveStrengthExtension","GLTFMeshGpuInstancing","callback","input","onDone","onError","options","GLTFWriter","plugins","i","il","scope","resolve","reject","WEBGL_CONSTANTS","KHR_MESH_QUANTIZATION","THREE_TO_WEBGL","NearestFilter","NearestMipmapNearestFilter","NearestMipmapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipmapLinearFilter","ClampToEdgeWrapping","RepeatWrapping","MirroredRepeatWrapping","PATH_PROPERTIES","DEFAULT_SPECULAR_COLOR","Color","GLB_HEADER_BYTES","GLB_HEADER_MAGIC","GLB_VERSION","GLB_CHUNK_PREFIX_BYTES","GLB_CHUNK_TYPE_JSON","GLB_CHUNK_TYPE_BIN","equalArray","array1","array2","element","index","stringToArrayBuffer","text","isIdentityMatrix","matrix","getMinMax","attribute","start","count","output","a","value","MathUtils","getPaddedBufferSize","bufferSize","getPaddedArrayBuffer","arrayBuffer","paddingByte","paddedLength","array","getCanvas","getToBlobPromise","canvas","mimeType","quality","buffers","json","extensionsUsed","extensionsRequired","blob","extensionsUsedList","extensionsRequiredList","reader","binaryChunk","binaryChunkPrefix","jsonChunk","jsonChunkPrefix","header","headerView","totalByteLength","glbBlob","glbReader","base64data","object","objectDef","extensionName","error","isRelativeCopy","uids","normal","v","Vector3","cache","mapDef","didTransform","transformDef","metalnessMap","roughnessMap","getEncodingConversion","map","c","CompressedTexture","metalness","roughness","width","height","context","composite","convert","data","Source","NoColorSpace","buffer","componentType","target","componentSize","byteLength","dataView","offset","bufferViewDef","geometry","types","minMax","bufferViewTarget","bufferView","accessorDef","image","format","flipY","pending","cachedImages","key","imageDef","ctx","RGBAFormat","bufferViewIndex","dataURL","samplerDef","textureDef","ext","material","materialDef","color","metalRoughTexture","metalRoughMapDef","baseColorMapDef","emissive","emissiveMapDef","normalMapDef","occlusionMapDef","DoubleSide","mesh","meshCacheKeyParts","l","meshCacheKey","mode","meshDef","attributes","primitives","targets","nameConversion","originalNormal","modifiedAttribute","attributeName","BufferAttribute","accessor","weights","targetNames","reverseDictionary","warned","gltfAttributeName","baseAttribute","relativeAttribute","j","jl","isMultiMaterial","materials","groups","primitive","cacheKey","attrType","attrNamePrefix","camera","isOrtho","cameraDef","clip","root","nodeMap","tracks","channels","samplers","track","trackBinding","PropertyBinding","trackNode","trackProperty","inputItemSize","outputItemSize","interpolation","InterpolateDiscrete","node","skeleton","rootJoint","joints","inverseBindMatrices","temporaryBoneInverse","Matrix4","nodeDef","rotation","position","scale","meshIndex","children","child","nodeIndex","scene","sceneDef","nodes","objects","objectsWithoutScene","func","light","lightDef","lights","extensionDef","clearcoatMapDef","clearcoatRoughnessMapDef","clearcoatNormalMapDef","iridescenceMapDef","iridescenceThicknessMapDef","transmissionMapDef","thicknessMapDef","specularIntensityMapDef","specularColorMapDef","sheenRoughnessMapDef","sheenColorMapDef","anisotropyMapDef","translationAttr","rotationAttr","scaleAttr","quaternion","Quaternion","time","valueSize","times","values","interpolant","mergedTracks","sourceTracks","sourceTrack","sourceTrackBinding","sourceTrackNode","InterpolateLinear","targetCount","targetIndex","mergedTrack","sourceInterpolant","keyframeIndex","OBJExporter","indexVertex","indexVertexUvs","indexNormals","vertex","uv","Vector2","face","parseMesh","nbVertex","nbNormals","nbVertexUvs","normalMatrixWorld","Matrix3","vertices","normals","uvs","indices","m","parseLine","line","type","k","parsePoints","points","colors","PLYExporter","traverseMeshes","cb","excludeAttributes","includeIndices","includeNormals","includeColors","includeUVs","vertexCount","faceCount","tempColor","indexByteCount","result","headerBin","vertexListLength","faceListLength","vOffset","fOffset","writtenVertices","vertexList","faceList","STLExporter","binary","triangles","positionAttribute","bufferLength","vA","vB","vC","ab","b","writeFace","writeNormal","writeVertex","PageContainer","styled","CanvasContainer","InfoPanel","motion","InfoTitle","InfoDescription","TechList","CodeSection","props","SceneExporterClass","exportOptions","filename","url","link","ExportableObject","name","meshRef","useRef","selected","setSelected","useState","useFrame","state","handleClick","renderGeometry","Box","Sphere","jsx","Cylinder","jsxs","Fragment","Text","gl","useThree","sceneStats","setSceneStats","showGrid","showLights","animationSpeed","useControls","textures","mat","SceneExporter","Canvas","Suspense","OrbitControls"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}